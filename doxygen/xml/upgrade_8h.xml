<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="upgrade_8h" kind="file" language="C++">
    <compoundname>upgrade.h</compoundname>
    <includedby refid="action__research_8cpp" local="yes">src/action/action_research.cpp</includedby>
    <includedby refid="command_8cpp" local="yes">src/action/command.cpp</includedby>
    <includedby refid="ai_8cpp" local="yes">src/ai/ai.cpp</includedby>
    <includedby refid="ai__resource_8cpp" local="yes">src/ai/ai_resource.cpp</includedby>
    <includedby refid="script__ai_8cpp" local="yes">src/ai/script_ai.cpp</includedby>
    <includedby refid="game_8cpp" local="yes">src/game/game.cpp</includedby>
    <includedby refid="loadgame_8cpp" local="yes">src/game/loadgame.cpp</includedby>
    <includedby refid="savegame_8cpp" local="yes">src/game/savegame.cpp</includedby>
    <includedby refid="script__spell_8cpp" local="yes">src/spell/script_spell.cpp</includedby>
    <includedby refid="spells_8cpp" local="yes">src/spell/spells.cpp</includedby>
    <includedby refid="script__player_8cpp" local="yes">src/stratagus/script_player.cpp</includedby>
    <includedby refid="botpanel_8cpp" local="yes">src/ui/botpanel.cpp</includedby>
    <includedby refid="button__checks_8cpp" local="yes">src/ui/button_checks.cpp</includedby>
    <includedby refid="mainscr_8cpp" local="yes">src/ui/mainscr.cpp</includedby>
    <includedby refid="depend_8cpp" local="yes">src/unit/depend.cpp</includedby>
    <includedby refid="script__unit_8cpp" local="yes">src/unit/script_unit.cpp</includedby>
    <includedby refid="unit_8cpp" local="yes">src/unit/unit.cpp</includedby>
    <includedby refid="upgrade_8cpp" local="yes">src/unit/upgrade.cpp</includedby>
    <invincdepgraph>
      <node id="6">
        <label>src/ai/script_ai.cpp</label>
        <link refid="script__ai_8cpp"/>
      </node>
      <node id="2">
        <label>src/action/action_research.cpp</label>
        <link refid="action__research_8cpp"/>
      </node>
      <node id="13">
        <label>src/ui/botpanel.cpp</label>
        <link refid="botpanel_8cpp"/>
      </node>
      <node id="4">
        <label>src/ai/ai.cpp</label>
        <link refid="ai_8cpp"/>
      </node>
      <node id="14">
        <label>src/ui/button_checks.cpp</label>
        <link refid="button__checks_8cpp"/>
      </node>
      <node id="7">
        <label>src/game/game.cpp</label>
        <link refid="game_8cpp"/>
      </node>
      <node id="15">
        <label>src/ui/mainscr.cpp</label>
        <link refid="mainscr_8cpp"/>
      </node>
      <node id="11">
        <label>src/spell/spells.cpp</label>
        <link refid="spells_8cpp"/>
      </node>
      <node id="18">
        <label>src/unit/unit.cpp</label>
        <link refid="unit_8cpp"/>
      </node>
      <node id="1">
        <label>src/include/upgrade.h</label>
        <link refid="upgrade_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/game/loadgame.cpp</label>
        <link refid="loadgame_8cpp"/>
      </node>
      <node id="17">
        <label>src/unit/script_unit.cpp</label>
        <link refid="script__unit_8cpp"/>
      </node>
      <node id="5">
        <label>src/ai/ai_resource.cpp</label>
        <link refid="ai__resource_8cpp"/>
      </node>
      <node id="12">
        <label>src/stratagus/script_player.cpp</label>
        <link refid="script__player_8cpp"/>
      </node>
      <node id="16">
        <label>src/unit/depend.cpp</label>
        <link refid="depend_8cpp"/>
      </node>
      <node id="19">
        <label>src/unit/upgrade.cpp</label>
        <link refid="upgrade_8cpp"/>
      </node>
      <node id="3">
        <label>src/action/command.cpp</label>
        <link refid="command_8cpp"/>
      </node>
      <node id="10">
        <label>src/spell/script_spell.cpp</label>
        <link refid="script__spell_8cpp"/>
      </node>
      <node id="9">
        <label>src/game/savegame.cpp</label>
        <link refid="savegame_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="user-defined">
      <header>upgrade.h - The upgrades headerfile.</header>
      <memberdef kind="define" id="upgrade_8h_1ae494945d9cd9b59d4c59fc952c91b93f" prot="public" static="no">
        <name>UPGRADE_MODIFIERS_MAX</name>
        <initializer>(<ref refid="stratagus_8h_1a795bf553361756b1f978bc8e71b0c833" kindref="member">UpgradeMax</ref> * 4)</initializer>
        <briefdescription>
<para>How many upgrades modifiers supported. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="51" column="9" bodyfile="src/include/upgrade.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="upgrade_8h_1a847e8615a83d94c9da3ccddba624332b" prot="public" static="no" mutable="no">
        <type><ref refid="classCUpgradeModifier" kindref="compound">CUpgradeModifier</ref> *</type>
        <definition>CUpgradeModifier* UpgradeModifiers[UPGRADE_MODIFIERS_MAX]</definition>
        <argsstring>[UPGRADE_MODIFIERS_MAX]</argsstring>
        <name>UpgradeModifiers</name>
        <briefdescription>
<para>The main user useable upgrades. </para>
        </briefdescription>
        <detaileddescription>
<para>Upgrades modifiers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="53" column="25" bodyfile="src/unit/upgrade.cpp" bodystart="71" bodyend="-1" declfile="src/include/upgrade.h" declline="53" declcolumn="25"/>
      </memberdef>
      <memberdef kind="variable" id="upgrade_8h_1ad19642c0d9af799d8a26d6cbb738a5c8" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int NumUpgradeModifiers</definition>
        <argsstring></argsstring>
        <name>NumUpgradeModifiers</name>
        <briefdescription>
<para>Number of upgrades modifiers used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="55" column="12" bodyfile="src/unit/upgrade.cpp" bodystart="73" bodyend="-1" declfile="src/include/upgrade.h" declline="55" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8h_1a0ace6a129b2840d3721c685deff2fb9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InitUpgrades</definition>
        <argsstring>()</argsstring>
        <name>InitUpgrades</name>
        <briefdescription>
<para>init upgrade/allow structures </para>
        </briefdescription>
        <detaileddescription>
<para>Init upgrade/allow structures </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="62" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="176" bodyend="178" declfile="src/include/upgrade.h" declline="62" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8h_1ae611f92ea155dd03674b2b56fba66970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void SaveUpgrades</definition>
        <argsstring>(CFile &amp;file)</argsstring>
        <name>SaveUpgrades</name>
        <param>
          <type><ref refid="classCFile" kindref="compound">CFile</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>save the upgrades </para>
        </briefdescription>
        <detaileddescription>
<para>Save state of the dependencies to file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>Output file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="64" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="207" bodyend="237" declfile="src/include/upgrade.h" declline="64" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8h_1a219c8b125626428be1c1a300f50636ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CleanUpgrades</definition>
        <argsstring>()</argsstring>
        <name>CleanUpgrades</name>
        <briefdescription>
<para>cleanup upgrade module </para>
        </briefdescription>
        <detaileddescription>
<para>Cleanup the upgrade module. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="66" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="183" bodyend="200" declfile="src/include/upgrade.h" declline="66" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8h_1afcea412a42eb1ecbfee42e06f0085c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UpgradesCclRegister</definition>
        <argsstring>()</argsstring>
        <name>UpgradesCclRegister</name>
        <briefdescription>
<para>Register CCL features for upgrades. </para>
        </briefdescription>
        <detaileddescription>
<para>Register CCL features for upgrades. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="69" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="427" bodyend="432" declfile="src/include/upgrade.h" declline="69" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8h_1a0305d54d0beafa653f91ef4a2b57951e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UnitTypeIdByIdent</definition>
        <argsstring>(const std::string &amp;sid)</argsstring>
        <name>UnitTypeIdByIdent</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sid</declname>
          <defname>ident</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>UnitType ID by identifier.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ident</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit-type identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Unit-type ID (int) or -1 if not found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="78" column="12" bodyfile="src/unit/upgrade.cpp" bodystart="447" bodyend="456" declfile="src/include/upgrade.h" declline="78" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8h_1aa2970a63d88fa8ca14b3d05d8569ee0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UpgradeIdByIdent</definition>
        <argsstring>(const std::string &amp;sid)</argsstring>
        <name>UpgradeIdByIdent</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sid</declname>
          <defname>ident</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Upgrade ID by identifier.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ident</parametername>
</parameternamelist>
<parameterdescription>
<para>The upgrade identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Upgrade ID (int) or -1 if not found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="79" column="12" bodyfile="src/unit/upgrade.cpp" bodystart="464" bodyend="473" declfile="src/include/upgrade.h" declline="79" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8h_1a8fb29aea230344e9a714008ce23478a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UpgradeAcquire</definition>
        <argsstring>(CPlayer &amp;player, const CUpgrade *upgrade)</argsstring>
        <name>UpgradeAcquire</name>
        <param>
          <type><ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>const <ref refid="classCUpgrade" kindref="compound">CUpgrade</ref> *</type>
          <declname>upgrade</declname>
        </param>
        <briefdescription>
<para>Upgrade will be acquired. </para>
        </briefdescription>
        <detaileddescription>
<para>Handle that an upgrade was acquired.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Player researching the upgrade. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upgrade</parametername>
</parameternamelist>
<parameterdescription>
<para>Upgrade ready researched. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="86" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="920" bodyend="938" declfile="src/include/upgrade.h" declline="86" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8h_1a058e92b23962e5e638af0fa133b7bbdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UpgradeLost</definition>
        <argsstring>(CPlayer &amp;player, int id)</argsstring>
        <name>UpgradeLost</name>
        <param>
          <type><ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Upgrade will be lost. </para>
        </briefdescription>
        <detaileddescription>
<para>Upgrade will be lost</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Player researching the upgrade. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Upgrade to be lost. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="88" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="947" bodyend="963" declfile="src/include/upgrade.h" declline="88" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8h_1af6155967132441daa9f469389d054594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void ApplyUpgrades</definition>
        <argsstring>()</argsstring>
        <name>ApplyUpgrades</name>
        <briefdescription>
<para>Apply researched upgrades when map is loading. </para>
        </briefdescription>
        <detaileddescription>
<para>Apply researched upgrades when map is loading</para>
<para><simplesect kind="return"><para>: void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="90" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="970" bodyend="990" declfile="src/include/upgrade.h" declline="90" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8h_1a41414444d7f049718f42417659ca5766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void ApplyIndividualUpgradeModifier</definition>
        <argsstring>(CUnit &amp;unit, const CUpgradeModifier *um)</argsstring>
        <name>ApplyIndividualUpgradeModifier</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classCUpgradeModifier" kindref="compound">CUpgradeModifier</ref> *</type>
          <declname>um</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply the modifiers of an individual upgrade.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit that will get the modifier applied </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>um</parametername>
</parameternamelist>
<parameterdescription>
<para>Upgrade modifier that does the effects </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="92" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="848" bodyend="881" declfile="src/include/upgrade.h" declline="92" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8h_1ae16b513b5f672b8d8ad4c4e417f19b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void IndividualUpgradeAcquire</definition>
        <argsstring>(CUnit &amp;unit, const CUpgrade *upgrade)</argsstring>
        <name>IndividualUpgradeAcquire</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classCUpgrade" kindref="compound">CUpgrade</ref> *</type>
          <declname>upgrade</declname>
        </param>
        <briefdescription>
<para>Apply upgrade modifier of an individual upgrade. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="93" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="992" bodyend="1010" declfile="src/include/upgrade.h" declline="93" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8h_1aa36a04a12524b19eb4be062cb8526824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void IndividualUpgradeLost</definition>
        <argsstring>(CUnit &amp;unit, const CUpgrade *upgrade)</argsstring>
        <name>IndividualUpgradeLost</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classCUpgrade" kindref="compound">CUpgrade</ref> *</type>
          <declname>upgrade</declname>
        </param>
        <briefdescription>
<para>Make a unit acquire in individual upgrade. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="94" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="1012" bodyend="1030" declfile="src/include/upgrade.h" declline="94" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8h_1a6d6db5016bca83c8f300d7f456464b4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UnitIdAllowed</definition>
        <argsstring>(const CPlayer &amp;player, int id)</argsstring>
        <name>UnitIdAllowed</name>
        <param>
          <type>const <ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Make a unit lose in individual upgrade. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the allow state of the unit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Check state of this player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit identifier.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the allow state of the unit. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="103" column="12" bodyfile="src/unit/upgrade.cpp" bodystart="1071" bodyend="1075" declfile="src/include/upgrade.h" declline="103" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8h_1adfa461aff91798a78fb699f6c997e016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void AllowUpgradeId</definition>
        <argsstring>(CPlayer &amp;player, int id, char af)</argsstring>
        <name>AllowUpgradeId</name>
        <param>
          <type><ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>char</type>
          <declname>af</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change allow for an upgrade.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Player to change </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>upgrade id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>af</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>A&apos;llow/</computeroutput>F&apos;orbid/`R&apos;eseached </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="104" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="1057" bodyend="1061" declfile="src/include/upgrade.h" declline="104" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8h_1a4bf981fde6ae6b2bb672f5ec2b562044" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char UpgradeIdAllowed</definition>
        <argsstring>(const CPlayer &amp;player, int id)</argsstring>
        <name>UpgradeIdAllowed</name>
        <param>
          <type>const <ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the allow state of an upgrade.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Check state for this player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Upgrade identifier.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the allow state of the upgrade. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="106" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="1085" bodyend="1089" declfile="src/include/upgrade.h" declline="106" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8h_1a6b835a7a7bafaa2f9c4380662cc09217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char UpgradeIdentAllowed</definition>
        <argsstring>(const CPlayer &amp;player, const std::string &amp;ident)</argsstring>
        <name>UpgradeIdentAllowed</name>
        <param>
          <type>const <ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>ident</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the allow state of an upgrade.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Check state for this player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ident</parametername>
</parameternamelist>
<parameterdescription>
<para>Upgrade identifier.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function shouldn&apos;t be used during runtime, it is only for setup. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/upgrade.h" line="107" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="1101" bodyend="1110" declfile="src/include/upgrade.h" declline="107" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/include/upgrade.h"/>
  </compounddef>
</doxygen>
