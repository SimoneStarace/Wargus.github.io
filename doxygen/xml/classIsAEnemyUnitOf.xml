<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classIsAEnemyUnitOf" kind="class" language="C++" prot="public">
    <compoundname>IsAEnemyUnitOf</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classIsAEnemyUnitOf_1af4c992d633c8bd6ae5b4962176ac6dc1" prot="private" static="no" mutable="no">
        <type>const <ref refid="classCPlayer" kindref="compound">CPlayer</ref> *</type>
        <definition>const CPlayer* IsAEnemyUnitOf::player</definition>
        <argsstring></argsstring>
        <name>player</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_resource.cpp" line="180" column="15" bodyfile="src/ai/ai_resource.cpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classIsAEnemyUnitOf_1a3d1e5cacd8b77eb934eb1419edc8b17e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>IsAEnemyUnitOf::IsAEnemyUnitOf</definition>
        <argsstring>(const CPlayer &amp;_player)</argsstring>
        <name>IsAEnemyUnitOf</name>
        <param>
          <type>const <ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>_player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_resource.cpp" line="174" column="10" bodyfile="src/ai/ai_resource.cpp" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classIsAEnemyUnitOf_1a4e5bc82ea4c285f3990a761d04483a89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsAEnemyUnitOf::operator()</definition>
        <argsstring>(const CUnit *unit) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_resource.cpp" line="175" column="6" bodyfile="src/ai/ai_resource.cpp" bodystart="175" bodyend="178"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/ai/ai_resource.cpp" line="172" column="1" bodyfile="src/ai/ai_resource.cpp" bodystart="171" bodyend="181"/>
    <listofallmembers>
      <member refid="classIsAEnemyUnitOf_1a3d1e5cacd8b77eb934eb1419edc8b17e" prot="public" virt="non-virtual"><scope>IsAEnemyUnitOf</scope><name>IsAEnemyUnitOf</name></member>
      <member refid="classIsAEnemyUnitOf_1a4e5bc82ea4c285f3990a761d04483a89" prot="public" virt="non-virtual"><scope>IsAEnemyUnitOf</scope><name>operator()</name></member>
      <member refid="classIsAEnemyUnitOf_1af4c992d633c8bd6ae5b4962176ac6dc1" prot="private" virt="non-virtual"><scope>IsAEnemyUnitOf</scope><name>player</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
