<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classAliveConstructedAndSameTypeAs" kind="class" language="C++" prot="public">
    <compoundname>AliveConstructedAndSameTypeAs</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classAliveConstructedAndSameTypeAs_1aa700f57b19eabe320fd80aa27261fadb" prot="private" static="no" mutable="no">
        <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> *</type>
        <definition>const CUnitType* AliveConstructedAndSameTypeAs::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/build.cpp" line="344" column="17" bodyfile="src/unit/build.cpp" bodystart="344" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classAliveConstructedAndSameTypeAs_1a119f47bbba2ca7ea36e05c368510b00b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>AliveConstructedAndSameTypeAs::AliveConstructedAndSameTypeAs</definition>
        <argsstring>(const CUnitType &amp;unitType)</argsstring>
        <name>AliveConstructedAndSameTypeAs</name>
        <param>
          <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;</type>
          <declname>unitType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/build.cpp" line="338" column="10" bodyfile="src/unit/build.cpp" bodystart="338" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classAliveConstructedAndSameTypeAs_1ab22c036cb7cd8e5ff5c3b9440ef44315" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool AliveConstructedAndSameTypeAs::operator()</definition>
        <argsstring>(const CUnit *unit) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/build.cpp" line="339" column="6" bodyfile="src/unit/build.cpp" bodystart="339" bodyend="342"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/unit/build.cpp" line="336" column="1" bodyfile="src/unit/build.cpp" bodystart="335" bodyend="345"/>
    <listofallmembers>
      <member refid="classAliveConstructedAndSameTypeAs_1a119f47bbba2ca7ea36e05c368510b00b" prot="public" virt="non-virtual"><scope>AliveConstructedAndSameTypeAs</scope><name>AliveConstructedAndSameTypeAs</name></member>
      <member refid="classAliveConstructedAndSameTypeAs_1ab22c036cb7cd8e5ff5c3b9440ef44315" prot="public" virt="non-virtual"><scope>AliveConstructedAndSameTypeAs</scope><name>operator()</name></member>
      <member refid="classAliveConstructedAndSameTypeAs_1aa700f57b19eabe320fd80aa27261fadb" prot="private" virt="non-virtual"><scope>AliveConstructedAndSameTypeAs</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
