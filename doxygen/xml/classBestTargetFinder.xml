<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classBestTargetFinder" kind="class" language="C++" prot="public">
    <compoundname>BestTargetFinder</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBestTargetFinder_1a546bad9c3044ad17b0de3b83a612a96f" prot="private" static="no" mutable="no">
        <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
        <definition>const CUnit* BestTargetFinder::attacker</definition>
        <argsstring></argsstring>
        <name>attacker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit_find.cpp" line="787" column="13" bodyfile="src/unit/unit_find.cpp" bodystart="787" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBestTargetFinder_1a4273709734207344349ce5ed7e7693c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>BestTargetFinder::BestTargetFinder</definition>
        <argsstring>(const CUnit &amp;a)</argsstring>
        <name>BestTargetFinder</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit_find.cpp" line="686" column="1" bodyfile="src/unit/unit_find.cpp" bodystart="686" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="classBestTargetFinder_1a01e1a605ebd6674c60e3f556762b55e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
        <definition>CUnit* BestTargetFinder::Find</definition>
        <argsstring>(const std::vector&lt; CUnit * &gt; &amp;table) const</argsstring>
        <name>Find</name>
        <param>
          <type>const std::vector&lt; <ref refid="classCUnit" kindref="compound">CUnit</ref> * &gt; &amp;</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit_find.cpp" line="690" column="7" bodyfile="src/unit/unit_find.cpp" bodystart="690" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="classBestTargetFinder_1abcee66c7aa2ceeaa12d20132a85cd2f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
        <definition>CUnit* BestTargetFinder::Find</definition>
        <argsstring>(CUnitCache &amp;cache) const</argsstring>
        <name>Find</name>
        <param>
          <type><ref refid="classCUnitCache" kindref="compound">CUnitCache</ref> &amp;</type>
          <declname>cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit_find.cpp" line="695" column="7" bodyfile="src/unit/unit_find.cpp" bodystart="695" bodyend="698"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBestTargetFinder_1a7300ef0ded704898946599fb5a3040cc" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iterator</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
        <definition>CUnit* BestTargetFinder::Find</definition>
        <argsstring>(Iterator begin, Iterator end) const</argsstring>
        <name>Find</name>
        <param>
          <type>Iterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit_find.cpp" line="702" column="7" bodyfile="src/unit/unit_find.cpp" bodystart="702" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="classBestTargetFinder_1a29fad5dbf3c9d62dbd9f853c7959a26f" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BestTargetFinder::ComputeCost</definition>
        <argsstring>(CUnit *const dest) const</argsstring>
        <name>ComputeCost</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> *const</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit_find.cpp" line="718" column="5" bodyfile="src/unit/unit_find.cpp" bodystart="718" bodyend="784"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/unit/unit_find.cpp" line="684" column="1" bodyfile="src/unit/unit_find.cpp" bodystart="683" bodyend="788"/>
    <listofallmembers>
      <member refid="classBestTargetFinder_1a546bad9c3044ad17b0de3b83a612a96f" prot="private" virt="non-virtual"><scope>BestTargetFinder</scope><name>attacker</name></member>
      <member refid="classBestTargetFinder_1a4273709734207344349ce5ed7e7693c8" prot="public" virt="non-virtual"><scope>BestTargetFinder</scope><name>BestTargetFinder</name></member>
      <member refid="classBestTargetFinder_1a29fad5dbf3c9d62dbd9f853c7959a26f" prot="private" virt="non-virtual"><scope>BestTargetFinder</scope><name>ComputeCost</name></member>
      <member refid="classBestTargetFinder_1a01e1a605ebd6674c60e3f556762b55e6" prot="public" virt="non-virtual"><scope>BestTargetFinder</scope><name>Find</name></member>
      <member refid="classBestTargetFinder_1abcee66c7aa2ceeaa12d20132a85cd2f5" prot="public" virt="non-virtual"><scope>BestTargetFinder</scope><name>Find</name></member>
      <member refid="classBestTargetFinder_1a7300ef0ded704898946599fb5a3040cc" prot="private" virt="non-virtual"><scope>BestTargetFinder</scope><name>Find</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
