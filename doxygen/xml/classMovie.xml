<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classMovie" kind="class" language="C++" prot="public">
    <compoundname>Movie</compoundname>
    <basecompoundref refid="classgcn_1_1Image" prot="public" virt="non-virtual">gcn::Image</basecompoundref>
    <includes refid="movie_8h" local="no">movie.h</includes>
      <sectiondef kind="user-defined">
      <header>movie.cpp - Movie playback functions.</header>
      <memberdef kind="function" id="classMovie_1abf1d82f3db5306141635e34cdb80273c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Movie::~Movie</definition>
        <argsstring>()</argsstring>
        <name>~Movie</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="92" column="5" bodyfile="src/video/movie.cpp" bodystart="427" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="classMovie_1a88ddf1cbb197574f765069e7c2856d77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Movie::Load</definition>
        <argsstring>(const std::string &amp;filename, int w, int h)</argsstring>
        <name>Load</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="93" column="10" bodyfile="src/video/movie.cpp" bodystart="479" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="classMovie_1afcb55852a8ac4e8dfac404a9ffce938b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref> *</type>
        <definition>void * Movie::_getData</definition>
        <argsstring>() const</argsstring>
        <name>_getData</name>
        <reimplements refid="classgcn_1_1Image_1aefcd57a2e530f2daca972188fdda65ef">_getData</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the data of the <ref refid="classImage" kindref="compound">Image</ref>. <ref refid="classImage" kindref="compound">Image</ref> data can be different things depending on what ImageLoader you use. If you for instance use the SDLImageLoader then an SDL_Surface will be returned.</para>
<para><simplesect kind="return"><para>a void pointer to the <ref refid="classImage" kindref="compound">Image</ref> data. </para>
</simplesect>
<simplesect kind="see"><para>SDLImageLoader, AllegroImageLoader </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="97" column="18" bodyfile="src/video/movie.cpp" bodystart="512" bodyend="560"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classMovie_1a9e109d9cddf553df9ded8472d88b237d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Movie::Width</definition>
        <argsstring></argsstring>
        <name>Width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="102" column="9" bodyfile="src/include/movie.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMovie_1ad6d81481d543dac1fbb4df57fa8b2466" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Movie::Height</definition>
        <argsstring></argsstring>
        <name>Height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="103" column="9" bodyfile="src/include/movie.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMovie_1af8a50dc17588e5e368abe27b778f6c9b" prot="public" static="no" mutable="no">
        <type>SDL_Surface *</type>
        <definition>SDL_Surface* Movie::surface</definition>
        <argsstring></argsstring>
        <name>surface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="104" column="17" bodyfile="src/include/movie.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMovie_1ab126098d810a9692183f6f613dfcf687" prot="public" static="no" mutable="no">
        <type><ref refid="classCFile" kindref="compound">CFile</ref> *</type>
        <definition>CFile* Movie::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="105" column="11" bodyfile="src/include/movie.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMovie_1ab021045def2a9ff22383cbf865c84c46" prot="public" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool Movie::is_dirty</definition>
        <argsstring></argsstring>
        <name>is_dirty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="106" column="18" bodyfile="src/include/movie.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMovie_1a83027653fa385fdb904c24e5bba11bf5" prot="public" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool Movie::need_data</definition>
        <argsstring></argsstring>
        <name>need_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="107" column="18" bodyfile="src/include/movie.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMovie_1aed63085789db3181c708c976156f05f4" prot="public" static="no" mutable="yes">
        <type>Uint32</type>
        <definition>Uint32 Movie::start_time</definition>
        <argsstring></argsstring>
        <name>start_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="108" column="20" bodyfile="src/include/movie.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMovie_1a47abda8222536549af82a85d861d0f13" prot="public" static="no" mutable="yes">
        <type><ref refid="structOggData" kindref="compound">OggData</ref> *</type>
        <definition>OggData* Movie::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="109" column="21" bodyfile="src/include/movie.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMovie_1a0e534f96672fedde6b95b4262343ae92" prot="public" static="no" mutable="yes">
        <type>SDL_Rect *</type>
        <definition>SDL_Rect* Movie::rect</definition>
        <argsstring></argsstring>
        <name>rect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="110" column="22" bodyfile="src/include/movie.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMovie_1ae1ff333748447213dbd1d0d8452b3861" prot="public" static="no" mutable="yes">
        <type>SDL_Texture *</type>
        <definition>SDL_Texture* Movie::yuv_overlay</definition>
        <argsstring></argsstring>
        <name>yuv_overlay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="111" column="25" bodyfile="src/include/movie.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classMovie_1a62d82e9e61d6349ae66a73d0af6667ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Movie::Movie</definition>
        <argsstring>()</argsstring>
        <name>Movie</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="90" column="5" bodyfile="src/include/movie.h" bodystart="90" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classMovie_1a33a0a4d581817dbbca6c8622500b3123" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Movie::IsPlaying</definition>
        <argsstring>() const</argsstring>
        <name>IsPlaying</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="94" column="10" bodyfile="src/include/movie.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classMovie_1aec8a961a5acd7d6b158daebb15a72ef4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int Movie::getWidth</definition>
        <argsstring>() const</argsstring>
        <name>getWidth</name>
        <reimplements refid="classgcn_1_1Image_1a36bcae4838228d574738249a87dc4464">getWidth</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the width of the <ref refid="classImage" kindref="compound">Image</ref>.</para>
<para><simplesect kind="return"><para>the image width </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="98" column="17" bodyfile="src/include/movie.h" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classMovie_1a29d50e71b75eb2208244d94b1047d67d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int Movie::getHeight</definition>
        <argsstring>() const</argsstring>
        <name>getHeight</name>
        <reimplements refid="classgcn_1_1Image_1a1cd7587f88b6932b5269051d1ba08ff9">getHeight</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the height of the <ref refid="classImage" kindref="compound">Image</ref>.</para>
<para><simplesect kind="return"><para>the image height </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="99" column="17" bodyfile="src/include/movie.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classMovie_1afca213fb942ead397356c74f4cccb726" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Movie::isDirty</definition>
        <argsstring>() const</argsstring>
        <name>isDirty</name>
        <reimplements refid="classgcn_1_1Image_1abbe772bb6faebbbe6dc8c55969f5ba4a">isDirty</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/movie.h" line="100" column="18" bodyfile="src/include/movie.h" bodystart="100" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>gcn::Image</label>
        <link refid="classgcn_1_1Image"/>
      </node>
      <node id="1">
        <label>Movie</label>
        <link refid="classMovie"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>OggData</label>
        <link refid="structOggData"/>
        <childnode refid="5" relation="usage">
          <edgelabel>File</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>gcn::ImageLoader</label>
        <link refid="classgcn_1_1ImageLoader"/>
      </node>
      <node id="2">
        <label>gcn::Image</label>
        <link refid="classgcn_1_1Image"/>
        <childnode refid="3" relation="usage">
          <edgelabel>mImageLoader</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>CFile</label>
        <link refid="classCFile"/>
      </node>
      <node id="1">
        <label>Movie</label>
        <link refid="classMovie"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/include/movie.h" line="88" column="1" bodyfile="src/include/movie.h" bodystart="87" bodyend="112"/>
    <listofallmembers>
      <member refid="classMovie_1afcb55852a8ac4e8dfac404a9ffce938b" prot="public" virt="virtual"><scope>Movie</scope><name>_getData</name></member>
      <member refid="classgcn_1_1Image_1a5c25b4d5b2b5d7d7597ebe410bc3c3ef" prot="public" virt="non-virtual"><scope>Movie</scope><name>_getImageLoader</name></member>
      <member refid="classMovie_1a47abda8222536549af82a85d861d0f13" prot="public" virt="non-virtual"><scope>Movie</scope><name>data</name></member>
      <member refid="classMovie_1ab126098d810a9692183f6f613dfcf687" prot="public" virt="non-virtual"><scope>Movie</scope><name>f</name></member>
      <member refid="classMovie_1a29d50e71b75eb2208244d94b1047d67d" prot="public" virt="virtual"><scope>Movie</scope><name>getHeight</name></member>
      <member refid="classMovie_1aec8a961a5acd7d6b158daebb15a72ef4" prot="public" virt="virtual"><scope>Movie</scope><name>getWidth</name></member>
      <member refid="classMovie_1ad6d81481d543dac1fbb4df57fa8b2466" prot="public" virt="non-virtual"><scope>Movie</scope><name>Height</name></member>
      <member refid="classgcn_1_1Image_1ad80e64dd5f3afc3f738c0ce528567f94" prot="public" virt="non-virtual"><scope>Movie</scope><name>Image</name></member>
      <member refid="classgcn_1_1Image_1a81e88caba6ef6c0ed639bf1f25e9d441" prot="public" virt="non-virtual"><scope>Movie</scope><name>Image</name></member>
      <member refid="classgcn_1_1Image_1a58edd1c45b4faeb5f789b0d036d02313" prot="protected" virt="non-virtual"><scope>Movie</scope><name>Image</name></member>
      <member refid="classMovie_1ab021045def2a9ff22383cbf865c84c46" prot="public" virt="non-virtual"><scope>Movie</scope><name>is_dirty</name></member>
      <member refid="classMovie_1afca213fb942ead397356c74f4cccb726" prot="public" virt="virtual"><scope>Movie</scope><name>isDirty</name></member>
      <member refid="classMovie_1a33a0a4d581817dbbca6c8622500b3123" prot="public" virt="non-virtual"><scope>Movie</scope><name>IsPlaying</name></member>
      <member refid="classMovie_1a88ddf1cbb197574f765069e7c2856d77" prot="public" virt="non-virtual"><scope>Movie</scope><name>Load</name></member>
      <member refid="classgcn_1_1Image_1a84c8af438a681f25fe717394fcf582da" prot="protected" virt="non-virtual"><scope>Movie</scope><name>mData</name></member>
      <member refid="classgcn_1_1Image_1ae012fbcf0cb9dcda897318f5fcb412e8" prot="protected" virt="non-virtual"><scope>Movie</scope><name>mHeight</name></member>
      <member refid="classgcn_1_1Image_1aa6c69d9bbc2e6c2282361c5e59a8a7a9" prot="protected" virt="non-virtual"><scope>Movie</scope><name>mImageLoader</name></member>
      <member refid="classgcn_1_1Image_1aac1200617b4ff587ba63a278a5c2c137" prot="protected" virt="non-virtual"><scope>Movie</scope><name>mLoadedWithImageLoader</name></member>
      <member refid="classMovie_1a62d82e9e61d6349ae66a73d0af6667ac" prot="public" virt="non-virtual"><scope>Movie</scope><name>Movie</name></member>
      <member refid="classgcn_1_1Image_1a9cf1dea27f7dee81ec7a1a7241e4a39b" prot="protected" virt="non-virtual"><scope>Movie</scope><name>mWidth</name></member>
      <member refid="classMovie_1a83027653fa385fdb904c24e5bba11bf5" prot="public" virt="non-virtual"><scope>Movie</scope><name>need_data</name></member>
      <member refid="classMovie_1a0e534f96672fedde6b95b4262343ae92" prot="public" virt="non-virtual"><scope>Movie</scope><name>rect</name></member>
      <member refid="classgcn_1_1Image_1a3206d37614fd1dd7893137f2e21c64f4" prot="public" virt="non-virtual"><scope>Movie</scope><name>setImageLoader</name></member>
      <member refid="classMovie_1aed63085789db3181c708c976156f05f4" prot="public" virt="non-virtual"><scope>Movie</scope><name>start_time</name></member>
      <member refid="classMovie_1af8a50dc17588e5e368abe27b778f6c9b" prot="public" virt="non-virtual"><scope>Movie</scope><name>surface</name></member>
      <member refid="classMovie_1a9e109d9cddf553df9ded8472d88b237d" prot="public" virt="non-virtual"><scope>Movie</scope><name>Width</name></member>
      <member refid="classMovie_1ae1ff333748447213dbd1d0d8452b3861" prot="public" virt="non-virtual"><scope>Movie</scope><name>yuv_overlay</name></member>
      <member refid="classgcn_1_1Image_1a0294f63700543e11c0f0da85601c7ae5" prot="public" virt="virtual"><scope>Movie</scope><name>~Image</name></member>
      <member refid="classMovie_1abf1d82f3db5306141635e34cdb80273c" prot="public" virt="non-virtual"><scope>Movie</scope><name>~Movie</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
