<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="net__lowlevel_8cpp" kind="file" language="C++">
    <compoundname>net_lowlevel.cpp</compoundname>
    <includes refid="stratagus_8h" local="yes">stratagus.h</includes>
    <includes refid="net__lowlevel_8h" local="yes">net_lowlevel.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">windows.h</includes>
    <includes local="no">winsock.h</includes>
    <includes local="no">ws2tcpip.h</includes>
    <includes local="no">Iphlpapi.h</includes>
    <incdepgraph>
      <node id="15">
        <label>windows.h</label>
      </node>
      <node id="17">
        <label>ws2tcpip.h</label>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="4">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="14">
        <label>errno.h</label>
      </node>
      <node id="13">
        <label>fcntl.h</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="11">
        <label>winsock2.h</label>
      </node>
      <node id="18">
        <label>Iphlpapi.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="2">
        <label>stratagus.h</label>
        <link refid="stratagus_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cstdlib</label>
      </node>
      <node id="16">
        <label>winsock.h</label>
      </node>
      <node id="1">
        <label>src/network/net_lowlevel.cpp</label>
        <link refid="net__lowlevel_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>net_lowlevel.h</label>
        <link refid="net__lowlevel_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <header>lowlevel.cpp - The network lowlevel.</header>
      <memberdef kind="variable" id="net__lowlevel_8cpp_1af975f4fc3f01dbe424d4b199ab0915bb" prot="public" static="no" mutable="no">
        <type>const typedef char *</type>
        <definition>const typedef char* setsockopttype</definition>
        <argsstring></argsstring>
        <name>setsockopttype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="56" column="20" bodyfile="src/network/net_lowlevel.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="net__lowlevel_8cpp_1a2304f404f3b33a9586a928b69bb88684" prot="public" static="no" mutable="no">
        <type>const typedef char *</type>
        <definition>const typedef char* sendtobuftype</definition>
        <argsstring></argsstring>
        <name>sendtobuftype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="59" column="20" bodyfile="src/network/net_lowlevel.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="net__lowlevel_8cpp_1a0f8d9d01f0c08b3cf1795ca68f21dfc8" prot="public" static="no" mutable="no">
        <type>const typedef char *</type>
        <definition>const typedef char* sendbuftype</definition>
        <argsstring></argsstring>
        <name>sendbuftype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="60" column="20" bodyfile="src/network/net_lowlevel.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="net__lowlevel_8cpp_1a9cb0550761cb487d96dde186bbc1853d" prot="public" static="no">
        <type>char *</type>
        <definition>typedef char* recvfrombuftype</definition>
        <argsstring></argsstring>
        <name>recvfrombuftype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="57" column="14" bodyfile="src/network/net_lowlevel.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="net__lowlevel_8cpp_1afe3c9e3ad58f020538e7523d33cd4b04" prot="public" static="no">
        <type>char *</type>
        <definition>typedef char* recvbuftype</definition>
        <argsstring></argsstring>
        <name>recvbuftype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="58" column="14" bodyfile="src/network/net_lowlevel.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="net__lowlevel_8cpp_1a6b82106923cc13b3a9734520ecc29514" prot="public" static="no">
        <type>int</type>
        <definition>typedef int socklen_t</definition>
        <argsstring></argsstring>
        <name>socklen_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="61" column="13" bodyfile="src/network/net_lowlevel.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1aeff017cacf43de9a461d615cd260afba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NetInit</definition>
        <argsstring>()</argsstring>
        <name>NetInit</name>
        <briefdescription>
<para>Hardware dependend network init. </para>
        </briefdescription>
        <detaileddescription>
<para>Hardware dependend network init. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="132" column="5" bodyfile="src/network/net_lowlevel.cpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1a1809be5bac60bd5fc3f22f123098f0c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetExit</definition>
        <argsstring>()</argsstring>
        <name>NetExit</name>
        <briefdescription>
<para>Hardware dependend network exit. </para>
        </briefdescription>
        <detaileddescription>
<para>Hardware dependend network exit. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="140" column="6" bodyfile="src/network/net_lowlevel.cpp" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1a2bc9f869094a799a42d7350bf887e760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetCloseUDP</definition>
        <argsstring>(Socket sockfd)</argsstring>
        <name>NetCloseUDP</name>
        <param>
          <type><ref refid="net__lowlevel_8h_1a6dfce000c099dd3fc424499faeae3900" kindref="member">Socket</ref></type>
          <declname>sockfd</declname>
        </param>
        <briefdescription>
<para>Close a UDP socket port. </para>
        </briefdescription>
        <detaileddescription>
<para>Close an UDP socket port.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sockfd</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket fildes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="149" column="6" bodyfile="src/network/net_lowlevel.cpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1a24a14d378cc053c3ffc447a0e9f41ce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetCloseTCP</definition>
        <argsstring>(Socket sockfd)</argsstring>
        <name>NetCloseTCP</name>
        <param>
          <type><ref refid="net__lowlevel_8h_1a6dfce000c099dd3fc424499faeae3900" kindref="member">Socket</ref></type>
          <declname>sockfd</declname>
        </param>
        <briefdescription>
<para>Close a TCP socket port. </para>
        </briefdescription>
        <detaileddescription>
<para>Close a TCP socket port.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sockfd</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket fildes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="159" column="6" bodyfile="src/network/net_lowlevel.cpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1a2ae768b4a766beeb2e6cb0476a23c452" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NetSetNonBlocking</definition>
        <argsstring>(Socket sockfd)</argsstring>
        <name>NetSetNonBlocking</name>
        <param>
          <type><ref refid="net__lowlevel_8h_1a6dfce000c099dd3fc424499faeae3900" kindref="member">Socket</ref></type>
          <declname>sockfd</declname>
        </param>
        <briefdescription>
<para>Set socket to non-blocking. </para>
        </briefdescription>
        <detaileddescription>
<para>Set socket to non-blocking.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sockfd</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success, -1 for error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="180" column="5" bodyfile="src/network/net_lowlevel.cpp" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1a4f04fa7ec829d863faff6e3ce30ec3ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long NetResolveHost</definition>
        <argsstring>(const std::string &amp;host)</argsstring>
        <name>NetResolveHost</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Resolve host in name or or colon dot notation. </para>
        </briefdescription>
        <detaileddescription>
<para>Resolve host in name or dotted quad notation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host name (f.e. 192.168.0.0 or stratagus.net) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="192" column="15" bodyfile="src/network/net_lowlevel.cpp" bodystart="192" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1a69d301cab62725583b9c840e7a8a64e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string NetGetHostname</definition>
        <argsstring>()</argsstring>
        <name>NetGetHostname</name>
        <briefdescription>
<para>Get local hostname. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the system hostname. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="212" column="13" bodyfile="src/network/net_lowlevel.cpp" bodystart="212" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1a242a9f6820714c304232e5c394689fbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NetSocketAddr</definition>
        <argsstring>(unsigned long *ips, int maxAddr)</argsstring>
        <name>NetSocketAddr</name>
        <param>
          <type>unsigned long *</type>
          <declname>ips</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxAddr</declname>
        </param>
        <briefdescription>
<para>Get local IPs. </para>
        </briefdescription>
        <detaileddescription>
<para>Get IP-addrs of local interfaces from Network file descriptor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sock</parametername>
</parameternamelist>
<parameterdescription>
<para>local socket. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ips</parametername>
</parameternamelist>
<parameterdescription>
<para>where to stock ip addrs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>size of ips.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of IP-addrs found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="268" column="5" bodyfile="src/network/net_lowlevel.cpp" bodystart="268" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1a81708995208be11ecee9de9b38a506d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="net__lowlevel_8h_1a6dfce000c099dd3fc424499faeae3900" kindref="member">Socket</ref></type>
        <definition>Socket NetOpenUDP</definition>
        <argsstring>(unsigned long ip, int port)</argsstring>
        <name>NetOpenUDP</name>
        <param>
          <type>unsigned long</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para><ref refid="structOpen" kindref="compound">Open</ref> a UDP Socket port. (param in network format) </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structOpen" kindref="compound">Open</ref> an UDP Socket port.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ip</parametername>
</parameternamelist>
<parameterdescription>
<para>!=0 Ip to bind in host notation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>!=0 Port to bind in host notation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If success the socket fildes, -1 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="306" column="8" bodyfile="src/network/net_lowlevel.cpp" bodystart="306" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1ae084fc4ebb04e6a9b3b1f7ed97913a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="net__lowlevel_8h_1a6dfce000c099dd3fc424499faeae3900" kindref="member">Socket</ref></type>
        <definition>Socket NetOpenTCP</definition>
        <argsstring>(const char *addr, int port)</argsstring>
        <name>NetOpenTCP</name>
        <param>
          <type>const char *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para><ref refid="structOpen" kindref="compound">Open</ref> a TCP Socket port. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structOpen" kindref="compound">Open</ref> a TCP socket</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Bind socket to a specific port number</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If success the socket fildes, -1 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="339" column="8" bodyfile="src/network/net_lowlevel.cpp" bodystart="339" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1a664a85211569c79fbd8059a246d49942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NetConnectTCP</definition>
        <argsstring>(Socket sockfd, unsigned long addr, int port)</argsstring>
        <name>NetConnectTCP</name>
        <param>
          <type><ref refid="net__lowlevel_8h_1a6dfce000c099dd3fc424499faeae3900" kindref="member">Socket</ref></type>
          <declname>sockfd</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para><ref refid="structOpen" kindref="compound">Open</ref> a TCP connection. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structOpen" kindref="compound">Open</ref> a TCP connection</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sockfd</parametername>
</parameternamelist>
<parameterdescription>
<para>An open socket to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address returned from NetResolveHost </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port on remote host to connect to</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, -1 if failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="380" column="5" bodyfile="src/network/net_lowlevel.cpp" bodystart="380" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1ab84e2986bf35f17416a2525f0cb7e078" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NetSocketReady</definition>
        <argsstring>(Socket sockfd, int timeout)</argsstring>
        <name>NetSocketReady</name>
        <param>
          <type><ref refid="net__lowlevel_8h_1a6dfce000c099dd3fc424499faeae3900" kindref="member">Socket</ref></type>
          <declname>sockfd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Wait for socket ready. </para>
        </briefdescription>
        <detaileddescription>
<para>Wait for socket ready.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sockfd</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket fildes to probe. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout in 1/1000 seconds.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if data is available, 0 if not, -1 if failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="415" column="5" bodyfile="src/network/net_lowlevel.cpp" bodystart="415" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1a8466af1ff4137b24a421f5236d28043a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NetRecvUDP</definition>
        <argsstring>(Socket sockfd, void *buf, int len, unsigned long *hostFrom, int *portFrom)</argsstring>
        <name>NetRecvUDP</name>
        <param>
          <type><ref refid="net__lowlevel_8h_1a6dfce000c099dd3fc424499faeae3900" kindref="member">Socket</ref></type>
          <declname>sockfd</declname>
        </param>
        <param>
          <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>hostFrom</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>portFrom</declname>
        </param>
        <briefdescription>
<para>Receive from a UDP socket. </para>
        </briefdescription>
        <detaileddescription>
<para>Receive from a UDP socket.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sockfd</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Receive message buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Receive message buffer length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hostFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>host of the sender. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>portFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>port of the sender.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes placed in buffer, or -1 if failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="511" column="5" bodyfile="src/network/net_lowlevel.cpp" bodystart="511" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1a483430be30dc4071a6405a9b20d374ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NetRecvTCP</definition>
        <argsstring>(Socket sockfd, void *buf, int len)</argsstring>
        <name>NetRecvTCP</name>
        <param>
          <type><ref refid="net__lowlevel_8h_1a6dfce000c099dd3fc424499faeae3900" kindref="member">Socket</ref></type>
          <declname>sockfd</declname>
        </param>
        <param>
          <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Receive from a TCP socket. </para>
        </briefdescription>
        <detaileddescription>
<para>Receive from a TCP socket.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sockfd</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Receive message buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Receive message buffer length.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes placed in buffer or -1 if failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="541" column="5" bodyfile="src/network/net_lowlevel.cpp" bodystart="541" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1aefd16563f01197266032b6c6cbba7642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NetSendUDP</definition>
        <argsstring>(Socket sockfd, unsigned long host, int port, const void *buf, int len)</argsstring>
        <name>NetSendUDP</name>
        <param>
          <type><ref refid="net__lowlevel_8h_1a6dfce000c099dd3fc424499faeae3900" kindref="member">Socket</ref></type>
          <declname>sockfd</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const <ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Send through a UPD socket to a host:port. </para>
        </briefdescription>
        <detaileddescription>
<para>Send through a UPD socket to a host:port.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sockfd</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host to send to (network byte order). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port of host to send to (network byte order). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Send message buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Send message buffer length.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes sent. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="571" column="5" bodyfile="src/network/net_lowlevel.cpp" bodystart="571" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1a481421998c402eb0bc42efedaf76540e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NetSendTCP</definition>
        <argsstring>(Socket sockfd, const void *buf, int len)</argsstring>
        <name>NetSendTCP</name>
        <param>
          <type><ref refid="net__lowlevel_8h_1a6dfce000c099dd3fc424499faeae3900" kindref="member">Socket</ref></type>
          <declname>sockfd</declname>
        </param>
        <param>
          <type>const <ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Send through a TCP socket. </para>
        </briefdescription>
        <detaileddescription>
<para>Send through a TCP socket.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sockfd</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Send message buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Send message buffer length.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes sent. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="593" column="5" bodyfile="src/network/net_lowlevel.cpp" bodystart="593" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1a87dd3c7bb25b4c6742a9c3b14c9fb007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NetListenTCP</definition>
        <argsstring>(Socket sockfd)</argsstring>
        <name>NetListenTCP</name>
        <param>
          <type><ref refid="net__lowlevel_8h_1a6dfce000c099dd3fc424499faeae3900" kindref="member">Socket</ref></type>
          <declname>sockfd</declname>
        </param>
        <briefdescription>
<para>Listen for connections on a TCP socket. </para>
        </briefdescription>
        <detaileddescription>
<para>Listen for connections on a TCP socket.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sockfd</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success, -1 for error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="605" column="5" bodyfile="src/network/net_lowlevel.cpp" bodystart="605" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="net__lowlevel_8cpp_1ae1619be6a254059c7515d7d6875d12fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="net__lowlevel_8h_1a6dfce000c099dd3fc424499faeae3900" kindref="member">Socket</ref></type>
        <definition>Socket NetAcceptTCP</definition>
        <argsstring>(Socket sockfd, unsigned long *clientHost, int *clientPort)</argsstring>
        <name>NetAcceptTCP</name>
        <param>
          <type><ref refid="net__lowlevel_8h_1a6dfce000c099dd3fc424499faeae3900" kindref="member">Socket</ref></type>
          <declname>sockfd</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>clientHost</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>clientPort</declname>
        </param>
        <briefdescription>
<para>Accept a connection on a TCP socket. </para>
        </briefdescription>
        <detaileddescription>
<para>Accept a connection on a TCP socket.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sockfd</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clientHost</parametername>
</parameternamelist>
<parameterdescription>
<para>host of the client connected. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clientPort</parametername>
</parameternamelist>
<parameterdescription>
<para>port of the client connected.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If success the new socket fildes, -1 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/net_lowlevel.cpp" line="619" column="8" bodyfile="src/network/net_lowlevel.cpp" bodystart="619" bodyend="628"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/network/net_lowlevel.cpp"/>
  </compounddef>
</doxygen>
