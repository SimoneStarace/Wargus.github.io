<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classAiForceEnemyFinder" kind="class" language="C++" prot="public">
    <compoundname>AiForceEnemyFinder</compoundname>
    <templateparamlist>
      <param>
        <type>const int</type>
        <declname>FIND_TYPE</declname>
        <defname>FIND_TYPE</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classAiForceEnemyFinder_1a8fa232dd79193c45b89bbf8d718949c3" prot="private" static="no" mutable="no">
        <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> **</type>
        <definition>const CUnit** AiForceEnemyFinder&lt; FIND_TYPE &gt;::enemy</definition>
        <argsstring></argsstring>
        <name>enemy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="177" column="13" bodyfile="src/ai/ai_force.cpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classAiForceEnemyFinder_1a88e495683bca086f57295bb9831feb8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>AiForceEnemyFinder&lt; FIND_TYPE &gt;::AiForceEnemyFinder</definition>
        <argsstring>(int force, const CUnit **enemy)</argsstring>
        <name>AiForceEnemyFinder</name>
        <param>
          <type>int</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> **</type>
          <declname>enemy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="122" column="1" bodyfile="src/ai/ai_force.cpp" bodystart="122" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classAiForceEnemyFinder_1a47857d7ab5b7e11b48c8693ef98595d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>AiForceEnemyFinder&lt; FIND_TYPE &gt;::AiForceEnemyFinder</definition>
        <argsstring>(AiForce &amp;force, const CUnit **enemy)</argsstring>
        <name>AiForceEnemyFinder</name>
        <param>
          <type><ref refid="classAiForce" kindref="compound">AiForce</ref> &amp;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> **</type>
          <declname>enemy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="129" column="1" bodyfile="src/ai/ai_force.cpp" bodystart="129" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classAiForceEnemyFinder_1a27133ee39ad4204db16d50db45c70a54" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool AiForceEnemyFinder&lt; FIND_TYPE &gt;::found</definition>
        <argsstring>() const</argsstring>
        <name>found</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="136" column="6" bodyfile="src/ai/ai_force.cpp" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classAiForceEnemyFinder_1ad716e564738430af88b7a4ea25059e28" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool AiForceEnemyFinder&lt; FIND_TYPE &gt;::operator()</definition>
        <argsstring>(const CUnit *const unit) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> *const</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="138" column="6" bodyfile="src/ai/ai_force.cpp" bodystart="138" bodyend="175"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/ai/ai_force.cpp" line="120" column="1" bodyfile="src/ai/ai_force.cpp" bodystart="119" bodyend="178"/>
    <listofallmembers>
      <member refid="classAiForceEnemyFinder_1a88e495683bca086f57295bb9831feb8a" prot="public" virt="non-virtual"><scope>AiForceEnemyFinder</scope><name>AiForceEnemyFinder</name></member>
      <member refid="classAiForceEnemyFinder_1a47857d7ab5b7e11b48c8693ef98595d8" prot="public" virt="non-virtual"><scope>AiForceEnemyFinder</scope><name>AiForceEnemyFinder</name></member>
      <member refid="classAiForceEnemyFinder_1a8fa232dd79193c45b89bbf8d718949c3" prot="private" virt="non-virtual"><scope>AiForceEnemyFinder</scope><name>enemy</name></member>
      <member refid="classAiForceEnemyFinder_1a27133ee39ad4204db16d50db45c70a54" prot="public" virt="non-virtual"><scope>AiForceEnemyFinder</scope><name>found</name></member>
      <member refid="classAiForceEnemyFinder_1ad716e564738430af88b7a4ea25059e28" prot="public" virt="non-virtual"><scope>AiForceEnemyFinder</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
