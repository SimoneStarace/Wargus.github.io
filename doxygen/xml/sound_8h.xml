<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="sound_8h" kind="file" language="C++">
    <compoundname>sound.h</compoundname>
    <includes refid="unitsound_8h" local="yes">unitsound.h</includes>
    <includes local="yes">SDL.h</includes>
    <includes local="yes">SDL_mixer.h</includes>
    <includedby refid="action__attack_8cpp" local="yes">src/action/action_attack.cpp</includedby>
    <includedby refid="action__built_8cpp" local="yes">src/action/action_built.cpp</includedby>
    <includedby refid="action__move_8cpp" local="yes">src/action/action_move.cpp</includedby>
    <includedby refid="action__repair_8cpp" local="yes">src/action/action_repair.cpp</includedby>
    <includedby refid="action__research_8cpp" local="yes">src/action/action_research.cpp</includedby>
    <includedby refid="action__resource_8cpp" local="yes">src/action/action_resource.cpp</includedby>
    <includedby refid="action__spellcast_8cpp" local="yes">src/action/action_spellcast.cpp</includedby>
    <includedby refid="action__train_8cpp" local="yes">src/action/action_train.cpp</includedby>
    <includedby refid="animation__randomsound_8cpp" local="yes">src/animation/animation_randomsound.cpp</includedby>
    <includedby refid="animation__sound_8cpp" local="yes">src/animation/animation_sound.cpp</includedby>
    <includedby refid="editloop_8cpp" local="yes">src/editor/editloop.cpp</includedby>
    <includedby refid="game_8cpp" local="yes">src/game/game.cpp</includedby>
    <includedby refid="loadgame_8cpp" local="yes">src/game/loadgame.cpp</includedby>
    <includedby refid="replay_8cpp" local="yes">src/game/replay.cpp</includedby>
    <includedby refid="sound__server_8h" local="yes">src/include/sound_server.h</includedby>
    <includedby refid="missile_8cpp" local="yes">src/missile/missile.cpp</includedby>
    <includedby refid="network_8cpp" local="yes">src/network/network.cpp</includedby>
    <includedby refid="script__sound_8cpp" local="yes">src/sound/script_sound.cpp</includedby>
    <includedby refid="sound_8cpp" local="yes">src/sound/sound.cpp</includedby>
    <includedby refid="sound__id_8cpp" local="yes">src/sound/sound_id.cpp</includedby>
    <includedby refid="unitsound_8cpp" local="yes">src/sound/unitsound.cpp</includedby>
    <includedby refid="spells_8cpp" local="yes">src/spell/spells.cpp</includedby>
    <includedby refid="mainloop_8cpp" local="yes">src/stratagus/mainloop.cpp</includedby>
    <includedby refid="player_8cpp" local="yes">src/stratagus/player.cpp</includedby>
    <includedby refid="botpanel_8cpp" local="yes">src/ui/botpanel.cpp</includedby>
    <includedby refid="interface_8cpp" local="yes">src/ui/interface.cpp</includedby>
    <includedby refid="mainscr_8cpp" local="yes">src/ui/mainscr.cpp</includedby>
    <includedby refid="mouse_8cpp" local="yes">src/ui/mouse.cpp</includedby>
    <includedby refid="widgets_8cpp" local="yes">src/ui/widgets.cpp</includedby>
    <includedby refid="script__unittype_8cpp" local="yes">src/unit/script_unittype.cpp</includedby>
    <includedby refid="unit_8cpp" local="yes">src/unit/unit.cpp</includedby>
    <includedby refid="unit__draw_8cpp" local="yes">src/unit/unit_draw.cpp</includedby>
    <includedby refid="unittype_8cpp" local="yes">src/unit/unittype.cpp</includedby>
    <includedby refid="movie_8cpp" local="yes">src/video/movie.cpp</includedby>
    <includedby refid="sdl_8cpp" local="yes">src/video/sdl.cpp</includedby>
    <includedby refid="tolua_8cpp" local="yes">build/tolua.cpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>upgrade_structs.h</label>
        <link refid="upgrade__structs_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>SDL_mixer.h</label>
      </node>
      <node id="5">
        <label>SDL.h</label>
      </node>
      <node id="1">
        <label>src/include/sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="2">
        <label>unitsound.h</label>
        <link refid="unitsound_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="37">
        <label>src/ui/mouse.cpp</label>
        <link refid="mouse_8cpp"/>
      </node>
      <node id="6">
        <label>src/action/action_research.cpp</label>
        <link refid="action__research_8cpp"/>
      </node>
      <node id="30">
        <label>src/missile/missile.cpp</label>
        <link refid="missile_8cpp"/>
      </node>
      <node id="35">
        <label>src/ui/botpanel.cpp</label>
        <link refid="botpanel_8cpp"/>
      </node>
      <node id="40">
        <label>src/unit/unit_draw.cpp</label>
        <link refid="unit__draw_8cpp"/>
      </node>
      <node id="8">
        <label>src/action/action_spellcast.cpp</label>
        <link refid="action__spellcast_8cpp"/>
      </node>
      <node id="13">
        <label>src/game/game.cpp</label>
        <link refid="game_8cpp"/>
      </node>
      <node id="33">
        <label>src/stratagus/mainloop.cpp</label>
        <link refid="mainloop_8cpp"/>
      </node>
      <node id="36">
        <label>src/ui/mainscr.cpp</label>
        <link refid="mainscr_8cpp"/>
      </node>
      <node id="17">
        <label>src/sound/music.cpp</label>
        <link refid="music_8cpp"/>
      </node>
      <node id="29">
        <label>build/tolua.cpp</label>
        <link refid="tolua_8cpp"/>
      </node>
      <node id="39">
        <label>src/unit/script_unittype.cpp</label>
        <link refid="script__unittype_8cpp"/>
      </node>
      <node id="31">
        <label>src/network/network.cpp</label>
        <link refid="network_8cpp"/>
      </node>
      <node id="21">
        <label>src/sound/sound_server.cpp</label>
        <link refid="sound__server_8cpp"/>
      </node>
      <node id="18">
        <label>src/sound/script_sound.cpp</label>
        <link refid="script__sound_8cpp"/>
      </node>
      <node id="19">
        <label>src/sound/sound.cpp</label>
        <link refid="sound_8cpp"/>
      </node>
      <node id="32">
        <label>src/spell/spells.cpp</label>
        <link refid="spells_8cpp"/>
      </node>
      <node id="26">
        <label>src/unit/unit.cpp</label>
        <link refid="unit_8cpp"/>
      </node>
      <node id="28">
        <label>src/video/sdl.cpp</label>
        <link refid="sdl_8cpp"/>
      </node>
      <node id="9">
        <label>src/action/action_train.cpp</label>
        <link refid="action__train_8cpp"/>
      </node>
      <node id="14">
        <label>src/game/loadgame.cpp</label>
        <link refid="loadgame_8cpp"/>
      </node>
      <node id="25">
        <label>src/ui/interface.cpp</label>
        <link refid="interface_8cpp"/>
      </node>
      <node id="11">
        <label>src/animation/animation_sound.cpp</label>
        <link refid="animation__sound_8cpp"/>
      </node>
      <node id="38">
        <label>src/ui/widgets.cpp</label>
        <link refid="widgets_8cpp"/>
      </node>
      <node id="10">
        <label>src/animation/animation_randomsound.cpp</label>
        <link refid="animation__randomsound_8cpp"/>
      </node>
      <node id="5">
        <label>src/action/action_repair.cpp</label>
        <link refid="action__repair_8cpp"/>
      </node>
      <node id="1">
        <label>src/include/sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/action/action_move.cpp</label>
        <link refid="action__move_8cpp"/>
      </node>
      <node id="34">
        <label>src/stratagus/player.cpp</label>
        <link refid="player_8cpp"/>
      </node>
      <node id="23">
        <label>src/stratagus/stratagus.cpp</label>
        <link refid="stratagus_8cpp"/>
      </node>
      <node id="22">
        <label>src/sound/unitsound.cpp</label>
        <link refid="unitsound_8cpp"/>
      </node>
      <node id="12">
        <label>src/editor/editloop.cpp</label>
        <link refid="editloop_8cpp"/>
      </node>
      <node id="27">
        <label>src/video/movie.cpp</label>
        <link refid="movie_8cpp"/>
      </node>
      <node id="20">
        <label>src/sound/sound_id.cpp</label>
        <link refid="sound__id_8cpp"/>
      </node>
      <node id="7">
        <label>src/action/action_resource.cpp</label>
        <link refid="action__resource_8cpp"/>
      </node>
      <node id="24">
        <label>src/stratagus/title.cpp</label>
        <link refid="title_8cpp"/>
      </node>
      <node id="3">
        <label>src/action/action_built.cpp</label>
        <link refid="action__built_8cpp"/>
      </node>
      <node id="2">
        <label>src/action/action_attack.cpp</label>
        <link refid="action__attack_8cpp"/>
      </node>
      <node id="15">
        <label>src/game/replay.cpp</label>
        <link refid="replay_8cpp"/>
      </node>
      <node id="41">
        <label>src/unit/unittype.cpp</label>
        <link refid="unittype_8cpp"/>
      </node>
      <node id="16">
        <label>src/include/sound_server.h</label>
        <link refid="sound__server_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classGameSound" prot="public">GameSound</innerclass>
    <innerclass refid="classCSound" prot="public">CSound</innerclass>
    <innerclass refid="structOrigin" prot="public">Origin</innerclass>
      <sectiondef kind="user-defined">
      <header>sound.h - The sound header file.</header>
      <memberdef kind="define" id="sound_8h_1a1d8b7fc5a5ee8f23a5b825f04c4a27b4" prot="public" static="no">
        <name>MaxSampleVolume</name>
        <initializer>255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="55" column="9" bodyfile="src/include/sound.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sound_8h_1a6b8276a603010906698ab0210c906070" prot="public" static="no">
        <name>NO_SOUND</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="56" column="9" bodyfile="src/include/sound.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sound_8h_1ab083fa136f6b5df4048fea18b90671f0" prot="public" static="no">
        <name>ONE_SOUND</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A possible value for Number in the Sound struct: means a simple sound </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="127" column="9" bodyfile="src/include/sound.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sound_8h_1aca1bb5e181a95ce1e3cf7c18c9eb2c48" prot="public" static="no">
        <name>TWO_GROUPS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A possible value for Number in the Sound struct: means a double group (for selection/annoyed sounds) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="132" column="9" bodyfile="src/include/sound.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sound_8h_1afc3a3b88b1fd20fa894992072bd5ccd1" prot="public" static="no">
        <name>INFINITE_SOUND_RANGE</name>
        <initializer>255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the range value that makes a sound volume distance independent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="137" column="9" bodyfile="src/include/sound.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sound_8h_1a6be92535121cd98e8528abcf177322b8" prot="public" static="no">
        <name>MAX_SOUND_RANGE</name>
        <initializer>254</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the maximum range value </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="141" column="9" bodyfile="src/include/sound.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sound_8h_1a2a162e6d05be15c04c057838bd0b2f6c" prot="public" static="no">
        <name>CallbackMusicOn</name>
        <param></param>
        <initializer><ref refid="music_8cpp_1ab9e73c48f7da9765b46b18663cda45e5" kindref="member">CallbackMusic</ref> = true;</initializer>
        <briefdescription>
<para>Turn music stopped callback on. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="203" column="9" bodyfile="src/include/sound.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sound_8h_1a2ad52e84398af6202925dd9213a6e5a3" prot="public" static="no">
        <name>CallbackMusicOff</name>
        <param></param>
        <initializer><ref refid="music_8cpp_1ab9e73c48f7da9765b46b18663cda45e5" kindref="member">CallbackMusic</ref> = false;</initializer>
        <briefdescription>
<para>Turn music stopped callback off. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="206" column="9" bodyfile="src/include/sound.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="enum" id="sound_8h_1aaf31cc42154462aed53e0633f14d9831" prot="public" static="no" strong="no">
        <type></type>
        <name>UnitVoiceGroup</name>
        <enumvalue id="sound_8h_1aaf31cc42154462aed53e0633f14d9831a40b4a95afa20808a3cf04d55c5309c0b" prot="public">
          <name>VoiceSelected</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="sound_8h_1aaf31cc42154462aed53e0633f14d9831a698d800225106f9d164d8ffa7998f489" prot="public">
          <name>VoiceAcknowledging</name>
          <briefdescription>
<para>If selected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="sound_8h_1aaf31cc42154462aed53e0633f14d9831a3ba2dc1f78fcfb8f1c8fd69194e524fd" prot="public">
          <name>VoiceReady</name>
          <briefdescription>
<para>Acknowledge command. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="sound_8h_1aaf31cc42154462aed53e0633f14d9831a8a94219d4bbc8ca920d63e246bdc6ea2" prot="public">
          <name>VoiceHelpMe</name>
          <briefdescription>
<para>Command completed. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="sound_8h_1aaf31cc42154462aed53e0633f14d9831ab750385274077c81a0f772cb59b3a66d" prot="public">
          <name>VoiceDying</name>
          <briefdescription>
<para>If attacked. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="sound_8h_1aaf31cc42154462aed53e0633f14d9831a255cd9f138a698f7b5506f9e288c7452" prot="public">
          <name>VoiceWorkCompleted</name>
          <briefdescription>
<para>If killed. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="sound_8h_1aaf31cc42154462aed53e0633f14d9831a98780426e72b96ecef7b8415f537d226" prot="public">
          <name>VoiceBuilding</name>
          <briefdescription>
<para>only worker, work completed </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="sound_8h_1aaf31cc42154462aed53e0633f14d9831a036c47c04e35acf2b05080c7976d270f" prot="public">
          <name>VoiceDocking</name>
          <briefdescription>
<para>only for building under construction </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="sound_8h_1aaf31cc42154462aed53e0633f14d9831aa6913679f5dd32ddda7e75e1505486c1" prot="public">
          <name>VoiceRepairing</name>
          <briefdescription>
<para>only for transport reaching coast </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="sound_8h_1aaf31cc42154462aed53e0633f14d9831a3d6c3107cf93c0e3151e9c1ffd73c792" prot="public">
          <name>VoiceHarvesting</name>
          <briefdescription>
<para>repairing </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="sound_8h_1aaf31cc42154462aed53e0633f14d9831a81ce37a695611774d4e0d332af20dc56" prot="public">
          <name>VoiceAttack</name>
          <briefdescription>
<para>harvesting </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="sound_8h_1aaf31cc42154462aed53e0633f14d9831a4c654162a85b1f28b94b67f30ab1a8c2" prot="public">
          <name>VoiceBuild</name>
          <briefdescription>
<para>Attack command. </para>
          </briefdescription>
          <detaileddescription>
<para>worker goes to build a building </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Voice groups for a unit </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="61" column="20" bodyfile="src/include/sound.h" bodystart="61" bodyend="74"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8h_1a83756b3c6336a4ae8d887e10313e7b9b" prot="public" static="no" mutable="no">
        <type><ref refid="classGameSound" kindref="compound">GameSound</ref></type>
        <definition>GameSound GameSounds</definition>
        <argsstring></argsstring>
        <name>GameSounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Various sounds used in game. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="156" column="18" bodyfile="src/sound/sound.cpp" bodystart="57" bodyend="-1" declfile="src/include/sound.h" declline="156" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8h_1ab9e73c48f7da9765b46b18663cda45e5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CallbackMusic</definition>
        <argsstring></argsstring>
        <name>CallbackMusic</name>
        <briefdescription>
<para><ref refid="classGame" kindref="compound">Game</ref> sound configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classGame" kindref="compound">Game</ref> sound configuration. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="158" column="13" bodyfile="src/sound/music.cpp" bodystart="56" bodyend="-1" declfile="src/include/sound.h" declline="158" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8h_1a45527b2be322d84a3bf9947f522c4e4f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int DistanceSilent</definition>
        <argsstring></argsstring>
        <name>DistanceSilent</name>
        <briefdescription>
<para>flag true callback ccl if stops </para>
        </briefdescription>
        <detaileddescription>
<para>global range control (max cut off distance for sound)</para>
<para>flag true callback ccl if stops </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="161" column="12" bodyfile="src/sound/sound.cpp" bodystart="72" bodyend="-1" declfile="src/include/sound.h" declline="161" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1afc83f048ca467a9b1dd08a824e574ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char CalculateVolume</definition>
        <argsstring>(bool isVolume, int power, unsigned char range)</argsstring>
        <name>CalculateVolume</name>
        <param>
          <type>bool</type>
          <declname>isVolume</declname>
        </param>
        <param>
          <type>int</type>
          <declname>power</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Calculates volume level. </para>
        </briefdescription>
        <detaileddescription>
<para>Calculate the volume associated with a request, either by clipping the range parameter of this request, or by mapping this range to a volume. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="168" column="22" bodyfile="src/sound/sound.cpp" bodystart="251" bodyend="259" declfile="src/include/sound.h" declline="168" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1a21ef8ba411d02f881a8c4d8118e2e8ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void PlayUnitSound</definition>
        <argsstring>(const CUnit &amp;unit, UnitVoiceGroup unit_voice_group, bool sampleUnique=false)</argsstring>
        <name>PlayUnitSound</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1aaf31cc42154462aed53e0633f14d9831" kindref="member">UnitVoiceGroup</ref></type>
          <declname>unit_voice_group</declname>
          <defname>voice</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>sampleUnique</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Play a unit sound. </para>
        </briefdescription>
        <detaileddescription>
<para>Ask to the sound server to play a sound attached to a unit. The sound server may discard the sound if needed (e.g., when the same unit is already speaking).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Sound initiator, unit speaking </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voice</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of sound wanted (Ready,Die,Yes,...) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="170" column="13" bodyfile="src/sound/sound.cpp" bodystart="281" bodyend="307" declfile="src/include/sound.h" declline="170" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1ae34eacaba077d3fac39808e5e2373fec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void PlayUnitSound</definition>
        <argsstring>(const CUnit &amp;unit, CSound *sound)</argsstring>
        <name>PlayUnitSound</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type><ref refid="classCSound" kindref="compound">CSound</ref> *</type>
          <declname>sound</declname>
        </param>
        <briefdescription>
<para>Play a unit sound. </para>
        </briefdescription>
        <detaileddescription>
<para>Ask to the sound server to play a sound attached to a unit. The sound server may discard the sound if needed (e.g., when the same unit is already speaking).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Sound initiator, unit speaking </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sound</parametername>
</parameternamelist>
<parameterdescription>
<para>Sound to be generated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="172" column="13" bodyfile="src/sound/sound.cpp" bodystart="317" bodyend="334" declfile="src/include/sound.h" declline="172" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1a3a6186b15758f66c1932ab08aae30734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void PlayMissileSound</definition>
        <argsstring>(const Missile &amp;missile, CSound *sound)</argsstring>
        <name>PlayMissileSound</name>
        <param>
          <type>const <ref refid="classMissile" kindref="compound">Missile</ref> &amp;</type>
          <declname>missile</declname>
        </param>
        <param>
          <type><ref refid="classCSound" kindref="compound">CSound</ref> *</type>
          <declname>sound</declname>
        </param>
        <briefdescription>
<para>Play a missile sound. </para>
        </briefdescription>
        <detaileddescription>
<para>Ask the sound server to play a sound for a missile.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>missile</parametername>
</parameternamelist>
<parameterdescription>
<para>Sound initiator, missile exploding </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sound</parametername>
</parameternamelist>
<parameterdescription>
<para>Sound to be generated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="174" column="13" bodyfile="src/sound/sound.cpp" bodystart="342" bodyend="364" declfile="src/include/sound.h" declline="174" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1a630094af602cae80e5a353266b890a03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void PlayGameSound</definition>
        <argsstring>(CSound *sound, unsigned char volume, bool always=false)</argsstring>
        <name>PlayGameSound</name>
        <param>
          <type><ref refid="classCSound" kindref="compound">CSound</ref> *</type>
          <declname>sound</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>volume</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>always</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Play a game sound. </para>
        </briefdescription>
        <detaileddescription>
<para>Play a game sound</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sound</parametername>
</parameternamelist>
<parameterdescription>
<para>Sound to play </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume level to play the sound </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="176" column="13" bodyfile="src/sound/sound.cpp" bodystart="372" bodyend="390" declfile="src/include/sound.h" declline="176" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1a2c2d8d4767fb08ad7e1efb74aea5de37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PlayFile</definition>
        <argsstring>(const std::string &amp;name, LuaActionListener *listener=NULL)</argsstring>
        <name>PlayFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classLuaActionListener" kindref="compound">LuaActionListener</ref> *</type>
          <declname>listener</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Play a sound file. </para>
        </briefdescription>
        <detaileddescription>
<para>Play a sound file</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Filename of a sound to play </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional lua callback</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Channel number the sound is playing on, -1 for error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="179" column="12" bodyfile="src/sound/sound.cpp" bodystart="418" bodyend="432" declfile="src/include/sound.h" declline="179" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1a4bc5590147feb4df928334e4165e4310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void SetSoundRange</definition>
        <argsstring>(CSound *sound, unsigned char range)</argsstring>
        <name>SetSoundRange</name>
        <param>
          <type><ref refid="classCSound" kindref="compound">CSound</ref> *</type>
          <declname>sound</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Modify the range of a given sound. </para>
        </briefdescription>
        <detaileddescription>
<para>Ask the sound server to change the range of a sound.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sound</parametername>
</parameternamelist>
<parameterdescription>
<para>the id of the sound to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>the new range for this sound. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="182" column="13" bodyfile="src/sound/sound.cpp" bodystart="440" bodyend="445" declfile="src/include/sound.h" declline="182" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1a3a90b0e0c5710e1faebcf3993ac06ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCSound" kindref="compound">CSound</ref> *</type>
        <definition>CSound* RegisterSound</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;files)</argsstring>
        <name>RegisterSound</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>files</declname>
        </param>
        <briefdescription>
<para>Register a sound (can be a simple sound or a group) </para>
        </briefdescription>
        <detaileddescription>
<para>Ask the sound server to register a sound (and currently to load it) and to return an unique identifier for it. The unique identifier is memory pointer of the server.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>files</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of wav files. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of files belonging together.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the sound unique identifier</para>
</simplesect>
<xrefsect id="todo_1_todo000055"><xreftitle>Todo</xreftitle><xrefdescription><para>FIXME: Must handle the errors better. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="185" column="15" bodyfile="src/sound/sound.cpp" bodystart="459" bodyend="486" declfile="src/include/sound.h" declline="185" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1a62c5e6a6fcd38b06401fb746791d0aca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCSound" kindref="compound">CSound</ref> *</type>
        <definition>CSound* RegisterTwoGroups</definition>
        <argsstring>(CSound *first, CSound *second)</argsstring>
        <name>RegisterTwoGroups</name>
        <param>
          <type><ref refid="classCSound" kindref="compound">CSound</ref> *</type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classCSound" kindref="compound">CSound</ref> *</type>
          <declname>second</declname>
        </param>
        <briefdescription>
<para>Create a special sound group with two sounds. </para>
        </briefdescription>
        <detaileddescription>
<para>Ask the sound server to put together two sounds to form a special sound.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>first part of the group </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>second</parametername>
</parameternamelist>
<parameterdescription>
<para>second part of the group</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the special sound unique identifier </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="188" column="15" bodyfile="src/sound/sound.cpp" bodystart="496" bodyend="508" declfile="src/include/sound.h" declline="188" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1a11811aa333d21ca88f2aa7678d528ff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InitSoundClient</definition>
        <argsstring>()</argsstring>
        <name>InitSoundClient</name>
        <briefdescription>
<para>Initialize client side of the sound layer. </para>
        </briefdescription>
        <detaileddescription>
<para>Lookup the sound id&apos;s for the game sounds. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="191" column="13" bodyfile="src/sound/sound.cpp" bodystart="513" bodyend="579" declfile="src/include/sound.h" declline="191" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1a79d3438ed055dc49fcf43dcd7450b4cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CheckMusicFinished</definition>
        <argsstring>(bool force=false)</argsstring>
        <name>CheckMusicFinished</name>
        <param>
          <type>bool</type>
          <declname>force</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Check if music is finished and play the next song. </para>
        </briefdescription>
        <detaileddescription>
<para>Check if music is finished and play the next song </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="197" column="13" bodyfile="src/sound/music.cpp" bodystart="74" bodyend="88" declfile="src/include/sound.h" declline="197" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1adb7fcc79f60094b3596d931faf354d0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InitMusic</definition>
        <argsstring>()</argsstring>
        <name>InitMusic</name>
        <briefdescription>
<para>Initialize music. </para>
        </briefdescription>
        <detaileddescription>
<para>Init music </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="200" column="13" bodyfile="src/sound/music.cpp" bodystart="93" bodyend="100" declfile="src/include/sound.h" declline="200" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1adf6f664520c6f641ac9bfc25010286cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void MapSound</definition>
        <argsstring>(const std::string &amp;sound_name, CSound *id)</argsstring>
        <name>MapSound</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sound_name</declname>
          <defname>name</defname>
        </param>
        <param>
          <type><ref refid="classCSound" kindref="compound">CSound</ref> *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Map sound to identifier. </para>
        </briefdescription>
        <detaileddescription>
<para>Add a new mapping (sound name to sound id) in the hash table Create a new mapping between a name and an already valid sound id.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the sound (now freed by caller!). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Sound identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="213" column="13" bodyfile="src/sound/sound_id.cpp" bodystart="71" bodyend="79" declfile="src/include/sound.h" declline="213" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1a94d6e7aec27594691854c02b3208f625" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCSound" kindref="compound">CSound</ref> *</type>
        <definition>CSound* SoundForName</definition>
        <argsstring>(const std::string &amp;sound_name)</argsstring>
        <name>SoundForName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sound_name</declname>
          <defname>name</defname>
        </param>
        <briefdescription>
<para>Get the sound id bound to an identifier. </para>
        </briefdescription>
        <detaileddescription>
<para>Maps a sound name to its id</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Sound name.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sound identifier for this name. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="215" column="15" bodyfile="src/sound/sound_id.cpp" bodystart="88" bodyend="97" declfile="src/include/sound.h" declline="215" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1a819f62b937030608670d93521c36dee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCSound" kindref="compound">CSound</ref> *</type>
        <definition>CSound* MakeSound</definition>
        <argsstring>(const std::string &amp;sound_name, const std::vector&lt; std::string &gt; &amp;files)</argsstring>
        <name>MakeSound</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sound_name</declname>
          <defname>name</defname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>files</declname>
        </param>
        <briefdescription>
<para>Make a sound bound to identifier. </para>
        </briefdescription>
        <detaileddescription>
<para>Ask the sound server to register a sound and store the mapping between its name and its id. Register a sound group (or an unique sound if nb==1) and get the corresponding sound id.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of this sound group (Freed by caller). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>list of sound file names </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb</parametername>
</parameternamelist>
<parameterdescription>
<para>number of sounds</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the sound id of the created group </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="217" column="15" bodyfile="src/sound/sound_id.cpp" bodystart="111" bodyend="125" declfile="src/include/sound.h" declline="217" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1ade1a74010ca6f26157a6efdfd89c19cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCSound" kindref="compound">CSound</ref> *</type>
        <definition>CSound* MakeSoundGroup</definition>
        <argsstring>(const std::string &amp;name, CSound *first, CSound *second)</argsstring>
        <name>MakeSoundGroup</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classCSound" kindref="compound">CSound</ref> *</type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classCSound" kindref="compound">CSound</ref> *</type>
          <declname>second</declname>
        </param>
        <briefdescription>
<para>Make a sound group bound to identifier. </para>
        </briefdescription>
        <detaileddescription>
<para>Ask the sound server to build a special sound group.</para>
<para>Register two sound groups together to make a special sound (for selection). Return the corresponding id after registering it under a given name.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the group (handled by caller). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>id of the first group </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>second</parametername>
</parameternamelist>
<parameterdescription>
<para>id of the second group</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Registered sound identifier. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="219" column="15" bodyfile="src/sound/sound_id.cpp" bodystart="140" bodyend="154" declfile="src/include/sound.h" declline="219" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1a5df40f0735f23d5fec526d300c9bff0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void FreeSounds</definition>
        <argsstring>()</argsstring>
        <name>FreeSounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="221" column="13" bodyfile="src/sound/sound_id.cpp" bodystart="156" bodyend="166" declfile="src/include/sound.h" declline="221" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="sound_8h_1ae81816e5acc0b3a799ce24e956578d8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void SoundCclRegister</definition>
        <argsstring>()</argsstring>
        <name>SoundCclRegister</name>
        <briefdescription>
<para>register ccl features </para>
        </briefdescription>
        <detaileddescription>
<para>Register CCL features for sound. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/sound.h" line="226" column="13" bodyfile="src/sound/script_sound.cpp" bodystart="352" bodyend="362" declfile="src/include/sound.h" declline="226" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/include/sound.h"/>
  </compounddef>
</doxygen>
