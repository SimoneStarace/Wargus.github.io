<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classAutoCastInfo" kind="class" language="C++" prot="public">
    <compoundname>AutoCastInfo</compoundname>
    <includes refid="spells_8h" local="no">spells.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classAutoCastInfo_1adf7eb7269980004b0e516af61dfd06ba" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int AutoCastInfo::Range</definition>
        <argsstring></argsstring>
        <name>Range</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000027"><xreftitle>Todo</xreftitle><xrefdescription><para>this below is SQUARE!!! </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spells.h" line="184" column="5" bodyfile="src/include/spells.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAutoCastInfo_1a517d51508c47ec7bcf69448227462678" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int AutoCastInfo::MinRange</definition>
        <argsstring></argsstring>
        <name>MinRange</name>
        <briefdescription>
<para>Max range of the target. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spells.h" line="185" column="5" bodyfile="src/include/spells.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAutoCastInfo_1a13956bb59a54346194b6846bf7aaccba" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int AutoCastInfo::PriorytyVar</definition>
        <argsstring></argsstring>
        <name>PriorytyVar</name>
        <briefdescription>
<para>Min range of the target. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spells.h" line="187" column="5" bodyfile="src/include/spells.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAutoCastInfo_1aec561cd7ca6ef4248478c181c4d7980f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool AutoCastInfo::ReverseSort</definition>
        <argsstring></argsstring>
        <name>ReverseSort</name>
        <briefdescription>
<para>Variable to sort autocast targets by priority. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spells.h" line="188" column="6" bodyfile="src/include/spells.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAutoCastInfo_1aafb6cf1fb9b38567019af5743b64b943" prot="public" static="no" mutable="no">
        <type><ref refid="classConditionInfo" kindref="compound">ConditionInfo</ref> *</type>
        <definition>ConditionInfo* AutoCastInfo::Condition</definition>
        <argsstring></argsstring>
        <name>Condition</name>
        <briefdescription>
<para>If true, small values have the highest priority. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spells.h" line="190" column="15" bodyfile="src/include/spells.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAutoCastInfo_1a2df930323a73f75361c06e43f34e5ed2" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int AutoCastInfo::Combat</definition>
        <argsstring></argsstring>
        <name>Combat</name>
        <briefdescription>
<para>Conditions to cast the spell. </para>
        </briefdescription>
        <detaileddescription>
<para>Detailed generic conditions (not per-target, where Condition is evaluated.) Combat mode is when there are hostile non-coward units around </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spells.h" line="194" column="5" bodyfile="src/include/spells.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAutoCastInfo_1a583483770be1620f754caf7ff6e7cf54" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int AutoCastInfo::Attacker</definition>
        <argsstring></argsstring>
        <name>Attacker</name>
        <briefdescription>
<para>If it should be casted in combat. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spells.h" line="195" column="5" bodyfile="src/include/spells.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAutoCastInfo_1a419be1f9164c13034e9a94996c348b75" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int AutoCastInfo::Corpse</definition>
        <argsstring></argsstring>
        <name>Corpse</name>
        <briefdescription>
<para>If it should be casted on unit which attacks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spells.h" line="196" column="5" bodyfile="src/include/spells.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAutoCastInfo_1a77aeda452897b744de547fbb41c8cbe8" prot="public" static="no" mutable="no">
        <type><ref refid="classLuaCallback" kindref="compound">LuaCallback</ref> *</type>
        <definition>LuaCallback* AutoCastInfo::PositionAutoCast</definition>
        <argsstring></argsstring>
        <name>PositionAutoCast</name>
        <briefdescription>
<para>If it should be casted on corpses. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spells.h" line="199" column="13" bodyfile="src/include/spells.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classAutoCastInfo_1ad2443e417f9681fd8d355baa12f0f605" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>AutoCastInfo::AutoCastInfo</definition>
        <argsstring>()</argsstring>
        <name>AutoCastInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spells.h" line="176" column="1" bodyfile="src/include/spells.h" bodystart="176" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classAutoCastInfo_1a5bb93af87410a3f4698f1fdaeb179732" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>AutoCastInfo::~AutoCastInfo</definition>
        <argsstring>()</argsstring>
        <name>~AutoCastInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spells.h" line="178" column="1" bodyfile="src/include/spells.h" bodystart="178" bodyend="182"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>information about the autocasting mode. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>AutoCastInfo</label>
        <link refid="classAutoCastInfo"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Condition</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>PositionAutoCast</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>ConditionInfo</label>
        <link refid="classConditionInfo"/>
        <childnode refid="3" relation="usage">
          <edgelabel>CheckFunc</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>Variable</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>ConditionInfoVariable</label>
        <link refid="classConditionInfoVariable"/>
      </node>
      <node id="3">
        <label>LuaCallback</label>
        <link refid="classLuaCallback"/>
      </node>
    </collaborationgraph>
    <location file="src/include/spells.h" line="171" column="1" bodyfile="src/include/spells.h" bodystart="170" bodyend="200"/>
    <listofallmembers>
      <member refid="classAutoCastInfo_1a583483770be1620f754caf7ff6e7cf54" prot="public" virt="non-virtual"><scope>AutoCastInfo</scope><name>Attacker</name></member>
      <member refid="classAutoCastInfo_1ad2443e417f9681fd8d355baa12f0f605" prot="public" virt="non-virtual"><scope>AutoCastInfo</scope><name>AutoCastInfo</name></member>
      <member refid="classAutoCastInfo_1a2df930323a73f75361c06e43f34e5ed2" prot="public" virt="non-virtual"><scope>AutoCastInfo</scope><name>Combat</name></member>
      <member refid="classAutoCastInfo_1aafb6cf1fb9b38567019af5743b64b943" prot="public" virt="non-virtual"><scope>AutoCastInfo</scope><name>Condition</name></member>
      <member refid="classAutoCastInfo_1a419be1f9164c13034e9a94996c348b75" prot="public" virt="non-virtual"><scope>AutoCastInfo</scope><name>Corpse</name></member>
      <member refid="classAutoCastInfo_1a517d51508c47ec7bcf69448227462678" prot="public" virt="non-virtual"><scope>AutoCastInfo</scope><name>MinRange</name></member>
      <member refid="classAutoCastInfo_1a77aeda452897b744de547fbb41c8cbe8" prot="public" virt="non-virtual"><scope>AutoCastInfo</scope><name>PositionAutoCast</name></member>
      <member refid="classAutoCastInfo_1a13956bb59a54346194b6846bf7aaccba" prot="public" virt="non-virtual"><scope>AutoCastInfo</scope><name>PriorytyVar</name></member>
      <member refid="classAutoCastInfo_1adf7eb7269980004b0e516af61dfd06ba" prot="public" virt="non-virtual"><scope>AutoCastInfo</scope><name>Range</name></member>
      <member refid="classAutoCastInfo_1aec561cd7ca6ef4248478c181c4d7980f" prot="public" virt="non-virtual"><scope>AutoCastInfo</scope><name>ReverseSort</name></member>
      <member refid="classAutoCastInfo_1a5bb93af87410a3f4698f1fdaeb179732" prot="public" virt="non-virtual"><scope>AutoCastInfo</scope><name>~AutoCastInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
