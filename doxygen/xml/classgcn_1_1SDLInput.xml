<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgcn_1_1SDLInput" kind="class" language="C++" prot="public">
    <compoundname>gcn::SDLInput</compoundname>
    <basecompoundref refid="classgcn_1_1Input" prot="public" virt="non-virtual">gcn::Input</basecompoundref>
    <includes refid="sdlinput_8h" local="no">sdlinput.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgcn_1_1SDLInput_1a6ea157cddb2087e23e1aa91baa96dce6" prot="protected" static="no" mutable="no">
        <type>std::queue&lt; <ref refid="classgcn_1_1KeyInput" kindref="compound">KeyInput</ref> &gt;</type>
        <definition>std::queue&lt;KeyInput&gt; gcn::SDLInput::mKeyInputQueue</definition>
        <argsstring></argsstring>
        <name>mKeyInputQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlinput.h" line="128" column="20" bodyfile="src/guichan/include/guichan/sdl/sdlinput.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgcn_1_1SDLInput_1ad41e37deaf51638b6a9c70ac2ddc508d" prot="protected" static="no" mutable="no">
        <type>std::queue&lt; <ref refid="classgcn_1_1MouseInput" kindref="compound">MouseInput</ref> &gt;</type>
        <definition>std::queue&lt;MouseInput&gt; gcn::SDLInput::mMouseInputQueue</definition>
        <argsstring></argsstring>
        <name>mMouseInputQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlinput.h" line="129" column="20" bodyfile="src/guichan/include/guichan/sdl/sdlinput.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgcn_1_1SDLInput_1acf1293d864c98705de0cb2d7ae7a2da4" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gcn::SDLInput::mMouseDown</definition>
        <argsstring></argsstring>
        <name>mMouseDown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlinput.h" line="131" column="14" bodyfile="src/guichan/include/guichan/sdl/sdlinput.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgcn_1_1SDLInput_1a064b1dec0d05aa82df01b54c905e71a8" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gcn::SDLInput::mMouseInWindow</definition>
        <argsstring></argsstring>
        <name>mMouseInWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlinput.h" line="132" column="14" bodyfile="src/guichan/include/guichan/sdl/sdlinput.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgcn_1_1SDLInput_1a4935949537ead17d332c9cee4e33984c" prot="protected" static="no" mutable="no">
        <type><ref refid="classgcn_1_1Key" kindref="compound">Key</ref></type>
        <definition>Key gcn::SDLInput::mLastKey</definition>
        <argsstring></argsstring>
        <name>mLastKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlinput.h" line="133" column="5" bodyfile="src/guichan/include/guichan/sdl/sdlinput.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgcn_1_1SDLInput_1af05e4d033c0dfc9375d157e66a50d6a6" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gcn::SDLInput::mIsRepeating</definition>
        <argsstring></argsstring>
        <name>mIsRepeating</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlinput.h" line="134" column="6" bodyfile="src/guichan/include/guichan/sdl/sdlinput.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgcn_1_1SDLInput_1ac354cdcd092ff691cab144c835aeea2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gcn::SDLInput::SDLInput</definition>
        <argsstring>()</argsstring>
        <name>SDLInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlinput.h" line="80" column="9" bodyfile="src/guichan/sdl/sdlinput.cpp" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1SDLInput_1a8bfb0c916495042ee5b33f55c5c710a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void gcn::SDLInput::pushInput</definition>
        <argsstring>(SDL_Event event)</argsstring>
        <name>pushInput</name>
        <param>
          <type>SDL_Event</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pushes an SDL event. It should be called at least once per frame to update input with user input.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>an event from SDL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlinput.h" line="88" column="22" bodyfile="src/guichan/sdl/sdlinput.cpp" bodystart="126" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1SDLInput_1a80688b038f80eeaf1ac4b2a24612fc59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>virtual void gcn::SDLInput::_pollInput</definition>
        <argsstring>()</argsstring>
        <name>_pollInput</name>
        <reimplements refid="classgcn_1_1Input_1a8e852901ad206985f18ae25e99867cb6">_pollInput</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Polls all input. It exists for input driver compatibility. If you only use SDL and plan sticking with SDL you can safely ignore this function as it in the SDL case does nothing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlinput.h" line="95" column="22" bodyfile="src/guichan/include/guichan/sdl/sdlinput.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1SDLInput_1a0f58ca54ecee86f8d85e01f61d3bdbfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool gcn::SDLInput::isKeyQueueEmpty</definition>
        <argsstring>()</argsstring>
        <name>isKeyQueueEmpty</name>
        <reimplements refid="classgcn_1_1Input_1a99c69c2e8d9b4378c4cea1f8beed0cf3">isKeyQueueEmpty</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks whether the key queue is empty or not.</para>
<para><simplesect kind="return"><para>true if the key queue is empty. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlinput.h" line="100" column="22" bodyfile="src/guichan/sdl/sdlinput.cpp" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1SDLInput_1ab06253df88e9ddabcb69450d5ac64590" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classgcn_1_1KeyInput" kindref="compound">KeyInput</ref></type>
        <definition>KeyInput gcn::SDLInput::dequeueKeyInput</definition>
        <argsstring>()</argsstring>
        <name>dequeueKeyInput</name>
        <reimplements refid="classgcn_1_1Input_1a3c4c2e5a0328dff6f90d81fb22e30d6c">dequeueKeyInput</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dequeues the key input queue.</para>
<para><simplesect kind="return"><para>a <ref refid="classgcn_1_1KeyInput" kindref="compound">KeyInput</ref> object. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classgcn_1_1KeyInput" kindref="compound">KeyInput</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlinput.h" line="102" column="26" bodyfile="src/guichan/sdl/sdlinput.cpp" bodystart="78" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1SDLInput_1ab12362c0fbbf75260e479f048e49a27c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool gcn::SDLInput::isMouseQueueEmpty</definition>
        <argsstring>()</argsstring>
        <name>isMouseQueueEmpty</name>
        <reimplements refid="classgcn_1_1Input_1a9c59ac0d0ae6c2eb4967f3eb6d9e059f">isMouseQueueEmpty</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks whether the mouse queue is empyt or not.</para>
<para><simplesect kind="return"><para>true if the mouse queue is empty. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlinput.h" line="104" column="22" bodyfile="src/guichan/sdl/sdlinput.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1SDLInput_1a396ed15921d71e5c79daeb94ac6d01e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classgcn_1_1MouseInput" kindref="compound">MouseInput</ref></type>
        <definition>MouseInput gcn::SDLInput::dequeueMouseInput</definition>
        <argsstring>()</argsstring>
        <name>dequeueMouseInput</name>
        <reimplements refid="classgcn_1_1Input_1a974c5ffa91c1f80185f32ac10a5de3e2">dequeueMouseInput</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dequeues the mouse input queue.</para>
<para><simplesect kind="return"><para>a <ref refid="classgcn_1_1MouseInput" kindref="compound">MouseInput</ref> object. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classgcn_1_1MouseInput" kindref="compound">MouseInput</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlinput.h" line="106" column="28" bodyfile="src/guichan/sdl/sdlinput.cpp" bodystart="99" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1SDLInput_1a1811f7ebbff376be774308d973dab074" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void gcn::SDLInput::processKeyRepeat</definition>
        <argsstring>()</argsstring>
        <name>processKeyRepeat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlinput.h" line="108" column="14" bodyfile="src/guichan/sdl/sdlinput.cpp" bodystart="115" bodyend="124"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgcn_1_1SDLInput_1aac2e2f5fc0758605c44f1de68181db47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgcn_1_1Key" kindref="compound">Key</ref></type>
        <definition>Key gcn::SDLInput::convertKeyCharacter</definition>
        <argsstring>(SDL_Keysym key)</argsstring>
        <name>convertKeyCharacter</name>
        <param>
          <type>SDL_Keysym</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts an SDL keysym to a <ref refid="classgcn_1_1Key" kindref="compound">Key</ref> object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>an SDL keysym </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classgcn_1_1Key" kindref="compound">Key</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlinput.h" line="116" column="20" bodyfile="src/guichan/sdl/sdlinput.cpp" bodystart="268" bodyend="467"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classgcn_1_1SDLInput_1ab5046271e910ffbb8020b49363f3675a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gcn::SDLInput::convertMouseButton</definition>
        <argsstring>(int button)</argsstring>
        <name>convertMouseButton</name>
        <param>
          <type>int</type>
          <declname>button</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts a mouse button from SDL to a Guichan mouse button representation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>an SDL mouse button. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a Guichan button. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlinput.h" line="126" column="13" bodyfile="src/guichan/sdl/sdlinput.cpp" bodystart="246" bodyend="266"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>SDL implementation of <ref refid="classgcn_1_1Input" kindref="compound">Input</ref>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>gcn::Input</label>
        <link refid="classgcn_1_1Input"/>
      </node>
      <node id="1">
        <label>gcn::SDLInput</label>
        <link refid="classgcn_1_1SDLInput"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>gcn::Input</label>
        <link refid="classgcn_1_1Input"/>
      </node>
      <node id="1">
        <label>gcn::SDLInput</label>
        <link refid="classgcn_1_1SDLInput"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>mLastKey</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>gcn::Key</label>
        <link refid="classgcn_1_1Key"/>
      </node>
    </collaborationgraph>
    <location file="src/guichan/include/guichan/sdl/sdlinput.h" line="74" column="1" bodyfile="src/guichan/include/guichan/sdl/sdlinput.h" bodystart="73" bodyend="135"/>
    <listofallmembers>
      <member refid="classgcn_1_1SDLInput_1a80688b038f80eeaf1ac4b2a24612fc59" prot="public" virt="virtual"><scope>gcn::SDLInput</scope><name>_pollInput</name></member>
      <member refid="classgcn_1_1SDLInput_1aac2e2f5fc0758605c44f1de68181db47" prot="public" virt="non-virtual"><scope>gcn::SDLInput</scope><name>convertKeyCharacter</name></member>
      <member refid="classgcn_1_1SDLInput_1ab5046271e910ffbb8020b49363f3675a" prot="protected" virt="non-virtual"><scope>gcn::SDLInput</scope><name>convertMouseButton</name></member>
      <member refid="classgcn_1_1SDLInput_1ab06253df88e9ddabcb69450d5ac64590" prot="public" virt="virtual"><scope>gcn::SDLInput</scope><name>dequeueKeyInput</name></member>
      <member refid="classgcn_1_1SDLInput_1a396ed15921d71e5c79daeb94ac6d01e9" prot="public" virt="virtual"><scope>gcn::SDLInput</scope><name>dequeueMouseInput</name></member>
      <member refid="classgcn_1_1SDLInput_1a0f58ca54ecee86f8d85e01f61d3bdbfd" prot="public" virt="virtual"><scope>gcn::SDLInput</scope><name>isKeyQueueEmpty</name></member>
      <member refid="classgcn_1_1SDLInput_1ab12362c0fbbf75260e479f048e49a27c" prot="public" virt="virtual"><scope>gcn::SDLInput</scope><name>isMouseQueueEmpty</name></member>
      <member refid="classgcn_1_1SDLInput_1af05e4d033c0dfc9375d157e66a50d6a6" prot="protected" virt="non-virtual"><scope>gcn::SDLInput</scope><name>mIsRepeating</name></member>
      <member refid="classgcn_1_1SDLInput_1a6ea157cddb2087e23e1aa91baa96dce6" prot="protected" virt="non-virtual"><scope>gcn::SDLInput</scope><name>mKeyInputQueue</name></member>
      <member refid="classgcn_1_1SDLInput_1a4935949537ead17d332c9cee4e33984c" prot="protected" virt="non-virtual"><scope>gcn::SDLInput</scope><name>mLastKey</name></member>
      <member refid="classgcn_1_1SDLInput_1acf1293d864c98705de0cb2d7ae7a2da4" prot="protected" virt="non-virtual"><scope>gcn::SDLInput</scope><name>mMouseDown</name></member>
      <member refid="classgcn_1_1SDLInput_1ad41e37deaf51638b6a9c70ac2ddc508d" prot="protected" virt="non-virtual"><scope>gcn::SDLInput</scope><name>mMouseInputQueue</name></member>
      <member refid="classgcn_1_1SDLInput_1a064b1dec0d05aa82df01b54c905e71a8" prot="protected" virt="non-virtual"><scope>gcn::SDLInput</scope><name>mMouseInWindow</name></member>
      <member refid="classgcn_1_1SDLInput_1a1811f7ebbff376be774308d973dab074" prot="public" virt="virtual"><scope>gcn::SDLInput</scope><name>processKeyRepeat</name></member>
      <member refid="classgcn_1_1SDLInput_1a8bfb0c916495042ee5b33f55c5c710a7" prot="public" virt="virtual"><scope>gcn::SDLInput</scope><name>pushInput</name></member>
      <member refid="classgcn_1_1SDLInput_1ac354cdcd092ff691cab144c835aeea2e" prot="public" virt="non-virtual"><scope>gcn::SDLInput</scope><name>SDLInput</name></member>
      <member refid="classgcn_1_1Input_1af920d08ad5c187890d2a87cbcfe9e0f7" prot="public" virt="virtual"><scope>gcn::SDLInput</scope><name>~Input</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
