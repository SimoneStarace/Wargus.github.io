<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="upgrade_8cpp" kind="file" language="C++">
    <compoundname>upgrade.cpp</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includes refid="stratagus_8h" local="yes">stratagus.h</includes>
    <includes refid="upgrade_8h" local="yes">upgrade.h</includes>
    <includes refid="action__train_8h" local="yes">action/action_train.h</includes>
    <includes refid="commands_8h" local="yes">commands.h</includes>
    <includes refid="depend_8h" local="yes">depend.h</includes>
    <includes refid="interface_8h" local="yes">interface.h</includes>
    <includes refid="iolib_8h" local="yes">iolib.h</includes>
    <includes refid="map_8h" local="yes">map.h</includes>
    <includes refid="player_8h" local="yes">player.h</includes>
    <includes refid="script_8h" local="yes">script.h</includes>
    <includes refid="unit_8h" local="yes">unit.h</includes>
    <includes refid="unit__find_8h" local="yes">unit_find.h</includes>
    <includes refid="unittype_8h" local="yes">unittype.h</includes>
    <includes refid="util_8h" local="yes">util.h</includes>
    <incdepgraph>
      <node id="21">
        <label>upgrade_structs.h</label>
        <link refid="upgrade__structs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>queue</label>
      </node>
      <node id="23">
        <label>SDL.h</label>
      </node>
      <node id="9">
        <label>cstdint</label>
      </node>
      <node id="7">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>action/action_train.h</label>
        <link refid="action__train_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>lua.h</label>
      </node>
      <node id="29">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>actions.h</label>
        <link refid="actions_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>pathfinder.h</label>
        <link refid="pathfinder_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="4">
        <label>map</label>
      </node>
      <node id="11">
        <label>upgrade.h</label>
        <link refid="upgrade_8h"/>
      </node>
      <node id="14">
        <label>unitptr.h</label>
        <link refid="unitptr_8h"/>
      </node>
      <node id="18">
        <label>interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>unit_cache.h</label>
        <link refid="unit__cache_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>lauxlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="38">
        <label>missileconfig.h</label>
        <link refid="missileconfig_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="5">
        <label>stratagus.h</label>
        <link refid="stratagus_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>color.h</label>
        <link refid="include_2color_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>unitsound.h</label>
        <link refid="unitsound_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>icons.h</label>
        <link refid="icons_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cstdlib</label>
      </node>
      <node id="17">
        <label>depend.h</label>
        <link refid="depend_8h"/>
      </node>
      <node id="39">
        <label>climits</label>
      </node>
      <node id="1">
        <label>src/unit/upgrade.cpp</label>
        <link refid="upgrade_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>map.h</label>
        <link refid="map_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>vec2i.h</label>
        <link refid="vec2i_8h"/>
      </node>
      <node id="36">
        <label>unit.h</label>
        <link refid="unit_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>tile.h</label>
        <link refid="tile_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>unit_find.h</label>
        <link refid="unit__find_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>iolib.h</label>
        <link refid="iolib_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>set</label>
      </node>
      <node id="37">
        <label>unittype.h</label>
        <link refid="unittype_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>algorithm</label>
      </node>
      <node id="30">
        <label>player.h</label>
        <link refid="player_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>lualib.h</label>
      </node>
      <node id="16">
        <label>commands.h</label>
        <link refid="commands_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <header>upgrade.cpp - The upgrade/allow functions.</header>
      <memberdef kind="variable" id="upgrade_8cpp_1a719da70ca536c551a9ca9b566db3fafd" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classCUpgrade" kindref="compound">CUpgrade</ref> * &gt;</type>
        <definition>std::vector&lt;CUpgrade *&gt; AllUpgrades</definition>
        <argsstring></argsstring>
        <name>AllUpgrades</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="68" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="upgrade_8cpp_1a847e8615a83d94c9da3ccddba624332b" prot="public" static="no" mutable="no">
        <type><ref refid="classCUpgradeModifier" kindref="compound">CUpgradeModifier</ref> *</type>
        <definition>CUpgradeModifier* UpgradeModifiers[UPGRADE_MODIFIERS_MAX]</definition>
        <argsstring>[UPGRADE_MODIFIERS_MAX]</argsstring>
        <name>UpgradeModifiers</name>
        <briefdescription>
<para>The main user useable upgrades. </para>
        </briefdescription>
        <detaileddescription>
<para>Upgrades modifiers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="71" column="18" bodyfile="src/unit/upgrade.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="upgrade_8cpp_1ad19642c0d9af799d8a26d6cbb738a5c8" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int NumUpgradeModifiers</definition>
        <argsstring></argsstring>
        <name>NumUpgradeModifiers</name>
        <briefdescription>
<para>Number of upgrades modifiers used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="73" column="5" bodyfile="src/unit/upgrade.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="upgrade_8cpp_1aac3eb32e16d4ff80e452eb00f12ffd5b" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="classCUpgrade" kindref="compound">CUpgrade</ref> * &gt;</type>
        <definition>std::map&lt;std::string, CUpgrade *&gt; Upgrades</definition>
        <argsstring></argsstring>
        <name>Upgrades</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="75" column="10" bodyfile="src/unit/upgrade.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1a0ca47f9ea782539a6970807b32896591" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void AllowUnitId</definition>
        <argsstring>(CPlayer &amp;player, int id, int units)</argsstring>
        <name>AllowUnitId</name>
        <param>
          <type><ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>units</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change allow for an unit-type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Player to change </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>unit type id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>units</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum amount of units allowed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="1045" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="1045" bodyend="1048" declfile="src/unit/upgrade.cpp" declline="62" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1a0ace6a129b2840d3721c685deff2fb9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InitUpgrades</definition>
        <argsstring>()</argsstring>
        <name>InitUpgrades</name>
        <briefdescription>
<para>init upgrade/allow structures </para>
        </briefdescription>
        <detaileddescription>
<para>Init upgrade/allow structures </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="176" column="6" bodyfile="src/unit/upgrade.cpp" bodystart="176" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1a219c8b125626428be1c1a300f50636ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CleanUpgrades</definition>
        <argsstring>()</argsstring>
        <name>CleanUpgrades</name>
        <briefdescription>
<para>cleanup upgrade module </para>
        </briefdescription>
        <detaileddescription>
<para>Cleanup the upgrade module. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="183" column="6" bodyfile="src/unit/upgrade.cpp" bodystart="183" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1ae611f92ea155dd03674b2b56fba66970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void SaveUpgrades</definition>
        <argsstring>(CFile &amp;file)</argsstring>
        <name>SaveUpgrades</name>
        <param>
          <type><ref refid="classCFile" kindref="compound">CFile</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>save the upgrades </para>
        </briefdescription>
        <detaileddescription>
<para>Save state of the dependencies to file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>Output file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="207" column="6" bodyfile="src/unit/upgrade.cpp" bodystart="207" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1a1a0cdc5961273d7bcf5738767ec5e4d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int CclDefineModifier</definition>
        <argsstring>(lua_State *l)</argsstring>
        <name>CclDefineModifier</name>
        <param>
          <type>lua_State *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define a new upgrade modifier.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>List of modifiers. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="248" column="12" bodyfile="src/unit/upgrade.cpp" bodystart="248" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1ad5442c4dcf8afc239cbc695106c62b57" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int CclDefineUnitAllow</definition>
        <argsstring>(lua_State *l)</argsstring>
        <name>CclDefineUnitAllow</name>
        <param>
          <type>lua_State *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define which units are allowed and how much. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="364" column="12" bodyfile="src/unit/upgrade.cpp" bodystart="364" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1af6816b85b7276d5dbed7832e9c25e2ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int CclDefineAllow</definition>
        <argsstring>(lua_State *l)</argsstring>
        <name>CclDefineAllow</name>
        <param>
          <type>lua_State *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define which units/upgrades are allowed. </para>
        </detaileddescription>
        <inbodydescription>
<para>How many units supported</para>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="387" column="12" bodyfile="src/unit/upgrade.cpp" bodystart="387" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1afcea412a42eb1ecbfee42e06f0085c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UpgradesCclRegister</definition>
        <argsstring>()</argsstring>
        <name>UpgradesCclRegister</name>
        <briefdescription>
<para>Register CCL features for upgrades. </para>
        </briefdescription>
        <detaileddescription>
<para>Register CCL features for upgrades. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="427" column="6" bodyfile="src/unit/upgrade.cpp" bodystart="427" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1a946a7a4328688ccd55645f59cddf74d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UnitTypeIdByIdent</definition>
        <argsstring>(const std::string &amp;ident)</argsstring>
        <name>UnitTypeIdByIdent</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ident</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>UnitType ID by identifier.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ident</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit-type identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Unit-type ID (int) or -1 if not found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="447" column="5" bodyfile="src/unit/upgrade.cpp" bodystart="447" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1ad76c036b15c5f0c7ca4e5def49c9c5c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UpgradeIdByIdent</definition>
        <argsstring>(const std::string &amp;ident)</argsstring>
        <name>UpgradeIdByIdent</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ident</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Upgrade ID by identifier.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ident</parametername>
</parameternamelist>
<parameterdescription>
<para>The upgrade identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Upgrade ID (int) or -1 if not found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="464" column="5" bodyfile="src/unit/upgrade.cpp" bodystart="464" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1ab092e5f7a723a642d9b99bc09580969c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void ConvertUnitTypeTo</definition>
        <argsstring>(CPlayer &amp;player, const CUnitType &amp;src, CUnitType &amp;dst)</argsstring>
        <name>ConvertUnitTypeTo</name>
        <param>
          <type><ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert unit-type to.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>For this player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>From this unit-type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>To this unit-type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="486" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="486" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1a4ecab108180d371f074b9bb2ca1df778" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void ApplyUpgradeModifier</definition>
        <argsstring>(CPlayer &amp;player, const CUpgradeModifier *um)</argsstring>
        <name>ApplyUpgradeModifier</name>
        <param>
          <type><ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>const <ref refid="classCUpgradeModifier" kindref="compound">CUpgradeModifier</ref> *</type>
          <declname>um</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply the modifiers of an upgrade.</para>
<para>This function will mark upgrade done and do all required modifications to unit types and will modify allow/forbid maps</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Player that get all the upgrades. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>um</parametername>
</parameternamelist>
<parameterdescription>
<para>Upgrade modifier that do the effects </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="519" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="519" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1a8c5a4503179ca4c30707ec78cb846c15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void RemoveUpgradeModifier</definition>
        <argsstring>(CPlayer &amp;player, const CUpgradeModifier *um)</argsstring>
        <name>RemoveUpgradeModifier</name>
        <param>
          <type><ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>const <ref refid="classCUpgradeModifier" kindref="compound">CUpgradeModifier</ref> *</type>
          <declname>um</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove the modifiers of an upgrade.</para>
<para>This function will unmark upgrade as done and undo all required modifications to unit types and will modify allow/forbid maps back</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Player that get all the upgrades. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>um</parametername>
</parameternamelist>
<parameterdescription>
<para>Upgrade modifier that do the effects </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="685" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="685" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1a41414444d7f049718f42417659ca5766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void ApplyIndividualUpgradeModifier</definition>
        <argsstring>(CUnit &amp;unit, const CUpgradeModifier *um)</argsstring>
        <name>ApplyIndividualUpgradeModifier</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classCUpgradeModifier" kindref="compound">CUpgradeModifier</ref> *</type>
          <declname>um</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply the modifiers of an individual upgrade.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit that will get the modifier applied </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>um</parametername>
</parameternamelist>
<parameterdescription>
<para>Upgrade modifier that does the effects </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="848" column="6" bodyfile="src/unit/upgrade.cpp" bodystart="848" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1ae6f64aaf51be85df4e42e3cd758620cf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void RemoveIndividualUpgradeModifier</definition>
        <argsstring>(CUnit &amp;unit, const CUpgradeModifier *um)</argsstring>
        <name>RemoveIndividualUpgradeModifier</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classCUpgradeModifier" kindref="compound">CUpgradeModifier</ref> *</type>
          <declname>um</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="883" column="13" bodyfile="src/unit/upgrade.cpp" bodystart="883" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1a8fb29aea230344e9a714008ce23478a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UpgradeAcquire</definition>
        <argsstring>(CPlayer &amp;player, const CUpgrade *upgrade)</argsstring>
        <name>UpgradeAcquire</name>
        <param>
          <type><ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>const <ref refid="classCUpgrade" kindref="compound">CUpgrade</ref> *</type>
          <declname>upgrade</declname>
        </param>
        <briefdescription>
<para>Upgrade will be acquired. </para>
        </briefdescription>
        <detaileddescription>
<para>Handle that an upgrade was acquired.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Player researching the upgrade. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upgrade</parametername>
</parameternamelist>
<parameterdescription>
<para>Upgrade ready researched. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="920" column="6" bodyfile="src/unit/upgrade.cpp" bodystart="920" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1a058e92b23962e5e638af0fa133b7bbdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UpgradeLost</definition>
        <argsstring>(CPlayer &amp;player, int id)</argsstring>
        <name>UpgradeLost</name>
        <param>
          <type><ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Upgrade will be lost. </para>
        </briefdescription>
        <detaileddescription>
<para>Upgrade will be lost</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Player researching the upgrade. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Upgrade to be lost. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="947" column="6" bodyfile="src/unit/upgrade.cpp" bodystart="947" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1af6155967132441daa9f469389d054594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void ApplyUpgrades</definition>
        <argsstring>()</argsstring>
        <name>ApplyUpgrades</name>
        <briefdescription>
<para>Apply researched upgrades when map is loading. </para>
        </briefdescription>
        <detaileddescription>
<para>Apply researched upgrades when map is loading</para>
<para><simplesect kind="return"><para>: void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="970" column="6" bodyfile="src/unit/upgrade.cpp" bodystart="970" bodyend="990"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1ae16b513b5f672b8d8ad4c4e417f19b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void IndividualUpgradeAcquire</definition>
        <argsstring>(CUnit &amp;unit, const CUpgrade *upgrade)</argsstring>
        <name>IndividualUpgradeAcquire</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classCUpgrade" kindref="compound">CUpgrade</ref> *</type>
          <declname>upgrade</declname>
        </param>
        <briefdescription>
<para>Apply upgrade modifier of an individual upgrade. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="992" column="6" bodyfile="src/unit/upgrade.cpp" bodystart="992" bodyend="1010"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1aa36a04a12524b19eb4be062cb8526824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void IndividualUpgradeLost</definition>
        <argsstring>(CUnit &amp;unit, const CUpgrade *upgrade)</argsstring>
        <name>IndividualUpgradeLost</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classCUpgrade" kindref="compound">CUpgrade</ref> *</type>
          <declname>upgrade</declname>
        </param>
        <briefdescription>
<para>Make a unit acquire in individual upgrade. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="1012" column="6" bodyfile="src/unit/upgrade.cpp" bodystart="1012" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1adfa461aff91798a78fb699f6c997e016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void AllowUpgradeId</definition>
        <argsstring>(CPlayer &amp;player, int id, char af)</argsstring>
        <name>AllowUpgradeId</name>
        <param>
          <type><ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>char</type>
          <declname>af</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change allow for an upgrade.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Player to change </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>upgrade id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>af</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>A&apos;llow/</computeroutput>F&apos;orbid/`R&apos;eseached </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="1057" column="6" bodyfile="src/unit/upgrade.cpp" bodystart="1057" bodyend="1061"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1a6d6db5016bca83c8f300d7f456464b4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UnitIdAllowed</definition>
        <argsstring>(const CPlayer &amp;player, int id)</argsstring>
        <name>UnitIdAllowed</name>
        <param>
          <type>const <ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Make a unit lose in individual upgrade. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the allow state of the unit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Check state of this player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit identifier.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the allow state of the unit. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="1071" column="5" bodyfile="src/unit/upgrade.cpp" bodystart="1071" bodyend="1075"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1a4bf981fde6ae6b2bb672f5ec2b562044" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char UpgradeIdAllowed</definition>
        <argsstring>(const CPlayer &amp;player, int id)</argsstring>
        <name>UpgradeIdAllowed</name>
        <param>
          <type>const <ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the allow state of an upgrade.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Check state for this player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Upgrade identifier.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the allow state of the upgrade. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="1085" column="6" bodyfile="src/unit/upgrade.cpp" bodystart="1085" bodyend="1089"/>
      </memberdef>
      <memberdef kind="function" id="upgrade_8cpp_1a6b835a7a7bafaa2f9c4380662cc09217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char UpgradeIdentAllowed</definition>
        <argsstring>(const CPlayer &amp;player, const std::string &amp;ident)</argsstring>
        <name>UpgradeIdentAllowed</name>
        <param>
          <type>const <ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>ident</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the allow state of an upgrade.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Check state for this player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ident</parametername>
</parameternamelist>
<parameterdescription>
<para>Upgrade identifier.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function shouldn&apos;t be used during runtime, it is only for setup. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/upgrade.cpp" line="1101" column="6" bodyfile="src/unit/upgrade.cpp" bodystart="1101" bodyend="1110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/unit/upgrade.cpp"/>
  </compounddef>
</doxygen>
