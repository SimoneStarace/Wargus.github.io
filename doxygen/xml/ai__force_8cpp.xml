<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="ai__force_8cpp" kind="file" language="C++">
    <compoundname>ai_force.cpp</compoundname>
    <includes refid="stratagus_8h" local="yes">stratagus.h</includes>
    <includes refid="ai__local_8h" local="yes">ai_local.h</includes>
    <includes refid="actions_8h" local="yes">actions.h</includes>
    <includes refid="action__attack_8h" local="yes">action/action_attack.h</includes>
    <includes refid="action__board_8h" local="yes">action/action_board.h</includes>
    <includes refid="commands_8h" local="yes">commands.h</includes>
    <includes refid="depend_8h" local="yes">depend.h</includes>
    <includes refid="map_8h" local="yes">map.h</includes>
    <includes refid="pathfinder_8h" local="yes">pathfinder.h</includes>
    <includes refid="tileset_8h" local="yes">tileset.h</includes>
    <includes refid="unit_8h" local="yes">unit.h</includes>
    <includes refid="unit__find_8h" local="yes">unit_find.h</includes>
    <includes refid="unittype_8h" local="yes">unittype.h</includes>
    <incdepgraph>
      <node id="11">
        <label>upgrade_structs.h</label>
        <link refid="upgrade__structs_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/ai/ai_force.cpp</label>
        <link refid="ai__force_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>queue</label>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="4">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>stdint.h</label>
      </node>
      <node id="15">
        <label>actions.h</label>
        <link refid="actions_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>pathfinder.h</label>
        <link refid="pathfinder_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="34">
        <label>map</label>
      </node>
      <node id="16">
        <label>unitptr.h</label>
        <link refid="unitptr_8h"/>
      </node>
      <node id="17">
        <label>action/action_attack.h</label>
        <link refid="action__attack_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>unit_cache.h</label>
        <link refid="unit__cache_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ai_local.h</label>
        <link refid="ai__local_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="32">
        <label>missileconfig.h</label>
        <link refid="missileconfig_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="2">
        <label>stratagus.h</label>
        <link refid="stratagus_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>color.h</label>
        <link refid="include_2color_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>action/action_board.h</label>
        <link refid="action__board_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>unitsound.h</label>
        <link refid="unitsound_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>icons.h</label>
        <link refid="icons_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cstdlib</label>
      </node>
      <node id="20">
        <label>depend.h</label>
        <link refid="depend_8h"/>
      </node>
      <node id="33">
        <label>climits</label>
      </node>
      <node id="21">
        <label>map.h</label>
        <link refid="map_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>vec2i.h</label>
        <link refid="vec2i_8h"/>
      </node>
      <node id="28">
        <label>unit.h</label>
        <link refid="unit_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>tileset.h</label>
        <link refid="tileset_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>tile.h</label>
        <link refid="tile_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>unit_find.h</label>
        <link refid="unit__find_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>set</label>
      </node>
      <node id="29">
        <label>unittype.h</label>
        <link refid="unittype_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>algorithm</label>
      </node>
      <node id="35">
        <label>player.h</label>
        <link refid="player_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>commands.h</label>
        <link refid="commands_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classEnemyUnitFinder" prot="public">EnemyUnitFinder</innerclass>
    <innerclass refid="classAiForceEnemyFinder" prot="public">AiForceEnemyFinder</innerclass>
    <innerclass refid="classIsAnAlliedUnitOf" prot="public">IsAnAlliedUnitOf</innerclass>
    <innerclass refid="classUnitTypePrioritySorter__Decreasing" prot="public">UnitTypePrioritySorter_Decreasing</innerclass>
    <innerclass refid="classAiForceCounter" prot="public">AiForceCounter</innerclass>
    <innerclass refid="classAiForceRallyPointFinder" prot="public">AiForceRallyPointFinder</innerclass>
      <sectiondef kind="user-defined">
      <header>ai_force.cpp - AI force functions.</header>
      <memberdef kind="define" id="ai__force_8cpp_1aa14b5ad45d9e94c219ead9291ed0b48c" prot="public" static="no">
        <name>AIATTACK_RANGE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="55" column="9" bodyfile="src/ai/ai_force.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__force_8cpp_1afca0a7a106ae04fc150922f57cdc9669" prot="public" static="no">
        <name>AIATTACK_ALLMAP</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="56" column="9" bodyfile="src/ai/ai_force.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__force_8cpp_1ae054e15b626ca70bc89f54660fd6b716" prot="public" static="no">
        <name>AIATTACK_BUILDING</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="57" column="9" bodyfile="src/ai/ai_force.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__force_8cpp_1a82b0726d3508e2eb30f57bdfa0ffded5" prot="public" static="no">
        <name>AIATTACK_AGRESSIVE</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="58" column="9" bodyfile="src/ai/ai_force.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ai__force_8cpp_1af32d1883e031b12f5014e87ba1f296cd" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int UnitTypeEquivs[UnitTypeMax+1]</definition>
        <argsstring>[UnitTypeMax+1]</argsstring>
        <name>UnitTypeEquivs</name>
        <briefdescription>
<para>AI helper variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="197" column="5" bodyfile="src/ai/ai_force.cpp" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="ai__force_8cpp_1a6fbcb0a4abb40fc01d080ad82c666c5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void AiResetUnitTypeEquiv</definition>
        <argsstring>()</argsstring>
        <name>AiResetUnitTypeEquiv</name>
        <briefdescription>
<para>equivalence between unittypes </para>
        </briefdescription>
        <detaileddescription>
<para>Remove any equivalence between unittypes.</para>
<para>Remove any equivalence between unittypes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="206" column="6" bodyfile="src/ai/ai_force.cpp" bodystart="206" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="ai__force_8cpp_1afcbc7060febf2a41bc9441f7e0d10a1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void AiNewUnitTypeEquiv</definition>
        <argsstring>(const CUnitType &amp;a, const CUnitType &amp;b)</argsstring>
        <name>AiNewUnitTypeEquiv</name>
        <param>
          <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Make two unittypes be considered equals. </para>
        </briefdescription>
        <detaileddescription>
<para>Make two unittypes equivalents from the AI&apos;s point of vue</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>the first unittype </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>the second unittype </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="219" column="6" bodyfile="src/ai/ai_force.cpp" bodystart="219" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="ai__force_8cpp_1a052941ecbf3f96be7f926fa804f0f686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AiFindUnitTypeEquiv</definition>
        <argsstring>(const CUnitType &amp;unittype, int *result)</argsstring>
        <name>AiFindUnitTypeEquiv</name>
        <param>
          <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;</type>
          <declname>unittype</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Finds all equivalents units to a given one. </para>
        </briefdescription>
        <detaileddescription>
<para>Find All unittypes equivalent to a given one</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unittype</parametername>
</parameternamelist>
<parameterdescription>
<para>the unittype to find equivalence for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>int array which will hold the result. (Size UnitTypeMax+1)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of unittype found </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="246" column="5" bodyfile="src/ai/ai_force.cpp" bodystart="246" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="ai__force_8cpp_1a92fea4548de52fae1522ed22836d5d4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AiFindAvailableUnitTypeEquiv</definition>
        <argsstring>(const CUnitType &amp;unittype, int *usableTypes)</argsstring>
        <name>AiFindAvailableUnitTypeEquiv</name>
        <param>
          <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;</type>
          <declname>unittype</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>usableTypes</declname>
        </param>
        <briefdescription>
<para>Finds all available equivalents units to a given one, in the preferred order. </para>
        </briefdescription>
        <detaileddescription>
<para>Find All unittypes equivalent to a given one, and which are available UnitType are returned in the preferred order (ie palladin &gt;&gt; knight...)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unittype</parametername>
</parameternamelist>
<parameterdescription>
<para>The unittype to find equivalence for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>usableTypes</parametername>
</parameternamelist>
<parameterdescription>
<para>int array which will hold the result. (Size UnitTypeMax+1)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of unittype found </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="279" column="5" bodyfile="src/ai/ai_force.cpp" bodystart="279" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="ai__force_8cpp_1a393b4af7cfb86d25b939ececa4119b1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void AiRemoveDeadUnitInForces</definition>
        <argsstring>()</argsstring>
        <name>AiRemoveDeadUnitInForces</name>
        <briefdescription>
<para>Cleanup units in force. </para>
        </briefdescription>
        <detaileddescription>
<para>Cleanup units in forces. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="698" column="6" bodyfile="src/ai/ai_force.cpp" bodystart="698" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="ai__force_8cpp_1a7d9353a199b17d26008f694f7f23301e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AiAssignToForce</definition>
        <argsstring>(CUnit &amp;unit)</argsstring>
        <name>AiAssignToForce</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Assign a new unit to a force. </para>
        </briefdescription>
        <detaileddescription>
<para>Ai assign unit to force.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit to assign to force. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="708" column="6" bodyfile="src/ai/ai_force.cpp" bodystart="708" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="ai__force_8cpp_1aef1b2ea8a6e82d222c322441d07e7a17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void AiAssignFreeUnitsToForce</definition>
        <argsstring>(int force)</argsstring>
        <name>AiAssignFreeUnitsToForce</name>
        <param>
          <type>int</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Assign a free units to a force. </para>
        </briefdescription>
        <detaileddescription>
<para>Assign free units to force. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="716" column="6" bodyfile="src/ai/ai_force.cpp" bodystart="716" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="ai__force_8cpp_1a87cebc10782b5a340b45ed89840707a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void AiAttackWithForceAt</definition>
        <argsstring>(unsigned int force, int x, int y)</argsstring>
        <name>AiAttackWithForceAt</name>
        <param>
          <type>unsigned int</type>
          <declname>force</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Attack with force at position. </para>
        </briefdescription>
        <detaileddescription>
<para>Register ccl features.</para>
<para>Attack at position with force.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>Force number to attack with. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X tile map position to be attacked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y tile map position to be attacked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="737" column="6" bodyfile="src/ai/ai_force.cpp" bodystart="737" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="ai__force_8cpp_1a46069cc4862a8493d9472abd80df8dd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void AiAttackWithForce</definition>
        <argsstring>(unsigned int force)</argsstring>
        <name>AiAttackWithForce</name>
        <param>
          <type>unsigned int</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Attack with force. </para>
        </briefdescription>
        <detaileddescription>
<para>Attack opponent with force.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>Force number to attack with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="759" column="6" bodyfile="src/ai/ai_force.cpp" bodystart="759" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="ai__force_8cpp_1a215443573ee6038816cf7776c3fd6c41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void AiAttackWithForces</definition>
        <argsstring>(int *forces)</argsstring>
        <name>AiAttackWithForces</name>
        <param>
          <type>int *</type>
          <declname>forces</declname>
        </param>
        <briefdescription>
<para>Attack with forces in array. </para>
        </briefdescription>
        <detaileddescription>
<para>Attack opponent with forces. Merge forces in array into one attack force and attack with it Merge is make because units in one force help each other during attack</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>forces</parametername>
</parameternamelist>
<parameterdescription>
<para>Array with Force numbers to attack with (array should be finished with -1). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="804" column="6" bodyfile="src/ai/ai_force.cpp" bodystart="804" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="ai__force_8cpp_1a5e2db701e7624c4aec0090bf0c9b9e82" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void AiGroupAttackerForTransport</definition>
        <argsstring>(AiForce &amp;aiForce)</argsstring>
        <name>AiGroupAttackerForTransport</name>
        <param>
          <type><ref refid="classAiForce" kindref="compound">AiForce</ref> &amp;</type>
          <declname>aiForce</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load all unit before attack.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aiForce</parametername>
</parameternamelist>
<parameterdescription>
<para>force to group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="851" column="13" bodyfile="src/ai/ai_force.cpp" bodystart="851" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="ai__force_8cpp_1a2376f79cff5ef68ccba17e71fd4b575e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void AiForceManager</definition>
        <argsstring>()</argsstring>
        <name>AiForceManager</name>
        <briefdescription>
<para>Periodic called force manager handler. </para>
        </briefdescription>
        <detaileddescription>
<para>Entry point of force manager, periodic called. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="1207" column="6" bodyfile="src/ai/ai_force.cpp" bodystart="1207" bodyend="1211"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/ai/ai_force.cpp"/>
  </compounddef>
</doxygen>
