<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgcn_1_1Exception" kind="class" language="C++" prot="public">
    <compoundname>gcn::Exception</compoundname>
    <includes refid="exception_8h" local="no">exception.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgcn_1_1Exception_1ac4cecdef532e30f82d9095789732cfaa" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string gcn::Exception::mFunction</definition>
        <argsstring></argsstring>
        <name>mFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/exception.h" line="154" column="21" bodyfile="src/guichan/include/guichan/exception.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgcn_1_1Exception_1a1337ec9291e5587eb2a544212aaa1355" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string gcn::Exception::mMessage</definition>
        <argsstring></argsstring>
        <name>mMessage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/exception.h" line="155" column="21" bodyfile="src/guichan/include/guichan/exception.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgcn_1_1Exception_1a698a27a1b9d2fba424141d228f5a97a0" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string gcn::Exception::mFilename</definition>
        <argsstring></argsstring>
        <name>mFilename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/exception.h" line="156" column="21" bodyfile="src/guichan/include/guichan/exception.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgcn_1_1Exception_1aaac5868e205d6e89d1546e18ac244daf" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int gcn::Exception::mLine</definition>
        <argsstring></argsstring>
        <name>mLine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/exception.h" line="157" column="13" bodyfile="src/guichan/include/guichan/exception.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgcn_1_1Exception_1ac6c412a3c4d4f1727b8c847b5dd63bf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gcn::Exception::Exception</definition>
        <argsstring>()</argsstring>
        <name>Exception</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/exception.h" line="101" column="9" bodyfile="src/guichan/exception.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1Exception_1a4f475350e88e0538f51ec91fb357c729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gcn::Exception::Exception</definition>
        <argsstring>(const std::string &amp;message)</argsstring>
        <name>Exception</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the error message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/exception.h" line="108" column="9" bodyfile="src/guichan/exception.cpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1Exception_1ac3bae5d8753050442871681b59b63773" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gcn::Exception::Exception</definition>
        <argsstring>(const std::string &amp;message, const std::string &amp;function, const std::string &amp;filename, int line)</argsstring>
        <name>Exception</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para>
<para>NOTE: Don&apos;t use this constructor. Use the GCN_EXCEPTION macro instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the error message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>the function name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>the line number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/exception.h" line="120" column="9" bodyfile="src/guichan/exception.cpp" bodystart="73" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1Exception_1a2c0b0e1c020ce1d439d628f2a2dd27e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; gcn::Exception::getFunction</definition>
        <argsstring>() const</argsstring>
        <name>getFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the function name in which the exception was thrown.</para>
<para><simplesect kind="return"><para>the function name in which the exception was thrown. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/exception.h" line="130" column="27" bodyfile="src/guichan/exception.cpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1Exception_1a780d102592d4a6f83603774ae14da010" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; gcn::Exception::getMessage</definition>
        <argsstring>() const</argsstring>
        <name>getMessage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the error message of the exception.</para>
<para><simplesect kind="return"><para>the error message. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/exception.h" line="137" column="27" bodyfile="src/guichan/exception.cpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1Exception_1a6988f544bd30562feb0839124952d8ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; gcn::Exception::getFilename</definition>
        <argsstring>() const</argsstring>
        <name>getFilename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the filename in which the exceptions was thrown.</para>
<para><simplesect kind="return"><para>the filename in which the exception was thrown. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/exception.h" line="144" column="27" bodyfile="src/guichan/exception.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1Exception_1a3ccaf1cc141674fc0520c4d62c997d43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gcn::Exception::getLine</definition>
        <argsstring>() const</argsstring>
        <name>getLine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the line number of the line where the exception was thrown.</para>
<para><simplesect kind="return"><para>the line number of the line where the exception was thrown. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/exception.h" line="151" column="13" bodyfile="src/guichan/exception.cpp" bodystart="99" bodyend="102"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An exception containing a message, a file and a line number. Guichan will only throw exceptions of this class. You can use this class for your own exceptions. A nifty feature of the excpetion class is that it can tell you from which line and file it was thrown. To make things easier when throwing exceptions there exists a macro for creating exceptions which automatically sets the filename and line number.</para>
<para>EXAMPLE:<programlisting><codeline><highlight class="normal">throw<sp/>GCN_EXCEPTION(&quot;my<sp/>error<sp/>message&quot;);</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>string</label>
      </node>
      <node id="1">
        <label>gcn::Exception</label>
        <link refid="classgcn_1_1Exception"/>
        <childnode refid="2" relation="usage">
          <edgelabel>mFilename</edgelabel>
          <edgelabel>mFunction</edgelabel>
          <edgelabel>mMessage</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/guichan/include/guichan/exception.h" line="95" column="1" bodyfile="src/guichan/include/guichan/exception.h" bodystart="94" bodyend="158"/>
    <listofallmembers>
      <member refid="classgcn_1_1Exception_1ac6c412a3c4d4f1727b8c847b5dd63bf2" prot="public" virt="non-virtual"><scope>gcn::Exception</scope><name>Exception</name></member>
      <member refid="classgcn_1_1Exception_1a4f475350e88e0538f51ec91fb357c729" prot="public" virt="non-virtual"><scope>gcn::Exception</scope><name>Exception</name></member>
      <member refid="classgcn_1_1Exception_1ac3bae5d8753050442871681b59b63773" prot="public" virt="non-virtual"><scope>gcn::Exception</scope><name>Exception</name></member>
      <member refid="classgcn_1_1Exception_1a6988f544bd30562feb0839124952d8ac" prot="public" virt="non-virtual"><scope>gcn::Exception</scope><name>getFilename</name></member>
      <member refid="classgcn_1_1Exception_1a2c0b0e1c020ce1d439d628f2a2dd27e1" prot="public" virt="non-virtual"><scope>gcn::Exception</scope><name>getFunction</name></member>
      <member refid="classgcn_1_1Exception_1a3ccaf1cc141674fc0520c4d62c997d43" prot="public" virt="non-virtual"><scope>gcn::Exception</scope><name>getLine</name></member>
      <member refid="classgcn_1_1Exception_1a780d102592d4a6f83603774ae14da010" prot="public" virt="non-virtual"><scope>gcn::Exception</scope><name>getMessage</name></member>
      <member refid="classgcn_1_1Exception_1a698a27a1b9d2fba424141d228f5a97a0" prot="protected" virt="non-virtual"><scope>gcn::Exception</scope><name>mFilename</name></member>
      <member refid="classgcn_1_1Exception_1ac4cecdef532e30f82d9095789732cfaa" prot="protected" virt="non-virtual"><scope>gcn::Exception</scope><name>mFunction</name></member>
      <member refid="classgcn_1_1Exception_1aaac5868e205d6e89d1546e18ac244daf" prot="protected" virt="non-virtual"><scope>gcn::Exception</scope><name>mLine</name></member>
      <member refid="classgcn_1_1Exception_1a1337ec9291e5587eb2a544212aaa1355" prot="protected" virt="non-virtual"><scope>gcn::Exception</scope><name>mMessage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
