<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classCMap" kind="class" language="C++" prot="public">
    <compoundname>CMap</compoundname>
    <includes refid="map_8h" local="no">map.h</includes>
      <sectiondef kind="user-defined">
      <header>map.cpp - The map.</header>
      <memberdef kind="function" id="classCMap_1a7ad71523562247ed2183e57eaed018e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CMap::CMap</definition>
        <argsstring>()</argsstring>
        <name>CMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="152" column="1" bodyfile="src/map/map.cpp" bodystart="311" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a9419f5696c22e9569612b79db2872e02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CMap::~CMap</definition>
        <argsstring>()</argsstring>
        <name>~CMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="153" column="1" bodyfile="src/map/map.cpp" bodystart="316" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a8965eb791321a75665b10a2bbe5c72d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::Create</definition>
        <argsstring>()</argsstring>
        <name>Create</name>
        <briefdescription>
<para>Alocate and initialise map table. </para>
        </briefdescription>
        <detaileddescription>
<para>Alocate and initialise map table </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="179" column="6" bodyfile="src/map/map.cpp" bodystart="324" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a604f597cf8d0f5a5428bceba203f8550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <briefdescription>
<para>Build tables for map. </para>
        </briefdescription>
        <detaileddescription>
<para>Initialize the fog of war. Build tables, setup functions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="181" column="6" bodyfile="src/map/map.cpp" bodystart="335" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a379123dbf069a7b9582763b3ac5ab212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::Clean</definition>
        <argsstring>()</argsstring>
        <name>Clean</name>
        <briefdescription>
<para>Clean the map. </para>
        </briefdescription>
        <detaileddescription>
<para>Cleanup the map module. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="183" column="6" bodyfile="src/map/map.cpp" bodystart="343" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a173b04ebc42dfd052f332fd66e8e4574" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::ClearWoodTile</definition>
        <argsstring>(const Vec2i &amp;pos)</argsstring>
        <name>ClearWoodTile</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Remove wood from the map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="188" column="6" bodyfile="src/map/map.cpp" bodystart="520" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a77b4490b96b57e7d00f17967121181ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::ClearRockTile</definition>
        <argsstring>(const Vec2i &amp;pos)</argsstring>
        <name>ClearRockTile</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Remove rock from the map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="190" column="6" bodyfile="src/map/map.cpp" bodystart="538" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a48ea0ceabb62502794106a33ea63ef18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref></type>
        <definition>Vec2i CMap::MapPixelPosToTilePos</definition>
        <argsstring>(const PixelPos &amp;mapPos) const</argsstring>
        <name>MapPixelPosToTilePos</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a20cc8627b3e52515a26778e489bda2ae" kindref="member">PixelPos</ref> &amp;</type>
          <declname>mapPos</declname>
        </param>
        <briefdescription>
<para>convert map pixelpos coordonates into tilepos </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="193" column="7" bodyfile="src/map/map.cpp" bodystart="162" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1ae0d19d141295a0181d7503f912d3147c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vec2i_8h_1a20cc8627b3e52515a26778e489bda2ae" kindref="member">PixelPos</ref></type>
        <definition>PixelPos CMap::TilePosToMapPixelPos_TopLeft</definition>
        <argsstring>(const Vec2i &amp;tilePos) const</argsstring>
        <name>TilePosToMapPixelPos_TopLeft</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>tilePos</declname>
        </param>
        <briefdescription>
<para>convert tilepos coordonates into map pixel pos (take the top left of the tile) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="195" column="10" bodyfile="src/map/map.cpp" bodystart="169" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1aa45b9488fee078f02d2d9bd2fae9ffee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vec2i_8h_1a20cc8627b3e52515a26778e489bda2ae" kindref="member">PixelPos</ref></type>
        <definition>PixelPos CMap::TilePosToMapPixelPos_Center</definition>
        <argsstring>(const Vec2i &amp;tilePos) const</argsstring>
        <name>TilePosToMapPixelPos_Center</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>tilePos</declname>
        </param>
        <briefdescription>
<para>convert tilepos coordonates into map pixel pos (take the center of the tile) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="197" column="10" bodyfile="src/map/map.cpp" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1ac1e8494fa015d7eeac9ae8a8e2044747" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::MarkSeenTile</definition>
        <argsstring>(CMapField &amp;mf)</argsstring>
        <name>MarkSeenTile</name>
        <param>
          <type><ref refid="classCMapField" kindref="compound">CMapField</ref> &amp;</type>
          <declname>mf</declname>
        </param>
        <briefdescription>
<para>Mark a tile as seen by the player. </para>
        </briefdescription>
        <detaileddescription>
<para>Path of the current map.</para>
<para>Marks seen tile <ndash/> used mainly for the Fog Of War</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mf</parametername>
</parameternamelist>
<parameterdescription>
<para>MapField-position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="200" column="6" bodyfile="src/map/map.cpp" bodystart="69" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a28a64fdf269b29b76e7626150162088f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::RegenerateForest</definition>
        <argsstring>()</argsstring>
        <name>RegenerateForest</name>
        <briefdescription>
<para>Regenerate the forest. </para>
        </briefdescription>
        <detaileddescription>
<para>Regenerate forest. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="203" column="6" bodyfile="src/map/map.cpp" bodystart="622" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a43f32032ac6e5bbf80fa8061eb13bc3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::Reveal</definition>
        <argsstring>()</argsstring>
        <name>Reveal</name>
        <briefdescription>
<para>Reveal the complete map, make everything known. </para>
        </briefdescription>
        <detaileddescription>
<para>Reveal the entire map. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="205" column="6" bodyfile="src/map/map.cpp" bodystart="131" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1abfb72e03be3c55acfc864cb89e25e146" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::Save</definition>
        <argsstring>(CFile &amp;file) const</argsstring>
        <name>Save</name>
        <param>
          <type><ref refid="classCFile" kindref="compound">CFile</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Save the map. </para>
        </briefdescription>
        <detaileddescription>
<para>Save the complete map.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>Output file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="207" column="6" bodyfile="src/map/map.cpp" bodystart="368" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a612d5898c9e9a2ba13b468c354c02273" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CMap::WallOnMap</definition>
        <argsstring>(const Vec2i &amp;pos) const</argsstring>
        <name>WallOnMap</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Returns true, if wall on the map tile field. </para>
        </briefdescription>
        <detaileddescription>
<para>Wall on map tile.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>map tile position.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if wall, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="220" column="6" bodyfile="src/map/map.cpp" bodystart="188" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a1e568377b6cff48de8c8c275906069f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CMap::HumanWallOnMap</definition>
        <argsstring>(const Vec2i &amp;pos) const</argsstring>
        <name>HumanWallOnMap</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Returns true, if human wall on the map tile field. </para>
        </briefdescription>
        <detaileddescription>
<para>Human wall on map tile.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>map tile position.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if human wall, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="222" column="6" bodyfile="src/map/map.cpp" bodystart="201" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a55972db733be7a6861b8c061f9a0328e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CMap::OrcWallOnMap</definition>
        <argsstring>(const Vec2i &amp;pos) const</argsstring>
        <name>OrcWallOnMap</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Returns true, if orc wall on the map tile field. </para>
        </briefdescription>
        <detaileddescription>
<para>Orc wall on map tile.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>map tile position.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if orcish wall, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="224" column="6" bodyfile="src/map/map.cpp" bodystart="214" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1aff9c628d2cd26a38fd9730b82541fd4b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::FixNeighbors</definition>
        <argsstring>(unsigned short type, int seen, const Vec2i &amp;pos)</argsstring>
        <name>FixNeighbors</name>
        <param>
          <type>unsigned short</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seen</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Correct the surrounding seen wood fields. </para>
        </briefdescription>
        <detaileddescription>
<para>Correct the surrounding fields.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Tiletype of tile to adjust </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seen</parametername>
</parameternamelist>
<parameterdescription>
<para>1 if updating seen value, 0 for real </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Map tile-position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="251" column="6" bodyfile="src/map/map.cpp" bodystart="508" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1aa44c7a6b1770399cfb39e82ed2e34f93" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::FixTile</definition>
        <argsstring>(unsigned short type, int seen, const Vec2i &amp;pos)</argsstring>
        <name>FixTile</name>
        <param>
          <type>unsigned short</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seen</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Correct the seen wood field, depending on the surrounding. </para>
        </briefdescription>
        <detaileddescription>
<para>Correct the seen wood field, depending on the surrounding.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of tile to update </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seen</parametername>
</parameternamelist>
<parameterdescription>
<para>1 if updating seen value, 0 for real </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Map tile-position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="253" column="6" bodyfile="src/map/map.cpp" bodystart="408" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a3d27aa917eb00700a1804e8d9ed791d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::RegenerateForestTile</definition>
        <argsstring>(const Vec2i &amp;pos)</argsstring>
        <name>RegenerateForestTile</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Regenerate the forest. </para>
        </briefdescription>
        <detaileddescription>
<para>Regenerate forest.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Map tile pos </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="256" column="6" bodyfile="src/map/map.cpp" bodystart="563" bodyend="617"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>map_fog.cpp - The map fog of war handling.</header>
      <memberdef kind="variable" id="classCMap_1ac0412d56525c93483724e256f58e6968" prot="public" static="yes" mutable="no">
        <type><ref refid="classCGraphic" kindref="compound">CGraphic</ref> *</type>
        <definition>CGraphic * CMap::FogGraphic</definition>
        <argsstring></argsstring>
        <name>FogGraphic</name>
        <briefdescription>
<para>graphic for all the tiles </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="265" column="17" bodyfile="src/include/map.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a051af5e424d3dd287bbdaf8c4472e248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::CleanFogOfWar</definition>
        <argsstring>()</argsstring>
        <name>CleanFogOfWar</name>
        <briefdescription>
<para>Cleanup memory for fog of war tables. </para>
        </briefdescription>
        <detaileddescription>
<para>Cleanup the fog of war. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="185" column="6" bodyfile="src/map/map_fog.cpp" bodystart="727" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1af78a2d91ae70f251a41933e3a2cfb529" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::InitFogOfWar</definition>
        <argsstring>()</argsstring>
        <name>InitFogOfWar</name>
        <briefdescription>
<para>Build tables for fog of war. </para>
        </briefdescription>
        <detaileddescription>
<para>Initialize the fog of war. Build tables, setup functions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="248" column="6" bodyfile="src/map/map_fog.cpp" bodystart="653" bodyend="722"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>map_wall.cpp - The map wall handling.</header>
      <memberdef kind="function" id="classCMap_1a93b8280da0a722cfd77d2b8ea254d46b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::HitWall</definition>
        <argsstring>(const Vec2i &amp;pos, unsigned damage)</argsstring>
        <name>HitWall</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>damage</declname>
        </param>
        <briefdescription>
<para>Wall is hit. </para>
        </briefdescription>
        <detaileddescription>
<para>Wall is hit with damage.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Map tile-position of wall. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>damage</parametername>
</parameternamelist>
<parameterdescription>
<para>Damage done to wall. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="213" column="6" bodyfile="src/map/map_wall.cpp" bodystart="268" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a38a94c0d361d0ce865053dc8f366476c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::RemoveWall</definition>
        <argsstring>(const Vec2i &amp;pos)</argsstring>
        <name>RemoveWall</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Set wall on field. </para>
        </briefdescription>
        <detaileddescription>
<para>Remove wall from the map.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Map position.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
FIXME: support more walls of different races. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="215" column="6" bodyfile="src/map/map_wall.cpp" bodystart="215" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1aa6fbf8b498ff3aa85c847756c4246862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::SetWall</definition>
        <argsstring>(const Vec2i &amp;pos, bool humanwall)</argsstring>
        <name>SetWall</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>humanwall</declname>
        </param>
        <briefdescription>
<para>Set wall on field. </para>
        </briefdescription>
        <detaileddescription>
<para>Set wall onto the map.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Map position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>humanwall</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag, if true set a human wall.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000044"><xreftitle>Todo</xreftitle><xrefdescription><para>FIXME: support for more races. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="217" column="6" bodyfile="src/map/map_wall.cpp" bodystart="240" bodyend="260"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>unit_cache.cpp - The unit cache.</header>
      <memberdef kind="function" id="classCMap_1afd0c41c24a172f894636a756e93fc5c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::Insert</definition>
        <argsstring>(CUnit &amp;unit)</argsstring>
        <name>Insert</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Insert new unit into cache. </para>
        </briefdescription>
        <detaileddescription>
<para>Insert new unit into cache.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit pointer to place in cache. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="229" column="6" bodyfile="src/unit/unit_cache.cpp" bodystart="52" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a9a1d94e0acca77340fa8a93912117baf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::Remove</definition>
        <argsstring>(CUnit &amp;unit)</argsstring>
        <name>Remove</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Remove unit from cache. </para>
        </briefdescription>
        <detaileddescription>
<para>Remove unit from cache.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit pointer to remove from cache. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="232" column="6" bodyfile="src/unit/unit_cache.cpp" bodystart="76" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1aeaadb7a11d3c4e41e17074a7b1548a52" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::Clamp</definition>
        <argsstring>(Vec2i &amp;pos) const</argsstring>
        <name>Clamp</name>
        <param>
          <type><ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="234" column="6" bodyfile="src/unit/unit_cache.cpp" bodystart="96" bodyend="100"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classCMap_1a1a9a4ef4635c5b3d68211c7b4cfd583b" prot="public" static="no" mutable="no">
        <type><ref refid="classCMapField" kindref="compound">CMapField</ref> *</type>
        <definition>CMapField* CMap::Fields</definition>
        <argsstring></argsstring>
        <name>Fields</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="259" column="11" bodyfile="src/include/map.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCMap_1ab11a698e5612fa36b1a661b20cb71396" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CMap::NoFogOfWar</definition>
        <argsstring></argsstring>
        <name>NoFogOfWar</name>
        <briefdescription>
<para>fields on map </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="260" column="6" bodyfile="src/include/map.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCMap_1a221f66ade56ecbc6f96be1c83d6f22a4" prot="public" static="no" mutable="no">
        <type><ref refid="classCTileset" kindref="compound">CTileset</ref> *</type>
        <definition>CTileset* CMap::Tileset</definition>
        <argsstring></argsstring>
        <name>Tileset</name>
        <briefdescription>
<para>fog of war disabled </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="262" column="10" bodyfile="src/include/map.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCMap_1a83a2e213b8373c4ab5537530e8e1da8d" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string CMap::TileModelsFileName</definition>
        <argsstring></argsstring>
        <name>TileModelsFileName</name>
        <briefdescription>
<para>tileset data </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="263" column="13" bodyfile="src/include/map.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCMap_1aaa4b6a3786d6ebed5efc80833dde0e72" prot="public" static="no" mutable="no">
        <type><ref refid="classCGraphic" kindref="compound">CGraphic</ref> *</type>
        <definition>CGraphic* CMap::TileGraphic</definition>
        <argsstring></argsstring>
        <name>TileGraphic</name>
        <briefdescription>
<para>lua filename that loads all tilemodels </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="264" column="10" bodyfile="src/include/map.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCMap_1ac5c7b681e0e33e8163262ae079af860d" prot="public" static="no" mutable="no">
        <type><ref refid="classCMapInfo" kindref="compound">CMapInfo</ref></type>
        <definition>CMapInfo CMap::Info</definition>
        <argsstring></argsstring>
        <name>Info</name>
        <briefdescription>
<para>graphic for fog of war </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="267" column="10" bodyfile="src/include/map.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCMap_1a07e2b895a91d94f932dba7e87c9b6b27" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CMap::getIndex</definition>
        <argsstring>(int x, int y) const</argsstring>
        <name>getIndex</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="155" column="14" bodyfile="src/include/map.h" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1af9dea75afddfddf0e6a5d7e3ee0a91b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CMap::getIndex</definition>
        <argsstring>(const Vec2i &amp;pos) const</argsstring>
        <name>getIndex</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="159" column="14" bodyfile="src/include/map.h" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1ac6f3fb54c36bc544dea73dd601d6d4ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCMapField" kindref="compound">CMapField</ref> *</type>
        <definition>CMapField* CMap::Field</definition>
        <argsstring>(unsigned int index) const</argsstring>
        <name>Field</name>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="164" column="11" bodyfile="src/include/map.h" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1ab5794a633b12e62ad09ac4cfc39d3858" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCMapField" kindref="compound">CMapField</ref> *</type>
        <definition>CMapField* CMap::Field</definition>
        <argsstring>(int x, int y) const</argsstring>
        <name>Field</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Get the MapField at location x,y. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="169" column="11" bodyfile="src/include/map.h" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a01a20a1057fab8c9877b8e910b6594e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCMapField" kindref="compound">CMapField</ref> *</type>
        <definition>CMapField* CMap::Field</definition>
        <argsstring>(const Vec2i &amp;pos) const</argsstring>
        <name>Field</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="173" column="11" bodyfile="src/include/map.h" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classCMap_1a8df2bfe1ee78e68d5b8868edb87ad898" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CMap::FixSelectionArea</definition>
        <argsstring>(Vec2i &amp;minpos, Vec2i &amp;maxpos)</argsstring>
        <name>FixSelectionArea</name>
        <param>
          <type><ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>minpos</declname>
        </param>
        <param>
          <type><ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>maxpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/map.h" line="237" column="6" bodyfile="src/include/map.h" bodystart="237" bodyend="244"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes the world map. </para>
    </briefdescription>
    <detaileddescription>
<para>#include &quot;map.h&quot;</para>
<para>This class contains all information about a Stratagus map. A map is a rectangle of any size.</para>
<para>The map class members:</para>
<para><ref refid="classCMap_1a1a9a4ef4635c5b3d68211c7b4cfd583b" kindref="member">CMap::Fields</ref></para>
<para>An array CMap::Info::Width * CMap::Info::Height of all fields belonging to this map.</para>
<para><ref refid="classCMap_1ab11a698e5612fa36b1a661b20cb71396" kindref="member">CMap::NoFogOfWar</ref></para>
<para>Flag if true, the fog of war is disabled.</para>
<para><ref refid="classCMap_1a221f66ade56ecbc6f96be1c83d6f22a4" kindref="member">CMap::Tileset</ref></para>
<para>Tileset data for the map. See <ref refid="classCTileset" kindref="compound">CTileset</ref>. This contains all information about the tile.</para>
<para><ref refid="classCMap_1a83a2e213b8373c4ab5537530e8e1da8d" kindref="member">CMap::TileModelsFileName</ref></para>
<para>Lua filename that loads all tilemodels</para>
<para><ref refid="classCMap_1aaa4b6a3786d6ebed5efc80833dde0e72" kindref="member">CMap::TileGraphic</ref></para>
<para>Graphic for all the tiles</para>
<para><ref refid="classCMap_1ac0412d56525c93483724e256f58e6968" kindref="member">CMap::FogGraphic</ref></para>
<para>Graphic for fog of war</para>
<para><ref refid="classCMap_1ac5c7b681e0e33e8163262ae079af860d" kindref="member">CMap::Info</ref></para>
<para>Descriptive information of the map. See <ref refid="classCMapInfo" kindref="compound">CMapInfo</ref>. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>CMap</label>
        <link refid="classCMap"/>
        <childnode refid="2" relation="usage">
          <edgelabel>TileModelsFileName</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>Info</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>Fields</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>FogGraphic</edgelabel>
          <edgelabel>TileGraphic</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>Tileset</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>CTileset</label>
        <link refid="classCTileset"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Name</edgelabel>
          <edgelabel>ImageFile</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="9">
        <label>gcn::ImageLoader</label>
        <link refid="classgcn_1_1ImageLoader"/>
      </node>
      <node id="3">
        <label>CMapInfo</label>
        <link refid="classCMapInfo"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Filename</edgelabel>
          <edgelabel>Description</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>gcn::Image</label>
        <link refid="classgcn_1_1Image"/>
        <childnode refid="9" relation="usage">
          <edgelabel>mImageLoader</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>CMapFieldPlayerInfo</label>
        <link refid="classCMapFieldPlayerInfo"/>
      </node>
      <node id="7">
        <label>CGraphic</label>
        <link refid="classCGraphic"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>frameFlip_map</edgelabel>
          <edgelabel>frame_map</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>HashFile</edgelabel>
          <edgelabel>File</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>CUnitCache</label>
        <link refid="classCUnitCache"/>
      </node>
      <node id="4">
        <label>CMapField</label>
        <link refid="classCMapField"/>
        <childnode refid="5" relation="usage">
          <edgelabel>playerInfo</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>UnitCache</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>CGraphic::frame_pos_t</label>
      </node>
    </collaborationgraph>
    <location file="src/include/map.h" line="150" column="1" bodyfile="src/include/map.h" bodystart="149" bodyend="268"/>
    <listofallmembers>
      <member refid="classCMap_1aeaadb7a11d3c4e41e17074a7b1548a52" prot="public" virt="non-virtual"><scope>CMap</scope><name>Clamp</name></member>
      <member refid="classCMap_1a379123dbf069a7b9582763b3ac5ab212" prot="public" virt="non-virtual"><scope>CMap</scope><name>Clean</name></member>
      <member refid="classCMap_1a051af5e424d3dd287bbdaf8c4472e248" prot="public" virt="non-virtual"><scope>CMap</scope><name>CleanFogOfWar</name></member>
      <member refid="classCMap_1a77b4490b96b57e7d00f17967121181ad" prot="public" virt="non-virtual"><scope>CMap</scope><name>ClearRockTile</name></member>
      <member refid="classCMap_1a173b04ebc42dfd052f332fd66e8e4574" prot="public" virt="non-virtual"><scope>CMap</scope><name>ClearWoodTile</name></member>
      <member refid="classCMap_1a7ad71523562247ed2183e57eaed018e8" prot="public" virt="non-virtual"><scope>CMap</scope><name>CMap</name></member>
      <member refid="classCMap_1a8965eb791321a75665b10a2bbe5c72d8" prot="public" virt="non-virtual"><scope>CMap</scope><name>Create</name></member>
      <member refid="classCMap_1ac6f3fb54c36bc544dea73dd601d6d4ef" prot="public" virt="non-virtual"><scope>CMap</scope><name>Field</name></member>
      <member refid="classCMap_1ab5794a633b12e62ad09ac4cfc39d3858" prot="public" virt="non-virtual"><scope>CMap</scope><name>Field</name></member>
      <member refid="classCMap_1a01a20a1057fab8c9877b8e910b6594e5" prot="public" virt="non-virtual"><scope>CMap</scope><name>Field</name></member>
      <member refid="classCMap_1a1a9a4ef4635c5b3d68211c7b4cfd583b" prot="public" virt="non-virtual"><scope>CMap</scope><name>Fields</name></member>
      <member refid="classCMap_1aff9c628d2cd26a38fd9730b82541fd4b" prot="private" virt="non-virtual"><scope>CMap</scope><name>FixNeighbors</name></member>
      <member refid="classCMap_1a8df2bfe1ee78e68d5b8868edb87ad898" prot="public" virt="non-virtual"><scope>CMap</scope><name>FixSelectionArea</name></member>
      <member refid="classCMap_1aa44c7a6b1770399cfb39e82ed2e34f93" prot="private" virt="non-virtual"><scope>CMap</scope><name>FixTile</name></member>
      <member refid="classCMap_1ac0412d56525c93483724e256f58e6968" prot="public" virt="non-virtual"><scope>CMap</scope><name>FogGraphic</name></member>
      <member refid="classCMap_1a07e2b895a91d94f932dba7e87c9b6b27" prot="public" virt="non-virtual"><scope>CMap</scope><name>getIndex</name></member>
      <member refid="classCMap_1af9dea75afddfddf0e6a5d7e3ee0a91b6" prot="public" virt="non-virtual"><scope>CMap</scope><name>getIndex</name></member>
      <member refid="classCMap_1a93b8280da0a722cfd77d2b8ea254d46b" prot="public" virt="non-virtual"><scope>CMap</scope><name>HitWall</name></member>
      <member refid="classCMap_1a1e568377b6cff48de8c8c275906069f0" prot="public" virt="non-virtual"><scope>CMap</scope><name>HumanWallOnMap</name></member>
      <member refid="classCMap_1ac5c7b681e0e33e8163262ae079af860d" prot="public" virt="non-virtual"><scope>CMap</scope><name>Info</name></member>
      <member refid="classCMap_1a604f597cf8d0f5a5428bceba203f8550" prot="public" virt="non-virtual"><scope>CMap</scope><name>Init</name></member>
      <member refid="classCMap_1af78a2d91ae70f251a41933e3a2cfb529" prot="private" virt="non-virtual"><scope>CMap</scope><name>InitFogOfWar</name></member>
      <member refid="classCMap_1afd0c41c24a172f894636a756e93fc5c0" prot="public" virt="non-virtual"><scope>CMap</scope><name>Insert</name></member>
      <member refid="classCMap_1a48ea0ceabb62502794106a33ea63ef18" prot="public" virt="non-virtual"><scope>CMap</scope><name>MapPixelPosToTilePos</name></member>
      <member refid="classCMap_1ac1e8494fa015d7eeac9ae8a8e2044747" prot="public" virt="non-virtual"><scope>CMap</scope><name>MarkSeenTile</name></member>
      <member refid="classCMap_1ab11a698e5612fa36b1a661b20cb71396" prot="public" virt="non-virtual"><scope>CMap</scope><name>NoFogOfWar</name></member>
      <member refid="classCMap_1a55972db733be7a6861b8c061f9a0328e" prot="public" virt="non-virtual"><scope>CMap</scope><name>OrcWallOnMap</name></member>
      <member refid="classCMap_1a28a64fdf269b29b76e7626150162088f" prot="public" virt="non-virtual"><scope>CMap</scope><name>RegenerateForest</name></member>
      <member refid="classCMap_1a3d27aa917eb00700a1804e8d9ed791d5" prot="private" virt="non-virtual"><scope>CMap</scope><name>RegenerateForestTile</name></member>
      <member refid="classCMap_1a9a1d94e0acca77340fa8a93912117baf" prot="public" virt="non-virtual"><scope>CMap</scope><name>Remove</name></member>
      <member refid="classCMap_1a38a94c0d361d0ce865053dc8f366476c" prot="public" virt="non-virtual"><scope>CMap</scope><name>RemoveWall</name></member>
      <member refid="classCMap_1a43f32032ac6e5bbf80fa8061eb13bc3a" prot="public" virt="non-virtual"><scope>CMap</scope><name>Reveal</name></member>
      <member refid="classCMap_1abfb72e03be3c55acfc864cb89e25e146" prot="public" virt="non-virtual"><scope>CMap</scope><name>Save</name></member>
      <member refid="classCMap_1aa6fbf8b498ff3aa85c847756c4246862" prot="public" virt="non-virtual"><scope>CMap</scope><name>SetWall</name></member>
      <member refid="classCMap_1aaa4b6a3786d6ebed5efc80833dde0e72" prot="public" virt="non-virtual"><scope>CMap</scope><name>TileGraphic</name></member>
      <member refid="classCMap_1a83a2e213b8373c4ab5537530e8e1da8d" prot="public" virt="non-virtual"><scope>CMap</scope><name>TileModelsFileName</name></member>
      <member refid="classCMap_1aa45b9488fee078f02d2d9bd2fae9ffee" prot="public" virt="non-virtual"><scope>CMap</scope><name>TilePosToMapPixelPos_Center</name></member>
      <member refid="classCMap_1ae0d19d141295a0181d7503f912d3147c" prot="public" virt="non-virtual"><scope>CMap</scope><name>TilePosToMapPixelPos_TopLeft</name></member>
      <member refid="classCMap_1a221f66ade56ecbc6f96be1c83d6f22a4" prot="public" virt="non-virtual"><scope>CMap</scope><name>Tileset</name></member>
      <member refid="classCMap_1a612d5898c9e9a2ba13b468c354c02273" prot="public" virt="non-virtual"><scope>CMap</scope><name>WallOnMap</name></member>
      <member refid="classCMap_1a9419f5696c22e9569612b79db2872e02" prot="public" virt="non-virtual"><scope>CMap</scope><name>~CMap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
