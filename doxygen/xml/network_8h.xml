<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="network_8h" kind="file" language="C++">
    <compoundname>network.h</compoundname>
    <includes refid="netsockets_8h" local="yes">network/netsockets.h</includes>
    <includedby refid="ai__resource_8cpp" local="yes">src/ai/ai_resource.cpp</includedby>
    <includedby refid="script__ai_8cpp" local="yes">src/ai/script_ai.cpp</includedby>
    <includedby refid="editloop_8cpp" local="yes">src/editor/editloop.cpp</includedby>
    <includedby refid="game_8cpp" local="yes">src/game/game.cpp</includedby>
    <includedby refid="replay_8cpp" local="yes">src/game/replay.cpp</includedby>
    <includedby refid="commands_8cpp" local="yes">src/network/commands.cpp</includedby>
    <includedby refid="mdns_8cpp" local="yes">src/network/mdns.cpp</includedby>
    <includedby refid="net__message_8cpp" local="yes">src/network/net_message.cpp</includedby>
    <includedby refid="netconnect_8cpp" local="yes">src/network/netconnect.cpp</includedby>
    <includedby refid="network_8cpp" local="yes">src/network/network.cpp</includedby>
    <includedby refid="online__service_8cpp" local="yes">src/network/online_service.cpp</includedby>
    <includedby refid="mainloop_8cpp" local="yes">src/stratagus/mainloop.cpp</includedby>
    <includedby refid="player_8cpp" local="yes">src/stratagus/player.cpp</includedby>
    <includedby refid="selection_8cpp" local="yes">src/stratagus/selection.cpp</includedby>
    <includedby refid="stratagus_8cpp" local="yes">src/stratagus/stratagus.cpp</includedby>
    <includedby refid="button__checks_8cpp" local="yes">src/ui/button_checks.cpp</includedby>
    <includedby refid="interface_8cpp" local="yes">src/ui/interface.cpp</includedby>
    <includedby refid="mainscr_8cpp" local="yes">src/ui/mainscr.cpp</includedby>
    <includedby refid="mouse_8cpp" local="yes">src/ui/mouse.cpp</includedby>
    <includedby refid="widgets_8cpp" local="yes">src/ui/widgets.cpp</includedby>
    <includedby refid="unit_8cpp" local="yes">src/unit/unit.cpp</includedby>
    <includedby refid="movie_8cpp" local="yes">src/video/movie.cpp</includedby>
    <includedby refid="sdl_8cpp" local="yes">src/video/sdl.cpp</includedby>
    <includedby refid="tolua_8cpp" local="yes">build/tolua.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>network/netsockets.h</label>
        <link refid="netsockets_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="1">
        <label>src/include/network.h</label>
        <link refid="network_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>src/ai/script_ai.cpp</label>
        <link refid="script__ai_8cpp"/>
      </node>
      <node id="20">
        <label>src/ui/mouse.cpp</label>
        <link refid="mouse_8cpp"/>
      </node>
      <node id="10">
        <label>src/network/netconnect.cpp</label>
        <link refid="netconnect_8cpp"/>
      </node>
      <node id="17">
        <label>src/ui/button_checks.cpp</label>
        <link refid="button__checks_8cpp"/>
      </node>
      <node id="5">
        <label>src/game/game.cpp</label>
        <link refid="game_8cpp"/>
      </node>
      <node id="13">
        <label>src/stratagus/mainloop.cpp</label>
        <link refid="mainloop_8cpp"/>
      </node>
      <node id="19">
        <label>src/ui/mainscr.cpp</label>
        <link refid="mainscr_8cpp"/>
      </node>
      <node id="25">
        <label>build/tolua.cpp</label>
        <link refid="tolua_8cpp"/>
      </node>
      <node id="11">
        <label>src/network/network.cpp</label>
        <link refid="network_8cpp"/>
      </node>
      <node id="12">
        <label>src/network/online_service.cpp</label>
        <link refid="online__service_8cpp"/>
      </node>
      <node id="22">
        <label>src/unit/unit.cpp</label>
        <link refid="unit_8cpp"/>
      </node>
      <node id="9">
        <label>src/network/net_message.cpp</label>
        <link refid="net__message_8cpp"/>
      </node>
      <node id="24">
        <label>src/video/sdl.cpp</label>
        <link refid="sdl_8cpp"/>
      </node>
      <node id="15">
        <label>src/stratagus/selection.cpp</label>
        <link refid="selection_8cpp"/>
      </node>
      <node id="18">
        <label>src/ui/interface.cpp</label>
        <link refid="interface_8cpp"/>
      </node>
      <node id="21">
        <label>src/ui/widgets.cpp</label>
        <link refid="widgets_8cpp"/>
      </node>
      <node id="2">
        <label>src/ai/ai_resource.cpp</label>
        <link refid="ai__resource_8cpp"/>
      </node>
      <node id="14">
        <label>src/stratagus/player.cpp</label>
        <link refid="player_8cpp"/>
      </node>
      <node id="16">
        <label>src/stratagus/stratagus.cpp</label>
        <link refid="stratagus_8cpp"/>
      </node>
      <node id="4">
        <label>src/editor/editloop.cpp</label>
        <link refid="editloop_8cpp"/>
      </node>
      <node id="23">
        <label>src/video/movie.cpp</label>
        <link refid="movie_8cpp"/>
      </node>
      <node id="1">
        <label>src/include/network.h</label>
        <link refid="network_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/network/mdns.cpp</label>
        <link refid="mdns_8cpp"/>
      </node>
      <node id="6">
        <label>src/game/replay.cpp</label>
        <link refid="replay_8cpp"/>
      </node>
      <node id="7">
        <label>src/network/commands.cpp</label>
        <link refid="commands_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classCNetworkParameter" prot="public">CNetworkParameter</innerclass>
      <sectiondef kind="user-defined">
      <header>network.h - The network header file.</header>
      <memberdef kind="variable" id="network_8h_1a4b1d83fcec21423e903cef57d9c638e8" prot="public" static="no" mutable="no">
        <type><ref refid="classCUDPSocket" kindref="compound">CUDPSocket</ref></type>
        <definition>CUDPSocket NetworkFildes</definition>
        <argsstring></argsstring>
        <name>NetworkFildes</name>
        <briefdescription>
<para>Network is in sync. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/network.h" line="69" column="19" bodyfile="src/network/network.cpp" bodystart="296" bodyend="-1" declfile="src/include/network.h" declline="69" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="network_8h_1af78757e14fe4d29ec3fa3ce0433d165a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool NetworkInSync</definition>
        <argsstring></argsstring>
        <name>NetworkInSync</name>
        <briefdescription>
<para>Network file descriptor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/network.h" line="70" column="13" bodyfile="src/network/network.cpp" bodystart="294" bodyend="-1" declfile="src/include/network.h" declline="70" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="network_8h_1aaa13ba2fecddf36549f40540bd9f3a32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsNetworkGame</definition>
        <argsstring>()</argsstring>
        <name>IsNetworkGame</name>
        <briefdescription>
<para>Network is in sync. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/network.h" line="76" column="20" bodyfile="src/include/network.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="network_8h_1ad5d19b49bf082f99e833f1619fa937c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InitNetwork1</definition>
        <argsstring>()</argsstring>
        <name>InitNetwork1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize network port. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/network.h" line="77" column="13" bodyfile="src/network/network.cpp" bodystart="405" bodyend="440" declfile="src/include/network.h" declline="77" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="network_8h_1a9d3ab8c36c690f0ed56f1ec42816255d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void ExitNetwork1</definition>
        <argsstring>()</argsstring>
        <name>ExitNetwork1</name>
        <briefdescription>
<para>Initialise network. </para>
        </briefdescription>
        <detaileddescription>
<para>Cleanup network. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/network.h" line="78" column="13" bodyfile="src/network/network.cpp" bodystart="445" bodyend="463" declfile="src/include/network.h" declline="78" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="network_8h_1a94c96c757a4e53b9e17901105d748380" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkOnStartGame</definition>
        <argsstring>()</argsstring>
        <name>NetworkOnStartGame</name>
        <briefdescription>
<para>Cleanup network (port) </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classGame" kindref="compound">Game</ref> will start now. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/network.h" line="79" column="13" bodyfile="src/network/network.cpp" bodystart="468" bodyend="510" declfile="src/include/network.h" declline="79" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="network_8h_1aed4da7550e85618912b9f43f59994d45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkEvent</definition>
        <argsstring>()</argsstring>
        <name>NetworkEvent</name>
        <briefdescription>
<para>Initialise network data for ingame communication. </para>
        </briefdescription>
        <detaileddescription>
<para>Called if message for the network is ready. (by WaitEventsOneFrame) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/network.h" line="80" column="13" bodyfile="src/network/network.cpp" bodystart="853" bodyend="885" declfile="src/include/network.h" declline="80" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="network_8h_1a0b092622a8be3be8aff995732e35c1f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkSync</definition>
        <argsstring>()</argsstring>
        <name>NetworkSync</name>
        <briefdescription>
<para>Handle network events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/network.h" line="81" column="13" declfile="src/include/network.h" declline="81" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="network_8h_1a691be9bb929e5d0d7c8fc73123d20782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkQuitGame</definition>
        <argsstring>()</argsstring>
        <name>NetworkQuitGame</name>
        <briefdescription>
<para>Hold in sync. </para>
        </briefdescription>
        <detaileddescription>
<para>Quit the game. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/network.h" line="82" column="13" bodyfile="src/network/network.cpp" bodystart="890" bodyend="910" declfile="src/include/network.h" declline="82" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="network_8h_1a9419bda4a9887da6edd137aa86cdd7d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkRecover</definition>
        <argsstring>()</argsstring>
        <name>NetworkRecover</name>
        <briefdescription>
<para>Quit game: warn other users. </para>
        </briefdescription>
        <detaileddescription>
<para>Recover network. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/network.h" line="83" column="13" bodyfile="src/network/network.cpp" bodystart="1166" bodyend="1181" declfile="src/include/network.h" declline="83" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="network_8h_1abff2ea5452021ce87032c53955a54510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkCommands</definition>
        <argsstring>()</argsstring>
        <name>NetworkCommands</name>
        <briefdescription>
<para>Recover network. </para>
        </briefdescription>
        <detaileddescription>
<para>Handle network commands. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/network.h" line="84" column="13" bodyfile="src/network/network.cpp" bodystart="1088" bodyend="1101" declfile="src/include/network.h" declline="84" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="network_8h_1ab09eca7ac063101fbb812982d4c7c203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkSendChatMessage</definition>
        <argsstring>(const std::string &amp;msg)</argsstring>
        <name>NetworkSendChatMessage</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Get all network commands. </para>
        </briefdescription>
        <detaileddescription>
<para>Send chat message. (Message is sent with low priority)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Text message to send. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/network.h" line="85" column="13" bodyfile="src/network/network.cpp" bodystart="634" bodyend="646" declfile="src/include/network.h" declline="85" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="network_8h_1a61656c86317745b47e41d0aee6918907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkSendCommand</definition>
        <argsstring>(int command, const CUnit &amp;unit, int x, int y, const CUnit *dest, const CUnitType *type, int status)</argsstring>
        <name>NetworkSendCommand</name>
        <param>
          <type>int</type>
          <declname>command</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Send network command. </para>
        </briefdescription>
        <detaileddescription>
<para>Send chat message</para>
<para>Prepare send of command message.</para>
<para>Convert arguments into network format and place it into output queue.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>Command (Move,Attack,...). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit that receive the command. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>optional X map position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>optional y map position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>optional destination unit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>optional unit-type argument. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Append command or flush old commands.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Destination and unit-type shares the same network slot. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/network.h" line="87" column="13" bodyfile="src/network/network.cpp" bodystart="531" bodyend="560" declfile="src/include/network.h" declline="87" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="network_8h_1a58727f23bfc41c14922270a3cebcc037" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkSendExtendedCommand</definition>
        <argsstring>(int command, int arg1, int arg2, int arg3, int arg4, int status)</argsstring>
        <name>NetworkSendExtendedCommand</name>
        <param>
          <type>int</type>
          <declname>command</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg3</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg4</declname>
        </param>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Send extended network command. </para>
        </briefdescription>
        <detaileddescription>
<para>Prepare send of extended command message.</para>
<para>Convert arguments into network format and place it into output queue.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>Command (Move,Attack,...). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg1</parametername>
</parameternamelist>
<parameterdescription>
<para>optional argument #1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg2</parametername>
</parameternamelist>
<parameterdescription>
<para>optional argument #2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg3</parametername>
</parameternamelist>
<parameterdescription>
<para>optional argument #3 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg4</parametername>
</parameternamelist>
<parameterdescription>
<para>optional argument #4 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Append command or flush old commands. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/network.h" line="90" column="13" bodyfile="src/network/network.cpp" bodystart="574" bodyend="593" declfile="src/include/network.h" declline="90" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="network_8h_1a2c561d4360ac0338631ec6d3ce6b0087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkSendSelection</definition>
        <argsstring>(CUnit **units, int count)</argsstring>
        <name>NetworkSendSelection</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> **</type>
          <declname>units</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Send Selections to Team. </para>
        </briefdescription>
        <detaileddescription>
<para>Sends my selections to teammates</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>units</parametername>
</parameternamelist>
<parameterdescription>
<para>Units to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of units to send </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/network.h" line="93" column="13" bodyfile="src/network/network.cpp" bodystart="601" bodyend="627" declfile="src/include/network.h" declline="93" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="network_8h_1aeff0dae072f5a24a10bea21dcb2b3a7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkCclRegister</definition>
        <argsstring>()</argsstring>
        <name>NetworkCclRegister</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/network.h" line="95" column="13" bodyfile="src/network/netconnect.cpp" bodystart="1897" bodyend="1901" declfile="src/include/network.h" declline="95" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/include/network.h"/>
  </compounddef>
</doxygen>
