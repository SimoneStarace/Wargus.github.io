<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classIsAnAlliedUnitOf" kind="class" language="C++" prot="public">
    <compoundname>IsAnAlliedUnitOf</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classIsAnAlliedUnitOf_1a8d7246792a8a402bc63c876f439da00d" prot="private" static="no" mutable="no">
        <type>const <ref refid="classCPlayer" kindref="compound">CPlayer</ref> *</type>
        <definition>const CPlayer* IsAnAlliedUnitOf::player</definition>
        <argsstring></argsstring>
        <name>player</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="190" column="15" bodyfile="src/ai/ai_force.cpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classIsAnAlliedUnitOf_1a0ace7d3adfc3a07dbb0ab0fe69be3363" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>IsAnAlliedUnitOf::IsAnAlliedUnitOf</definition>
        <argsstring>(const CPlayer &amp;_player)</argsstring>
        <name>IsAnAlliedUnitOf</name>
        <param>
          <type>const <ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>_player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="183" column="10" bodyfile="src/ai/ai_force.cpp" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classIsAnAlliedUnitOf_1acd36bc05e4ac34c00322171704ff896c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsAnAlliedUnitOf::operator()</definition>
        <argsstring>(const CUnit *unit) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_force.cpp" line="184" column="6" bodyfile="src/ai/ai_force.cpp" bodystart="184" bodyend="188"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/ai/ai_force.cpp" line="181" column="1" bodyfile="src/ai/ai_force.cpp" bodystart="180" bodyend="191"/>
    <listofallmembers>
      <member refid="classIsAnAlliedUnitOf_1a0ace7d3adfc3a07dbb0ab0fe69be3363" prot="public" virt="non-virtual"><scope>IsAnAlliedUnitOf</scope><name>IsAnAlliedUnitOf</name></member>
      <member refid="classIsAnAlliedUnitOf_1acd36bc05e4ac34c00322171704ff896c" prot="public" virt="non-virtual"><scope>IsAnAlliedUnitOf</scope><name>operator()</name></member>
      <member refid="classIsAnAlliedUnitOf_1a8d7246792a8a402bc63c876f439da00d" prot="private" virt="non-virtual"><scope>IsAnAlliedUnitOf</scope><name>player</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
