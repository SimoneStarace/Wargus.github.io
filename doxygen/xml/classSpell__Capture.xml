<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classSpell__Capture" kind="class" language="C++" prot="public">
    <compoundname>Spell_Capture</compoundname>
    <basecompoundref refid="classSpellActionType" prot="public" virt="non-virtual">SpellActionType</basecompoundref>
    <includes refid="spell__capture_8h" local="no">spell_capture.h</includes>
      <sectiondef kind="user-defined">
      <header>spell_capture.cpp - The spell Capture.</header>
      <memberdef kind="function" id="classSpell__Capture_1a0e569b0edc741f6d74d5e3a025fd59f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Spell_Capture::Cast</definition>
        <argsstring>(CUnit &amp;caster, const SpellType &amp;spell, CUnit *&amp;target, const Vec2i &amp;goalPos)</argsstring>
        <name>Cast</name>
        <reimplements refid="classSpellActionType_1add3230bba4c3cde2ba993ec8a7f0edd0">Cast</reimplements>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>caster</declname>
        </param>
        <param>
          <type>const <ref refid="classSpellType" kindref="compound">SpellType</ref> &amp;</type>
          <declname>spell</declname>
        </param>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> *&amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>goalPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cast capture.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>caster</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit that casts the spell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spell</parametername>
</parameternamelist>
<parameterdescription>
<para>Spell-type pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classTarget" kindref="compound">Target</ref> unit that spell is addressed to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>goalPos</parametername>
</parameternamelist>
<parameterdescription>
<para>coord of target spot when/if target does not exist</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>=!0 if spell should be repeated, 0 if not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spell/spell_capture.h" line="45" column="13" bodyfile="src/spell/spell_capture.cpp" bodystart="73" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classSpell__Capture_1aec143c1c2d61883bc20ed98dedec481a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void Spell_Capture::Parse</definition>
        <argsstring>(lua_State *l, int startIndex, int endIndex)</argsstring>
        <name>Parse</name>
        <reimplements refid="classSpellActionType_1aab2b0e8ce3ea565f9729e1d8fdfafcb8">Parse</reimplements>
        <param>
          <type>lua_State *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spell/spell_capture.h" line="47" column="14" bodyfile="src/spell/spell_capture.cpp" bodystart="44" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classSpell__Capture_1ac0a2a7110362f739cfe88e70454ff9ae" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Spell_Capture::SacrificeEnable</definition>
        <argsstring></argsstring>
        <name>SacrificeEnable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spell/spell_capture.h" line="50" column="6" bodyfile="src/include/spell/spell_capture.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSpell__Capture_1a46625da71ed3fd4c42fbe2a0c578c6d0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Spell_Capture::JoinToAIForce</definition>
        <argsstring></argsstring>
        <name>JoinToAIForce</name>
        <briefdescription>
<para>true if the caster dies after casting. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spell/spell_capture.h" line="51" column="6" bodyfile="src/include/spell/spell_capture.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSpell__Capture_1ac85049fcf49ef0a1869e4d49345bd993" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Spell_Capture::Damage</definition>
        <argsstring></argsstring>
        <name>Damage</name>
        <briefdescription>
<para>if true, captured unit is joined into caster&apos;s AI force, if available </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spell/spell_capture.h" line="52" column="5" bodyfile="src/include/spell/spell_capture.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSpell__Capture_1a592fe3dd39c6fb3ff1ceb075bdc60a14" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Spell_Capture::DamagePercent</definition>
        <argsstring></argsstring>
        <name>DamagePercent</name>
        <briefdescription>
<para>damage the spell does if unable to caputre </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spell/spell_capture.h" line="53" column="5" bodyfile="src/include/spell/spell_capture.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classSpell__Capture_1a8500c9b083e855f1f54c0ddf7707938c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Spell_Capture::Spell_Capture</definition>
        <argsstring>()</argsstring>
        <name>Spell_Capture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/spell/spell_capture.h" line="44" column="1" bodyfile="src/include/spell/spell_capture.h" bodystart="44" bodyend="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>SpellActionType</label>
        <link refid="classSpellActionType"/>
      </node>
      <node id="1">
        <label>Spell_Capture</label>
        <link refid="classSpell__Capture"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>SpellActionType</label>
        <link refid="classSpellActionType"/>
      </node>
      <node id="1">
        <label>Spell_Capture</label>
        <link refid="classSpell__Capture"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/include/spell/spell_capture.h" line="42" column="1" bodyfile="src/include/spell/spell_capture.h" bodystart="41" bodyend="55"/>
    <listofallmembers>
      <member refid="classSpell__Capture_1a0e569b0edc741f6d74d5e3a025fd59f3" prot="public" virt="virtual"><scope>Spell_Capture</scope><name>Cast</name></member>
      <member refid="classSpell__Capture_1ac85049fcf49ef0a1869e4d49345bd993" prot="private" virt="non-virtual"><scope>Spell_Capture</scope><name>Damage</name></member>
      <member refid="classSpell__Capture_1a592fe3dd39c6fb3ff1ceb075bdc60a14" prot="private" virt="non-virtual"><scope>Spell_Capture</scope><name>DamagePercent</name></member>
      <member refid="classSpell__Capture_1a46625da71ed3fd4c42fbe2a0c578c6d0" prot="private" virt="non-virtual"><scope>Spell_Capture</scope><name>JoinToAIForce</name></member>
      <member refid="classSpellActionType_1ae95be059035e06fe085b4f0cec747244" prot="public" virt="non-virtual"><scope>Spell_Capture</scope><name>ModifyManaCaster</name></member>
      <member refid="classSpell__Capture_1aec143c1c2d61883bc20ed98dedec481a" prot="public" virt="virtual"><scope>Spell_Capture</scope><name>Parse</name></member>
      <member refid="classSpell__Capture_1ac0a2a7110362f739cfe88e70454ff9ae" prot="private" virt="non-virtual"><scope>Spell_Capture</scope><name>SacrificeEnable</name></member>
      <member refid="classSpell__Capture_1a8500c9b083e855f1f54c0ddf7707938c" prot="public" virt="non-virtual"><scope>Spell_Capture</scope><name>Spell_Capture</name></member>
      <member refid="classSpellActionType_1a2a923f5ac78a86850aaf2a2a2a5ffb32" prot="public" virt="non-virtual"><scope>Spell_Capture</scope><name>SpellActionType</name></member>
      <member refid="classSpellActionType_1ac294064d51b73c8d1d746a8b8c730fca" prot="public" virt="virtual"><scope>Spell_Capture</scope><name>~SpellActionType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
