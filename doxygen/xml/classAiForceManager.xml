<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classAiForceManager" kind="class" language="C++" prot="public">
    <compoundname>AiForceManager</compoundname>
    <includes refid="ai__local_8h" local="no">ai_local.h</includes>
      <sectiondef kind="user-defined">
      <header>ai_force.cpp - AI force functions.</header>
      <memberdef kind="function" id="classAiForceManager_1ab6d66530d369a38be4a6c4c493b0b706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AiForceManager::AiForceManager</definition>
        <argsstring>()</argsstring>
        <name>AiForceManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_local.h" line="205" column="1" bodyfile="src/ai/ai_force.cpp" bodystart="557" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="classAiForceManager_1af0e96b0b7e1a32c987eb46610537b7c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AiForceManager::GetForce</definition>
        <argsstring>(const CUnit &amp;unit)</argsstring>
        <name>GetForce</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find unit in force</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit to search for.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Force number, or -1 if not found </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_local.h" line="230" column="5" bodyfile="src/ai/ai_force.cpp" bodystart="586" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="classAiForceManager_1a404979a3009027e285e38c7e76beff10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void AiForceManager::RemoveDeadUnit</definition>
        <argsstring>()</argsstring>
        <name>RemoveDeadUnit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cleanup units in forces. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_local.h" line="231" column="6" bodyfile="src/ai/ai_force.cpp" bodystart="605" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="classAiForceManager_1ab2b8ba72268af8405b0d7cb079f4c037" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AiForceManager::Assign</definition>
        <argsstring>(CUnit &amp;unit, int force=-1)</argsstring>
        <name>Assign</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>force</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ai assign unit to force.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit to assign to force. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_local.h" line="232" column="6" bodyfile="src/ai/ai_force.cpp" bodystart="617" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="classAiForceManager_1a65b2f5addef388ed07cbc1eabcc66225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void AiForceManager::Update</definition>
        <argsstring>()</argsstring>
        <name>Update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_local.h" line="233" column="6" bodyfile="src/ai/ai_force.cpp" bodystart="1128" bodyend="1202"/>
      </memberdef>
      <memberdef kind="function" id="classAiForceManager_1ad84a2b0f014b757924f0dd3834416b2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int AiForceManager::FindFreeForce</definition>
        <argsstring>(AiForceRole role=AiForceRoleDefault, int begin=0)</argsstring>
        <name>FindFreeForce</name>
        <param>
          <type><ref refid="ai__local_8h_1a38c9dfc51e6822c366d1bd07588b5612" kindref="member">AiForceRole</ref></type>
          <declname>role</declname>
          <defval><ref refid="ai__local_8h_1a38c9dfc51e6822c366d1bd07588b5612a2d3f70766416aaaef07bebb564d846cf" kindref="member">AiForceRoleDefault</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>begin</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_local.h" line="234" column="14" bodyfile="src/ai/ai_force.cpp" bodystart="563" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="classAiForceManager_1a91820543d152df8b0efbf3dce67a5c7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void AiForceManager::CheckUnits</definition>
        <argsstring>(int *counter)</argsstring>
        <name>CheckUnits</name>
        <param>
          <type>int *</type>
          <declname>counter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_local.h" line="235" column="6" bodyfile="src/ai/ai_force.cpp" bodystart="647" bodyend="693"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classAiForceManager_1a97a278be393eb20699f98d8ef7ab103e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classAiForce" kindref="compound">AiForce</ref> &gt;</type>
        <definition>std::vector&lt;AiForce&gt; AiForceManager::forces</definition>
        <argsstring></argsstring>
        <name>forces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_local.h" line="237" column="13" bodyfile="src/ai/ai_local.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAiForceManager_1aa7850d2ad93e3f0499c77560cd567564" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char AiForceManager::script[AI_MAX_FORCES]</definition>
        <argsstring>[AI_MAX_FORCES]</argsstring>
        <name>script</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_local.h" line="238" column="6" bodyfile="src/ai/ai_local.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classAiForceManager_1a904c0d3c4092d48fa9334ef856587475" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t AiForceManager::Size</definition>
        <argsstring>() const</argsstring>
        <name>Size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_local.h" line="207" column="15" bodyfile="src/ai/ai_local.h" bodystart="207" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classAiForceManager_1a26947943be477c24e37ebc6e4ce537eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classAiForce" kindref="compound">AiForce</ref> &amp;</type>
        <definition>const AiForce&amp; AiForceManager::operator[]</definition>
        <argsstring>(unsigned int index) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_local.h" line="209" column="15" bodyfile="src/ai/ai_local.h" bodystart="209" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classAiForceManager_1a4cbfa45c67f70010b0dbfd43f18890d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classAiForce" kindref="compound">AiForce</ref> &amp;</type>
        <definition>AiForce&amp; AiForceManager::operator[]</definition>
        <argsstring>(unsigned int index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_local.h" line="210" column="9" bodyfile="src/ai/ai_local.h" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classAiForceManager_1a45440871ef0bba8d70b83f7c6800d943" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int AiForceManager::getIndex</definition>
        <argsstring>(AiForce *force) const</argsstring>
        <name>getIndex</name>
        <param>
          <type><ref refid="classAiForce" kindref="compound">AiForce</ref> *</type>
          <declname>force</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_local.h" line="212" column="5" bodyfile="src/ai/ai_local.h" bodystart="212" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classAiForceManager_1ac58b9ab2a5525a65c617af368a9cf498" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int AiForceManager::getScriptForce</definition>
        <argsstring>(unsigned int index)</argsstring>
        <name>getScriptForce</name>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ai/ai_local.h" line="222" column="14" bodyfile="src/ai/ai_local.h" bodystart="222" bodyend="228"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>AI force manager.</para>
<para>A Forces container for the force manager to handle </para>
    </detaileddescription>
    <location file="src/ai/ai_local.h" line="203" column="1" bodyfile="src/ai/ai_local.h" bodystart="202" bodyend="239"/>
    <listofallmembers>
      <member refid="classAiForceManager_1ab6d66530d369a38be4a6c4c493b0b706" prot="public" virt="non-virtual"><scope>AiForceManager</scope><name>AiForceManager</name></member>
      <member refid="classAiForceManager_1ab2b8ba72268af8405b0d7cb079f4c037" prot="public" virt="non-virtual"><scope>AiForceManager</scope><name>Assign</name></member>
      <member refid="classAiForceManager_1a91820543d152df8b0efbf3dce67a5c7d" prot="public" virt="non-virtual"><scope>AiForceManager</scope><name>CheckUnits</name></member>
      <member refid="classAiForceManager_1ad84a2b0f014b757924f0dd3834416b2c" prot="public" virt="non-virtual"><scope>AiForceManager</scope><name>FindFreeForce</name></member>
      <member refid="classAiForceManager_1a97a278be393eb20699f98d8ef7ab103e" prot="private" virt="non-virtual"><scope>AiForceManager</scope><name>forces</name></member>
      <member refid="classAiForceManager_1af0e96b0b7e1a32c987eb46610537b7c5" prot="public" virt="non-virtual"><scope>AiForceManager</scope><name>GetForce</name></member>
      <member refid="classAiForceManager_1a45440871ef0bba8d70b83f7c6800d943" prot="public" virt="non-virtual"><scope>AiForceManager</scope><name>getIndex</name></member>
      <member refid="classAiForceManager_1ac58b9ab2a5525a65c617af368a9cf498" prot="public" virt="non-virtual"><scope>AiForceManager</scope><name>getScriptForce</name></member>
      <member refid="classAiForceManager_1a26947943be477c24e37ebc6e4ce537eb" prot="public" virt="non-virtual"><scope>AiForceManager</scope><name>operator[]</name></member>
      <member refid="classAiForceManager_1a4cbfa45c67f70010b0dbfd43f18890d6" prot="public" virt="non-virtual"><scope>AiForceManager</scope><name>operator[]</name></member>
      <member refid="classAiForceManager_1a404979a3009027e285e38c7e76beff10" prot="public" virt="non-virtual"><scope>AiForceManager</scope><name>RemoveDeadUnit</name></member>
      <member refid="classAiForceManager_1aa7850d2ad93e3f0499c77560cd567564" prot="private" virt="non-virtual"><scope>AiForceManager</scope><name>script</name></member>
      <member refid="classAiForceManager_1a904c0d3c4092d48fa9334ef856587475" prot="public" virt="non-virtual"><scope>AiForceManager</scope><name>Size</name></member>
      <member refid="classAiForceManager_1a65b2f5addef388ed07cbc1eabcc66225" prot="public" virt="non-virtual"><scope>AiForceManager</scope><name>Update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
