<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="todo" kind="page">
    <compoundname>todo</compoundname>
    <title>Todo List</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Member <ref refid="net__message_8h_1a262474e81e3ebaeb28e09972bf1fde57" kindref="member">_message_type_</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000024"/>cleanup the message types.  </para>
</listitem>
<varlistentry><term>Member <ref refid="pathfinder_8h_1ad36c4832751fb5e1422f3d175b28da33" kindref="member">_move_return_</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000025"/> Another idea is SINT_MAX as reached, SINT_MIN as unreachable stop others how far to goal.  </para>
</listitem>
<varlistentry><term>Member <ref refid="ai__resource_8cpp_1a04bd2ba722c95986d692fa9abeb7f765" kindref="member">AiAddUnitTypeRequest</ref>  (<ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;type, int count)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000012"/>FIXME: should store the end of list and not search it.  </para>
</listitem>
<varlistentry><term>Member <ref refid="ai__resource_8cpp_1ab754cb45fa786e142f9607859cdc8e84" kindref="member">AiCheckSupply</ref>  (const <ref refid="classPlayerAi" kindref="compound">PlayerAi</ref> &amp;pai, const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;type)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000011"/>The number of food currently trained can be stored global for faster use.  </para>
</listitem>
<varlistentry><term>Member <ref refid="ai__local_8h_1ae707944a0a8aa354fda31c55f83d301b" kindref="member">AiFindBuildingPlace</ref>  (const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;worker, const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;type, const Vec2i &amp;nearPos, Vec2i *resultPos)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000009"/>Better and faster way to find building place of oil platforms Special routines for special buildings.  </para>
</listitem>
<varlistentry><term>Member <ref refid="ai__building_8cpp_1a1bea943247b6307fdf80f49da5bcd76f" kindref="member">AiFindHallPlace</ref>  (const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;worker, const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;type, const Vec2i &amp;startPos, int resource, Vec2i *resultPos)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000007"/>FIXME: This is slow really slow, using two flood fills, is not a perfect solution.  </para>
</listitem>
<varlistentry><term>Member <ref refid="ai__building_8cpp_1a02eca5139674aa248212fc415919f553" kindref="member">AiFindLumberMillPlace</ref>  (const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;worker, const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;type, const Vec2i &amp;startPos, int resource, Vec2i *resultPos)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000008"/>FIXME: This is slow really slow, using two flood fills, is not a perfect solution.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classAiForce_1a0f0c8891fae652a15876415b8ea8c539" kindref="member">AiForce::PlanAttack</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000010"/>Perfect planning. Only works for water transporter! </para>
<para>transporter are more selective now (flag with unittypeland). We must manage it.  </para>
</listitem>
<varlistentry><term>Member <ref refid="cursor_8cpp_1aa33468d8021725c8907b637601cca63f" kindref="member">AllCursors</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000122"/>FIXME: Should this be move to ui part?  </para>
</listitem>
<varlistentry><term>Member <ref refid="actions_8h_1adc6573f35a70ad9a467601109916fbd7" kindref="member">AnimateActionAttack</ref>  (<ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;unit, <ref refid="classCOrder" kindref="compound">COrder</ref> &amp;order)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000002"/>manage correctly unit with no animation attack.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classAutoCastInfo_1adf7eb7269980004b0e516af61dfd06ba" kindref="member">AutoCastInfo::Range</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000027"/>this below is SQUARE!!!  </para>
</listitem>
<varlistentry><term>Member <ref refid="missile_8cpp_1a863bdea9d9b818e08192b4511b4991cc" kindref="member">CalculateDamageStats</ref>  (const <ref refid="classCUnitStats" kindref="compound">CUnitStats</ref> &amp;attacker_stats, const <ref refid="classCUnitStats" kindref="compound">CUnitStats</ref> &amp;goal_stats, int bloodlust)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000048"/>NOTE: different targets (big are hit by some missiles better) </para>
<para>NOTE: lower damage for hidden targets. </para>
<para>NOTE: lower damage for targets on higher ground. </para>
</listitem>
<varlistentry><term>Member <ref refid="build_8cpp_1aea9225fc77956289afb1e33077c2ffae" kindref="member">CanBuildHere</ref>  (const <ref refid="classCUnit" kindref="compound">CUnit</ref> *unit, const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;type, const Vec2i &amp;pos)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000037"/>more docu  </para>
</listitem>
<varlistentry><term>Member <ref refid="build_8cpp_1af875edf8e056efba38987ee37f1ce169" kindref="member">CanBuildOn</ref>  (const Vec2i &amp;pos, int mask)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000038"/>more docu  </para>
</listitem>
<varlistentry><term>Member <ref refid="script__ai_8cpp_1a5ec94ecaf351ccc88baa73b4913d8cff" kindref="member">CclDefineAiHelper</ref>  (lua_State *l)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000014"/>FIXME: the first unit could be a list see ../doc/ccl/ai.html  </para>
</listitem>
<varlistentry><term>Member <ref refid="script__unittype_8cpp_1a1848595c741720636d8a3a67cf5d73bc" kindref="member">CclDefineDecorations</ref>  (lua_State *l)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000094"/>modify Assert with luastate with User Error. </para>
<para>continue to add configuration.  </para>
</listitem>
<varlistentry><term>Member <ref refid="depend_8cpp_1a27756ef1634284b744eda4bac766b219" kindref="member">CclGetDependency</ref>  (lua_State *l)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000092"/>not written. </para>
</listitem>
<varlistentry><term>Member <ref refid="script__unit_8cpp_1acdd39032a1d0913dbd2aadea9eb96af6" kindref="member">CclUnit</ref>  (lua_State *l)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000093"/>Verify that vision table is always correct (transporter) </para>
<para>(PlaceUnit() and host-info).  </para>
</listitem>
<varlistentry><term>Class <ref refid="classCConstruction" kindref="compound">CConstruction</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000021"/> Need ::TilesetByName, ... Only fixed number of constructions supported, more than a single construction frame is not supported, animated constructions aren&apos;t supported.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classCContentTypeCompleteBar_1a848d6962a0daad2983ca55b9683ebc35" kindref="member">CContentTypeCompleteBar::Draw</ref>  (const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;unit, <ref refid="classCFont" kindref="compound">CFont</ref> *defaultfont) const</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000074"/><ref refid="classColor" kindref="compound">Color</ref> and percent value Parametrisation.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classCContentTypeLifeBar_1a2e70dc7cb6b4e1b98f46da53ee011df3" kindref="member">CContentTypeLifeBar::Draw</ref>  (const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;unit, <ref refid="classCFont" kindref="compound">CFont</ref> *defaultfont) const</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000073"/><ref refid="classColor" kindref="compound">Color</ref> and percent value Parametrisation.  </para>
</listitem>
<varlistentry><term>Class <ref refid="classCDecoVar" kindref="compound">CDecoVar</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000039"/>add more stuff in this struct.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classCDecoVarBar_1a103a10b586655934e984e76b6fecce5e" kindref="member">CDecoVarBar::Draw</ref>  (int x, int y, const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;type, const <ref refid="classCVariable" kindref="compound">CVariable</ref> &amp;var) const</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000106"/>fix color configuration.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classCDecoVarFrame_1aad7c3cf228a33b5b3028e1a3af904eeb" kindref="member">CDecoVarFrame::Draw</ref>  (int x, int y, const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;type, const <ref refid="classCVariable" kindref="compound">CVariable</ref> &amp;var) const</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000107"/>fix color configuration.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classCDecoVarSpriteBar_1a482b07ef61dbf61d8f4ba2b62061dc9d" kindref="member">CDecoVarSpriteBar::Draw</ref>  (int x, int y, const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;type, const <ref refid="classCVariable" kindref="compound">CVariable</ref> &amp;var) const</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000109"/>fix sprite configuration.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classCDecoVarStaticSprite_1a0559efea5ef2aefe2672cd6cf2dad124" kindref="member">CDecoVarStaticSprite::Draw</ref>  (int x, int y, const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;type, const <ref refid="classCVariable" kindref="compound">CVariable</ref> &amp;var) const</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000110"/>fix sprite configuration configuration.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classCDecoVarText_1ad656d3182bc2b354bfa2c555e0e0379d" kindref="member">CDecoVarText::Draw</ref>  (int x, int y, const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;type, const <ref refid="classCVariable" kindref="compound">CVariable</ref> &amp;var) const</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000108"/>fix font/color configuration.  </para>
</listitem>
<varlistentry><term>Class <ref refid="classCFile" kindref="compound">CFile</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000022"/>zip archive support  </para>
</listitem>
<varlistentry><term>Member <ref refid="classCGraphic_1affabfa062df16d84fea230c70d6e98b3" kindref="member">CGraphic::MakeShadow</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000123"/>FIXME: 32bpp  </para>
</listitem>
<varlistentry><term>Member <ref refid="intern__video_8h_1ad6e63efb94d7467eeb2d611047caa952" kindref="member">CLIP_RECTANGLE</ref>  (x, y, width, height)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000125"/>FIXME: not easy to debug, but making it a function needs:<itemizedlist>
<listitem><para>pointers to be able to alter given arguments</para>
</listitem><listitem><para>special return value to denote &apos;outside&apos; clipping region (which is now handled by a simple return in caller function) </para>
</listitem></itemizedlist>
</para>
</listitem>
<varlistentry><term>Member <ref refid="intern__video_8h_1ad7192d6be629bfa7fbfa4ecc65dcb074" kindref="member">CLIP_RECTANGLE_OFS</ref>  (x, y, width, height, ofsx, ofsy, endx)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000126"/>FIXME: not easy to debug, but making it a function needs:<itemizedlist>
<listitem><para>pointers to be able to alter given arguments</para>
</listitem><listitem><para>special return value to denote &apos;outside&apos; clipping region (which is now handled by a simple return in caller function) </para>
</listitem></itemizedlist>
</para>
</listitem>
<varlistentry><term>Member <ref refid="classCMap_1aa6fbf8b498ff3aa85c847756c4246862" kindref="member">CMap::SetWall</ref>  (const Vec2i &amp;pos, bool humanwall)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000044"/>FIXME: support for more races.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classCMinimap_1ac3576d98d582abc054b75f16ed194bfa" kindref="member">CMinimap::Create</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000045"/>Scaling and scrolling the minmap is currently not supported.  </para>
</listitem>
<varlistentry><term>Class <ref refid="classConditionInfo" kindref="compound">ConditionInfo</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000026"/>Move more parameters into this structure.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classCOrder__Attack_1acf794a34fd14ea8485a04f9ded962a76" kindref="member">COrder_Attack::Execute</ref>  (<ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;unit)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000004"/>Lets do some tries to reach the target. If target place is not reachable, choose better goal to reduce the pathfinder load. </para>
</listitem>
<varlistentry><term>Member <ref refid="classCPlayer_1a26fabac7275ad8637dba876f3a46965e" kindref="member">CPlayer::Notify</ref>  (int type, const Vec2i &amp;pos, const char *fmt,...) const PRINTF_VAARG_ATTRIBUTE(4</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000061"/>FIXME: We must also notfiy allied players.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classCPlayer_1a0b2998d08b92d1eb5c3a36abb448b24d" kindref="member">CPlayer::Notify</ref>  (const char *fmt,...) const PRINTF_VAARG_ATTRIBUTE(2</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000062"/>FIXME: We must also notfiy allied players.  </para>
</listitem>
<varlistentry><term>Member <ref refid="settings_8h_1a02ca7c82426f8881e4c3ee0e596209dd" kindref="member">CreateGame</ref>  (const std::string &amp;filename, <ref refid="classCMap" kindref="compound">CMap</ref> *map)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000018"/>FIXME: use in this function InitModules / LoadModules!!!  </para>
</listitem>
<varlistentry><term>Member <ref refid="classCStatusLine_1a08837d41cb31a595efe26c01f462d94b" kindref="member">CStatusLine::DrawCosts</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000085"/>FIXME : make DrawCosts more configurable. </para>
<para>FIXME : &apos;time&apos; resource should be shown too. </para>
</listitem>
<varlistentry><term>Member <ref refid="classCTileset_1a8927b8595fe4749bca06b50e90bc8a46" kindref="member">CTileset::getTileNumber</ref>  (int basic, bool random, bool filler) const</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000047"/>FIXME: Solid tiles are here still hardcoded.  </para>
</listitem>
<varlistentry><term>Class <ref refid="classCUnit" kindref="compound">CUnit</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000095"/>docu. If you need more information, please send me an email or write it self.</para>
<para><anchor id="todo_1_todo000096"/>continue documentation</para>
<para><anchor id="todo_1_todo000097"/>continue documentation</para>
<para><anchor id="todo_1_todo000098"/>continue documentation </para>
</listitem>
<varlistentry><term>Member <ref refid="classCUnit_1ac1ee548874cf88e3a810687639b418b9" kindref="member">CUnit::IsUnusable</ref>  (bool ignore_built_state=false) const</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000105"/>look if correct used (UnitActionBuilt is no problem if attacked)?  </para>
</listitem>
<varlistentry><term>Member <ref refid="classCUnit_1a6058e576a93fe712baf144149e2a3894" kindref="member">CUnit::IsVisibleOnMinimap</ref>  () const</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000099"/>radar support </para>
</listitem>
<varlistentry><term>Class <ref refid="classCUnitType" kindref="compound">CUnitType</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000040"/>n0body: AutoBuildRate not implemented. </para>
<para><anchor id="todo_1_todo000113"/>continue this documentation</para>
<para><anchor id="todo_1_todo000114"/>not used</para>
<para><anchor id="todo_1_todo000115"/>The above should be more configurable. If units have a repair range, they can repair, and this is the distance.</para>
<para><anchor id="todo_1_todo000116"/>temporary solution</para>
<para><anchor id="todo_1_todo000117"/>This stats should? be moved into the player struct</para>
<para><anchor id="todo_1_todo000118"/>Should us a general name f.e. Slot here? </para>
</listitem>
<varlistentry><term>Member <ref refid="classCUnitType_1a4de9f1fe59e6b62de7168ad5d0d781eb" kindref="member">CUnitType::Stats</ref>  [PlayerMax]</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000042"/>This stats should? be moved into the player struct  </para>
</listitem>
<varlistentry><term>Member <ref refid="classCUserInterface_1a367e3dce2ea5de8955643e1d532aff9d" kindref="member">CUserInterface::VictoryBackgroundG</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000031"/>could use different sounds/speech for the errors Is in gamesounds? <ref refid="classSoundConfig" kindref="compound">SoundConfig</ref> PlacementError; /// played on placements errors <ref refid="classSoundConfig" kindref="compound">SoundConfig</ref> PlacementSuccess; /// played on placements success <ref refid="classSoundConfig" kindref="compound">SoundConfig</ref> Click; /// click noice used often  </para>
</listitem>
<varlistentry><term>Member <ref refid="mainloop_8cpp_1a8b2a1025265319998be09ed12b2ff267" kindref="member">DoScrollArea</ref>  (int state, bool fast, bool isKeyboard)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000059"/>Support dynamic acceleration of scroll speed. </para>
<para>If the scroll key is longer pressed the area is scrolled faster.  </para>
</listitem>
<varlistentry><term>Member <ref refid="unit__draw_8cpp_1a508dfaa23f4acb1fc3fabb8cd5b70b3f" kindref="member">DrawInformations</ref>  (const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;unit, const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;type, const PixelPos &amp;screenPos)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000112"/>FIXME: The different styles should become a function call.  </para>
</listitem>
<varlistentry><term>Member <ref refid="editloop_8cpp_1ad3ff66f3f9bcda2952ef5af0e5a6e172" kindref="member">DrawMapCursor</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000016"/>support for bigger cursors (2x2, 3x3 ...)  </para>
</listitem>
<varlistentry><term>Member <ref refid="mainscr_8cpp_1ab3ce35232d456098d6f5c58260910419" kindref="member">DrawResources</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000079"/>FIXME : make DrawResources more configurable (format, font).  </para>
</listitem>
<varlistentry><term>Member <ref refid="unit__draw_8cpp_1a13fb43f5e7ea13632fc4032b8d6949cd" kindref="member">DrawShadow</ref>  (const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;type, int frame, const PixelPos &amp;screenPos)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000111"/>FIXME: combine new shadow code with old shadow code.  </para>
</listitem>
<varlistentry><term>Member <ref refid="mainscr_8cpp_1a321308ac4607c034a6fce5fe4c21755e" kindref="member">DrawTimer</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000082"/>FIXME : make DrawTimer more configurable (Pos, format).  </para>
</listitem>
<varlistentry><term>Member <ref refid="unittype_8cpp_1ac7474b6a7c41bcbc2405398302fa70c1" kindref="member">DrawUnitType</ref>  (const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;type, <ref refid="classCPlayerColorGraphic" kindref="compound">CPlayerColorGraphic</ref> *sprite, int player, int frame, const PixelPos &amp;screenPos)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000121"/>Do screen position caculation in high level. Better way to handle in x mirrored sprites.  </para>
</listitem>
<varlistentry><term>Member <ref refid="unit_8cpp_1afa6b89bdbccec3d872231bc18105f1ae" kindref="member">DropOutNearest</ref>  (<ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;unit, const Vec2i &amp;goalPos, const <ref refid="classCUnit" kindref="compound">CUnit</ref> *container)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000036"/>more docu  </para>
</listitem>
<varlistentry><term>Member <ref refid="unit_8cpp_1a27194e108786a361c739344f403f85ea" kindref="member">DropOutOnSide</ref>  (<ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;unit, int heading, const <ref refid="classCUnit" kindref="compound">CUnit</ref> *container)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000035"/>more docu  </para>
</listitem>
<varlistentry><term>Member <ref refid="editloop_8cpp_1ae930841ce07566e2440800114d35cd57" kindref="member">EditorActionPlaceUnit</ref>  (const Vec2i &amp;pos, const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;type, <ref refid="classCPlayer" kindref="compound">CPlayer</ref> *player)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000015"/>FIXME: Check if the player has already a start-point.  </para>
</listitem>
<varlistentry><term>Member <ref refid="editor_8h_1a421638b788e3fd0129f0758f22b744c6" kindref="member">EditorSaveMap</ref>  (const std::string &amp;file)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000017"/>FIXME: Check if the map is valid, contains no failures. At least two players, one human slot, every player a startpoint ...  </para>
</listitem>
<varlistentry><term>Member <ref refid="metaserver_2main_8cpp_1af72ffbf669d1fe7972c09f05d66f3e06" kindref="member">EnableDebugPrint</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000127"/>Needs code cleanup. </para>
<para>Needs compatibility checks. </para>
<para>Needs error message unification.  </para>
</listitem>
<varlistentry><term>Member <ref refid="script_8cpp_1adf8b30ef271061aa2cdc79270eba5dbe" kindref="member">EvalNumber</ref>  (const <ref refid="structNumberDesc" kindref="compound">NumberDesc</ref> *number)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000065"/>Manage better the error (div/0, unit==NULL, ...).  </para>
</listitem>
<varlistentry><term>Member <ref refid="script_8cpp_1adf8b30ef271061aa2cdc79270eba5dbe" kindref="member">EvalNumber</ref>  (const <ref refid="structNumberDesc" kindref="compound">NumberDesc</ref> *number)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000065"/>Manage better the error (div/0, unit==NULL, ...).  </para>
</listitem>
<varlistentry><term>Member <ref refid="script_8cpp_1ac567ad9aef1710f33543f55b5bde340b" kindref="member">EvalString</ref>  (const <ref refid="structStringDesc" kindref="compound">StringDesc</ref> *s)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000066"/>Manage better the error.  </para>
</listitem>
<varlistentry><term>Member <ref refid="action__attack_8cpp_1a87b13b57cf0c9ea3bfbe6fdee1a9c627" kindref="member">FIRST_ENTRY</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000001"/>FIXME: I should rewrite this action, if only the new orders are supported.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classgcn_1_1ListBox_1a6c12d3659318a214896f56ab704a78b6" kindref="member">gcn::ListBox::draw</ref>  (<ref refid="classgcn_1_1Graphics" kindref="compound">Graphics</ref> *graphics)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000020"/>Check cliprects so we do not have to iterate over elements in the list model  </para>
</listitem>
<varlistentry><term>Member <ref refid="botpanel_8cpp_1a6774b38639864586f09f442f6d32894f" kindref="member">GetButtonStatus</ref>  (const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;button, int UnderCursor)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000069"/>FIXME : add IconDisabled when needed. </para>
<para>FIXME : Should show the rally action for training unit ? (NewOrder)  </para>
</listitem>
<varlistentry><term>Member <ref refid="interface_8cpp_1ae384b43578507e888b327513459501ff" kindref="member">HandleButtonUp</ref>  (unsigned button)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000078"/>FIXME: the mouse handling should be complete rewritten </para>
<para>FIXME: this is needed for double click, long click,... </para>
</listitem>
<varlistentry><term>Member <ref refid="mouse_8cpp_1abcfc2a52a65db35e1e16c0139e534692" kindref="member">HandleMouseExit</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000083"/>FIXME: make it so that the game is partially &apos;paused&apos;. <ref refid="classGame" kindref="compound">Game</ref> should run (for network play), but not react on or show interactive events.  </para>
</listitem>
<varlistentry><term>Member <ref refid="selection_8cpp_1aca2696bcfcaf1ad9810a527b2ac70c7c" kindref="member">HandleSuicideClick</ref>  (<ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;unit)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000067"/>remove static (bug with save/load...)  </para>
</listitem>
<varlistentry><term>Member <ref refid="classImageListBox_1aec5339fe071cb60f47c05de77eab64a5" kindref="member">ImageListBox::draw</ref>  (<ref refid="classgcn_1_1Graphics" kindref="compound">gcn::Graphics</ref> *graphics)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000086"/>Check cliprects so we do not have to iterate over elements in the list model  </para>
</listitem>
<varlistentry><term>Member <ref refid="classImageListBoxWidget_1adcb222a778cfaaffddac424c36c5e784" kindref="member">ImageListBoxWidget::ImageListBoxWidget</ref>  (unsigned int width, unsigned int height)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000088"/>Size should be parametrable, maybe remove default constructor?  </para>
</listitem>
<varlistentry><term>Member <ref refid="unit_8cpp_1a8f7d1c42a1b4d50a436b90092be21b61" kindref="member">InAttackRange</ref>  (const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;unit, const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;target)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000101"/>: Do we have to check range from unit.Container pos if unit is bunkered or in transport? </para>
</listitem>
<varlistentry><term>Member <ref refid="unit_8cpp_1afb9b6b0530d534cac0a1663808e42f58" kindref="member">InAttackRange</ref>  (const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;unit, const Vec2i &amp;tilePos)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000102"/>: Do we have to check range from unit.Container pos if unit is bunkered or in transport? </para>
</listitem>
<varlistentry><term>Member <ref refid="script__ai_8cpp_1a60764903815456619be1fb6155c90821" kindref="member">InitAiHelper</ref>  (<ref refid="classAiHelper" kindref="compound">AiHelper</ref> &amp;aiHelper)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000013"/>missing Equiv initialisation.  </para>
</listitem>
<varlistentry><term>Member <ref refid="settings_8h_1ab1dd2992e52fb3be2d7d5ecea7c68ee3" kindref="member">InitSettings</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000019"/>FIXME: this should not be executed for restart levels!  </para>
</listitem>
<varlistentry><term>Member <ref refid="unit_8cpp_1ace8c59036621b4de5e70f53900325ba9" kindref="member">InReactRange</ref>  (const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;unit, const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;target)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000100"/>: Do we have to check range from unit.Container pos if unit is bunkered or in transport? </para>
</listitem>
<varlistentry><term>File <ref refid="intern__video_8h" kindref="compound">intern_video.h</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000124"/>FIXME: Currently some interfaces listed in <ref refid="video_8h" kindref="compound">video.h</ref> should be moved in here, this includes possible &quot;extern&quot; declarations in source-files themselves. The doxygen docs looks not good, but now contains all info.  </para>
</listitem>
<varlistentry><term>Member <ref refid="botpanel_8cpp_1aa29694adb09753b0364f1308e175430e" kindref="member">IsButtonAllowed</ref>  (const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;unit, const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;buttonaction)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000070"/>FIXME: better check. (dependency, resource, ...) </para>
<para>FIXME: make difference with impossible and not yet researched.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classListBoxWidget_1a2477aaaedbbdba1a27620bf5bcb6ca08" kindref="member">ListBoxWidget::ListBoxWidget</ref>  (unsigned int width, unsigned int height)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000087"/>Size should be parametrable, maybe remove default constructor?  </para>
</listitem>
<varlistentry><term>Member <ref refid="sound__server_8cpp_1a95c59fa233441b7521063f04769989c3" kindref="member">LoadSample</ref>  (const std::string &amp;name)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000056"/>Add streaming, caching support.  </para>
</listitem>
<varlistentry><term>page <ref refid="index" kindref="compound">Main Page</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000068"/>adpcm file format support for sound effects </para>
<para>better separation of low and high level, assembler mixing support. </para>
<para>Streaming support of ogg/mp3 files. </para>
</listitem>
<varlistentry><term>Member <ref refid="unitsound_8cpp_1a166e616c99435bef15c6e17c2a21013c" kindref="member">MapUnitSounds</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000057"/>the sound ranges should be configurable by user with CCL.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classMessagesDisplay_1a345aa4eb212d727ab2a990fd762fe257" kindref="member">MessagesDisplay::DrawMessages</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000081"/>FIXME: make message font configurable.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classMessagesDisplay_1ab03fb99be82814394d89130c5b0339f6" kindref="member">MessagesDisplay::UpdateMessages</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000080"/>FIXME: make scroll speed configurable.  </para>
</listitem>
<varlistentry><term>Class <ref refid="classMissileConfig" kindref="compound">MissileConfig</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000023"/>Move this to <ref refid="missile_8h" kindref="compound">missile.h</ref>?  </para>
</listitem>
<varlistentry><term>Member <ref refid="classMissileDeathCoil_1a1e6af5204290b6b0ab4cd6eb55121a54" kindref="member">MissileDeathCoil::Action</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000050"/>do it configurable.  </para>
</listitem>
<varlistentry><term>Member <ref refid="missile_8cpp_1afdd816fad50613b199a3f309b1d203a6" kindref="member">MissileHitsWall</ref>  (const <ref refid="classMissile" kindref="compound">Missile</ref> &amp;missile, const Vec2i &amp;tilePos, int splash)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000049"/>FIXME: Support for more races.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classMissileLandMine_1a3b5dda5f881e1c689866edf7a4c14c3b" kindref="member">MissileLandMine::Action</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000051"/>start-finish-start cyclic animation.(anim scripts!) </para>
<para>missile should disappear for a while.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classMissileWhirlwind_1ada9516beec8482741a9f922b4cc58db9" kindref="member">MissileWhirlwind::Action</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000053"/>do it more configurable.  </para>
</listitem>
<varlistentry><term>Member <ref refid="unit_8cpp_1a8881082ba9a2aee18697d545a9c418bf" kindref="member">NearestOfUnit</ref>  (const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;unit, const Vec2i &amp;pos, Vec2i *dpos)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000034"/>more docu  </para>
</listitem>
<varlistentry><term>Member <ref refid="network_8cpp_1acf4273caea22ad9d2498f7c35dd458f2" kindref="member">NetworkResendCommands</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000054"/> We need only send to the clients, that have not delivered the packet.  </para>
</listitem>
<varlistentry><term>Member <ref refid="missile__parabolic_8cpp_1a0566aac84d9fc6416dceb60bca61ed96" kindref="member">ParabolicMissile</ref>  (<ref refid="classMissile" kindref="compound">Missile</ref> &amp;missile)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000052"/>Find good values for ZprojToX and Y  </para>
</listitem>
<varlistentry><term>Member <ref refid="sound_8cpp_1a3a90b0e0c5710e1faebcf3993ac06ecd" kindref="member">RegisterSound</ref>  (const std::vector&lt; std::string &gt; &amp;files)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000055"/>FIXME: Must handle the errors better.  </para>
</listitem>
<varlistentry><term>Class <ref refid="classResourceInfo" kindref="compound">ResourceInfo</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000119"/>more configurable. </para>
</listitem>
<varlistentry><term>Member <ref refid="spells_8cpp_1a277d0af399493a733628e26b65f25a03" kindref="member">SelectTargetUnitsOfAutoCast</ref>  (<ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;caster, const <ref refid="classSpellType" kindref="compound">SpellType</ref> &amp;spell)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000058"/>FIXME: should be global (for AI) ??? </para>
<para>FIXME: write for position target.  </para>
</listitem>
<varlistentry><term>Member <ref refid="mouse_8cpp_1a9e011884f3278ed0b0021f2ec4ba302f" kindref="member">SendMove</ref>  (const Vec2i &amp;tilePos)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000084"/>To reduce the CPU load for pathfinder, we should check if the destination is reachable and handle nice group movements.  </para>
</listitem>
<varlistentry><term>Member <ref refid="player_8cpp_1a7bedf168928de2c29c4c256e2478f5c1" kindref="member">SetPlayersPalette</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000060"/>FIXME: could be called before PixelsXX is setup.  </para>
</listitem>
<varlistentry><term>Member <ref refid="unit__draw_8cpp_1ac24b422f481aaaa98efdca92597ce06a" kindref="member">ShowOrdersCount</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000032"/>could be moved into the user interface ?  </para>
</listitem>
<varlistentry><term>Member <ref refid="classStatBoxWidget_1a19752ab5dcfecaf687605d952ff672d6" kindref="member">StatBoxWidget::draw</ref>  (<ref refid="classgcn_1_1Graphics" kindref="compound">gcn::Graphics</ref> *graphics)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000091"/>caption seem to be placed upper than the middle. </para>
<para>set direction (hor./vert.) and growing direction(up/down, left/rigth).  </para>
</listitem>
<varlistentry><term>Member <ref refid="script_8cpp_1a7e9261dd1497d2454046ddd7c6c3127a" kindref="member">Str2TypeRef</ref>  (lua_State *l, const char *s)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000064"/>better check for error (restrict param).  </para>
</listitem>
<varlistentry><term>Member <ref refid="script_8cpp_1a464fba8217de75a5d0c2834baaf7f2cb" kindref="member">Str2UnitRef</ref>  (lua_State *l, const char *s)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000063"/>better check for error (restrict param).  </para>
</listitem>
<varlistentry><term>Class <ref refid="structTileInfo" kindref="compound">TileInfo</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000046"/>This is the terrain the tile is mixed with. This is 0 for a solid tile, we should make it equal to BaseTerrain  </para>
</listitem>
<varlistentry><term>Member <ref refid="tileset_8h_1ac9e486ec80ccfdb28a4f4837d419c9f1" kindref="member">TileType</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000028"/>I think this can be removed, we can use the flags? I&apos;m not sure, if we have seen and real time to considere.  </para>
</listitem>
<varlistentry><term>Member <ref refid="interface_8cpp_1af8668292339697d853ede27e8bd70cef" kindref="member">UiCenterOnGroup</ref>  (unsigned group, GroupSelectionMode mode=SELECTABLE_BY_RECTANGLE_ONLY)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000075"/>Improve this function, try to show all selected units or the most possible units.  </para>
</listitem>
<varlistentry><term>Member <ref refid="interface_8cpp_1aca63035ffc070a530fa7c990acbb2e03" kindref="member">UiCenterOnSelected</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000077"/>Improve this function, try to show all selected units or the most possible units.  </para>
</listitem>
<varlistentry><term>Member <ref refid="interface_8cpp_1a08238939e042df34416af000acfcb58c" kindref="member">UiToggleBigMap</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000076"/>FIXME: We should try to keep the same view, if possible  </para>
</listitem>
<varlistentry><term>Member <ref refid="action__still_8cpp_1a23e793190b1868938f5392674d75e1bc" kindref="member">UnitToRepairInRange</ref>  (const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;unit, int range)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000006"/>FIXME: find the best unit (most damaged, ...).  </para>
</listitem>
<varlistentry><term>Member <ref refid="unittype_8cpp_1aba928b4ccc76fb30c2bfb9e4623a08a8" kindref="member">UnitTypeHumanWall</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000041"/>this hardcoded unit-types must be removed!! </para>
<para><anchor id="todo_1_todo000120"/>find a way to make it configurable!  </para>
</listitem>
<varlistentry><term>Member <ref refid="botpanel_8cpp_1afaf1e8ab8576deadd99588301fba39de" kindref="member">UpdateButtonPanelMultipleUnits</ref>  (std::vector&lt; ButtonAction &gt; *buttonActions)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000071"/>FIXME : make UpdateButtonPanelMultipleUnits more configurable. </para>
<para>show all possible buttons or just same button...  </para>
</listitem>
<varlistentry><term>Member <ref refid="botpanel_8cpp_1ac213b708a3f38597bae016085546470b" kindref="member">UpdateButtonPanelSingleUnit</ref>  (const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;unit, std::vector&lt; ButtonAction &gt; *buttonActions)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000072"/>FIXME : Remove Hack for cancel button.  </para>
</listitem>
<varlistentry><term>Member <ref refid="unit_8cpp_1a128b06151a7e6143d22ee1fec2731af5" kindref="member">UpdateForNewUnit</ref>  (const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;unit, int upgrade)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000033"/>more docu  </para>
</listitem>
<varlistentry><term>Member <ref refid="unit_8cpp_1ade6304ca2edeaea1290bdd322356ee68" kindref="member">ViewPointDistance</ref>  (const Vec2i &amp;pos)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000103"/>FIXME: is it the correct place to put this function in?  </para>
</listitem>
<varlistentry><term>Member <ref refid="unit_8cpp_1a497a5b36257c7b0b53a8fffdbb44326e" kindref="member">ViewPointDistanceToUnit</ref>  (const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;dest)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000104"/>FIXME: is it the correct place to put this function in?  </para>
</listitem>
<varlistentry><term>Member <ref refid="ui_8h_1ad20498d61b34eb50b13136b89b035605" kindref="member">ViewportModeType</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000030"/>this should be later user configurable </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
