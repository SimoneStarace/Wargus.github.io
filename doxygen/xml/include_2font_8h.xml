<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="include_2font_8h" kind="file" language="C++">
    <compoundname>font.h</compoundname>
    <includes local="no">string</includes>
    <includes refid="include_2color_8h" local="yes">color.h</includes>
    <includes refid="guichan_2include_2guichan_2font_8h" local="yes">guichan/font.h</includes>
    <includedby refid="editloop_8cpp" local="yes">src/editor/editloop.cpp</includedby>
    <includedby refid="game_8cpp" local="yes">src/game/game.cpp</includedby>
    <includedby refid="loadgame_8cpp" local="yes">src/game/loadgame.cpp</includedby>
    <includedby refid="widgets_8h" local="yes">src/include/widgets.h</includedby>
    <includedby refid="map__draw_8cpp" local="yes">src/map/map_draw.cpp</includedby>
    <includedby refid="missile_8cpp" local="yes">src/missile/missile.cpp</includedby>
    <includedby refid="online__service_8cpp" local="yes">src/network/online_service.cpp</includedby>
    <includedby refid="script_8cpp" local="yes">src/stratagus/script.cpp</includedby>
    <includedby refid="title_8cpp" local="yes">src/stratagus/title.cpp</includedby>
    <includedby refid="botpanel_8cpp" local="yes">src/ui/botpanel.cpp</includedby>
    <includedby refid="contenttype_8cpp" local="yes">src/ui/contenttype.cpp</includedby>
    <includedby refid="interface_8cpp" local="yes">src/ui/interface.cpp</includedby>
    <includedby refid="mainscr_8cpp" local="yes">src/ui/mainscr.cpp</includedby>
    <includedby refid="mouse_8cpp" local="yes">src/ui/mouse.cpp</includedby>
    <includedby refid="popup_8cpp" local="yes">src/ui/popup.cpp</includedby>
    <includedby refid="script__ui_8cpp" local="yes">src/ui/script_ui.cpp</includedby>
    <includedby refid="statusline_8cpp" local="yes">src/ui/statusline.cpp</includedby>
    <includedby refid="ui_8cpp" local="yes">src/ui/ui.cpp</includedby>
    <includedby refid="uibuttons__proc_8cpp" local="yes">src/ui/uibuttons_proc.cpp</includedby>
    <includedby refid="uitimer_8cpp" local="yes">src/ui/uitimer.cpp</includedby>
    <includedby refid="widgets_8cpp" local="yes">src/ui/widgets.cpp</includedby>
    <includedby refid="script__unittype_8cpp" local="yes">src/unit/script_unittype.cpp</includedby>
    <includedby refid="unit__draw_8cpp" local="yes">src/unit/unit_draw.cpp</includedby>
    <includedby refid="font_8cpp" local="yes">src/video/font.cpp</includedby>
    <includedby refid="sdl_8cpp" local="yes">src/video/sdl.cpp</includedby>
    <includedby refid="video_8cpp" local="yes">src/video/video.cpp</includedby>
    <includedby refid="tolua_8cpp" local="yes">build/tolua.cpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>guichan/font.h</label>
        <link refid="guichan_2include_2guichan_2font_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="11">
        <label>guichan/platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="1">
        <label>src/include/font.h</label>
        <link refid="include_2font_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>guichan/rectangle.h</label>
        <link refid="rectangle_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>guichan/imageloader.h</label>
        <link refid="imageloader_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>guichan/cliprectangle.h</label>
        <link refid="cliprectangle_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>guichan/graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>guichan/color.h</label>
        <link refid="guichan_2include_2guichan_2color_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stack</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="3">
        <label>color.h</label>
        <link refid="include_2color_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>guichan/image.h</label>
        <link refid="image_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10">
        <label>src/ui/mouse.cpp</label>
        <link refid="mouse_8cpp"/>
      </node>
      <node id="15">
        <label>src/missile/missile.cpp</label>
        <link refid="missile_8cpp"/>
      </node>
      <node id="18">
        <label>src/ui/botpanel.cpp</label>
        <link refid="botpanel_8cpp"/>
      </node>
      <node id="22">
        <label>src/ui/script_ui.cpp</label>
        <link refid="script__ui_8cpp"/>
      </node>
      <node id="28">
        <label>src/unit/unit_draw.cpp</label>
        <link refid="unit__draw_8cpp"/>
      </node>
      <node id="3">
        <label>src/game/game.cpp</label>
        <link refid="game_8cpp"/>
      </node>
      <node id="20">
        <label>src/ui/mainscr.cpp</label>
        <link refid="mainscr_8cpp"/>
      </node>
      <node id="13">
        <label>build/tolua.cpp</label>
        <link refid="tolua_8cpp"/>
      </node>
      <node id="25">
        <label>src/ui/uibuttons_proc.cpp</label>
        <link refid="uibuttons__proc_8cpp"/>
      </node>
      <node id="27">
        <label>src/unit/script_unittype.cpp</label>
        <link refid="script__unittype_8cpp"/>
      </node>
      <node id="19">
        <label>src/ui/contenttype.cpp</label>
        <link refid="contenttype_8cpp"/>
      </node>
      <node id="6">
        <label>src/network/online_service.cpp</label>
        <link refid="online__service_8cpp"/>
      </node>
      <node id="7">
        <label>src/sound/sound.cpp</label>
        <link refid="sound_8cpp"/>
      </node>
      <node id="1">
        <label>src/include/font.h</label>
        <link refid="include_2font_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>src/video/font.cpp</label>
        <link refid="font_8cpp"/>
      </node>
      <node id="12">
        <label>src/video/sdl.cpp</label>
        <link refid="sdl_8cpp"/>
      </node>
      <node id="24">
        <label>src/ui/ui.cpp</label>
        <link refid="ui_8cpp"/>
      </node>
      <node id="4">
        <label>src/game/loadgame.cpp</label>
        <link refid="loadgame_8cpp"/>
      </node>
      <node id="30">
        <label>src/video/video.cpp</label>
        <link refid="video_8cpp"/>
      </node>
      <node id="16">
        <label>src/stratagus/script.cpp</label>
        <link refid="script_8cpp"/>
      </node>
      <node id="9">
        <label>src/ui/interface.cpp</label>
        <link refid="interface_8cpp"/>
      </node>
      <node id="26">
        <label>src/ui/uitimer.cpp</label>
        <link refid="uitimer_8cpp"/>
      </node>
      <node id="23">
        <label>src/ui/statusline.cpp</label>
        <link refid="statusline_8cpp"/>
      </node>
      <node id="11">
        <label>src/ui/widgets.cpp</label>
        <link refid="widgets_8cpp"/>
      </node>
      <node id="14">
        <label>src/map/map_draw.cpp</label>
        <link refid="map__draw_8cpp"/>
      </node>
      <node id="5">
        <label>src/include/widgets.h</label>
        <link refid="widgets_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>src/ui/popup.cpp</label>
        <link refid="popup_8cpp"/>
      </node>
      <node id="8">
        <label>src/stratagus/stratagus.cpp</label>
        <link refid="stratagus_8cpp"/>
      </node>
      <node id="2">
        <label>src/editor/editloop.cpp</label>
        <link refid="editloop_8cpp"/>
      </node>
      <node id="17">
        <label>src/stratagus/title.cpp</label>
        <link refid="title_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classCFont" prot="public">CFont</innerclass>
    <innerclass refid="classCFontColor" prot="public">CFontColor</innerclass>
    <innerclass refid="classCLabel" prot="public">CLabel</innerclass>
      <sectiondef kind="user-defined">
      <header>include/font.h - The font headerfile.</header>
      <memberdef kind="define" id="include_2font_8h_1a2b5dac66dd035e58fc6f5127172f84e9" prot="public" static="no">
        <name>MaxFontColors</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/font.h" line="117" column="9" bodyfile="src/include/font.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="include_2font_8h_1a0365ad7e5eb6d214b40ae83d9c9972b4" prot="public" static="no">
        <name>FontRed</name>
        <initializer>&quot;red&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FIXME: should be moved to lua </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/font.h" line="140" column="9" bodyfile="src/include/font.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="include_2font_8h_1a4c39c7e66dee8c9fc6b7668c9533fef7" prot="public" static="no">
        <name>FontGreen</name>
        <initializer>&quot;green&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/font.h" line="141" column="9" bodyfile="src/include/font.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="include_2font_8h_1a59e18cbc486784496b3f34a86d616736" prot="public" static="no">
        <name>FontYellow</name>
        <initializer>&quot;yellow&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/font.h" line="142" column="9" bodyfile="src/include/font.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="include_2font_8h_1a8129b93753e2a7b53d7648a1d847a06a" prot="public" static="no">
        <name>FontWhite</name>
        <initializer>&quot;white&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/font.h" line="143" column="9" bodyfile="src/include/font.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="include_2font_8h_1aa446570b98e3fe1848a6ec80fc31aa4e" prot="public" static="no">
        <name>FontGrey</name>
        <initializer>&quot;grey&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/font.h" line="144" column="9" bodyfile="src/include/font.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="include_2font_8h_1a9c8f2249309b0b04ce2e2c5d3096aa7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCFont" kindref="compound">CFont</ref> &amp;</type>
        <definition>CFont&amp; GetSmallFont</definition>
        <argsstring>()</argsstring>
        <name>GetSmallFont</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Font selector for the font functions. FIXME: should be moved to lua </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/font.h" line="154" column="14" bodyfile="src/video/font.cpp" bodystart="78" bodyend="85" declfile="src/include/font.h" declline="154" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="include_2font_8h_1a9ea88411556e3012f56ce747f8ed1089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCFont" kindref="compound">CFont</ref> &amp;</type>
        <definition>CFont&amp; GetGameFont</definition>
        <argsstring>()</argsstring>
        <name>GetGameFont</name>
        <briefdescription>
<para>Small font used in stats. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/font.h" line="155" column="14" bodyfile="src/video/font.cpp" bodystart="92" bodyend="99" declfile="src/include/font.h" declline="155" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="include_2font_8h_1ace32afb03c93199e4ddfaefdccee886b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsGameFontReady</definition>
        <argsstring>()</argsstring>
        <name>IsGameFontReady</name>
        <briefdescription>
<para>Normal font used in game. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/font.h" line="156" column="13" bodyfile="src/video/font.cpp" bodystart="87" bodyend="90" declfile="src/include/font.h" declline="156" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="include_2font_8h_1a457d4ec96d92b4d1d8c8eefe6900c85c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void SetDefaultTextColors</definition>
        <argsstring>(const std::string &amp;normal, const std::string &amp;reverse)</argsstring>
        <name>SetDefaultTextColors</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>normal</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>reverse</declname>
        </param>
        <briefdescription>
<para>true when GameFont is provided </para>
        </briefdescription>
        <detaileddescription>
<para>Set the default text colors for normal and reverse text</para>
<para>Set the default text colors.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>normal</parametername>
</parameternamelist>
<parameterdescription>
<para>Normal text color. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reverse</parametername>
</parameternamelist>
<parameterdescription>
<para>Reverse text color. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/font.h" line="160" column="13" bodyfile="src/video/font.cpp" bodystart="154" bodyend="160" declfile="src/include/font.h" declline="160" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="include_2font_8h_1adabe0ecb3e31de822b4aba50ebaf888f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void GetDefaultTextColors</definition>
        <argsstring>(std::string &amp;normalp, std::string &amp;reversep)</argsstring>
        <name>GetDefaultTextColors</name>
        <param>
          <type>std::string &amp;</type>
          <declname>normalp</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>reversep</declname>
        </param>
        <briefdescription>
<para>Get the default text colors for normal and reverse text. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the default text colors.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>normalp</parametername>
</parameternamelist>
<parameterdescription>
<para>Normal text color pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reversep</parametername>
</parameternamelist>
<parameterdescription>
<para>Reverse text color pointer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/font.h" line="162" column="13" bodyfile="src/video/font.cpp" bodystart="168" bodyend="172" declfile="src/include/font.h" declline="162" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="include_2font_8h_1a82d8ae3cc6a815a9fb6d736962f113d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GetLineFont</definition>
        <argsstring>(unsigned int line, const std::string &amp;s, unsigned int maxlen, const CFont *font)</argsstring>
        <name>GetLineFont</name>
        <param>
          <type>unsigned int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>maxlen</declname>
        </param>
        <param>
          <type>const <ref refid="classCFont" kindref="compound">CFont</ref> *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Return the &apos;line&apos; line of the string &apos;s&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the &apos;line&apos; line of the string &apos;s&apos;.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>line number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>multiline string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxlen</parametername>
</parameternamelist>
<parameterdescription>
<para>max length of the string (0 : unlimited) (in char if font == NULL else in pixels). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>if specified use font-&gt;Width() instead of strlen.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>computed value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/font.h" line="164" column="20" bodyfile="src/video/font.cpp" bodystart="754" bodyend="770" declfile="src/include/font.h" declline="164" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="include_2font_8h_1af806c44daa4964580ad64fc4b2d32318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetHotKey</definition>
        <argsstring>(const std::string &amp;text)</argsstring>
        <name>GetHotKey</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Get the hot key from a string. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the hot key from a string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/font.h" line="167" column="12" bodyfile="src/video/font.cpp" bodystart="388" bodyend="400" declfile="src/include/font.h" declline="167" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="include_2font_8h_1a4ae352d369f170e4cc09acf16c6dfcb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void LoadFonts</definition>
        <argsstring>()</argsstring>
        <name>LoadFonts</name>
        <briefdescription>
<para>Load and initialize the fonts. </para>
        </briefdescription>
        <detaileddescription>
<para>Load all fonts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/font.h" line="170" column="13" bodyfile="src/video/font.cpp" bodystart="838" bodyend="848" declfile="src/include/font.h" declline="170" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="include_2font_8h_1ab59fa10e7064a523e106b8e5e92ac866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CleanFonts</definition>
        <argsstring>()</argsstring>
        <name>CleanFonts</name>
        <briefdescription>
<para>Cleanup the font module. </para>
        </briefdescription>
        <detaileddescription>
<para>Clean up the font module. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/font.h" line="173" column="13" bodyfile="src/video/font.cpp" bodystart="969" bodyend="986" declfile="src/include/font.h" declline="173" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/include/font.h"/>
  </compounddef>
</doxygen>
