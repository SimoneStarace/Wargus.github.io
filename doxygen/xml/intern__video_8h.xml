<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="intern__video_8h" kind="file" language="C++">
    <compoundname>intern_video.h</compoundname>
    <includes local="yes">SDL.h</includes>
    <includes local="no">vector</includes>
    <includedby refid="map__fog_8cpp" local="yes">src/map/map_fog.cpp</includedby>
    <includedby refid="cursor_8cpp" local="yes">src/video/cursor.cpp</includedby>
    <includedby refid="font_8cpp" local="yes">src/video/font.cpp</includedby>
    <includedby refid="graphic_8cpp" local="yes">src/video/graphic.cpp</includedby>
    <includedby refid="linedraw_8cpp" local="yes">src/video/linedraw.cpp</includedby>
    <includedby refid="video_8cpp" local="yes">src/video/video.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/video/intern_video.h</label>
        <link refid="intern__video_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>SDL.h</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>src/video/intern_video.h</label>
        <link refid="intern__video_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/video/font.cpp</label>
        <link refid="font_8cpp"/>
      </node>
      <node id="2">
        <label>src/map/map_fog.cpp</label>
        <link refid="map__fog_8cpp"/>
      </node>
      <node id="7">
        <label>src/video/video.cpp</label>
        <link refid="video_8cpp"/>
      </node>
      <node id="3">
        <label>src/video/cursor.cpp</label>
        <link refid="cursor_8cpp"/>
      </node>
      <node id="6">
        <label>src/video/linedraw.cpp</label>
        <link refid="linedraw_8cpp"/>
      </node>
      <node id="5">
        <label>src/video/graphic.cpp</label>
        <link refid="graphic_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classColorIndexRange" prot="public">ColorIndexRange</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="intern__video_8h_1ad6e63efb94d7467eeb2d611047caa952" prot="public" static="no">
        <name>CLIP_RECTANGLE</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>width</defname></param>
        <param><defname>height</defname></param>
        <briefdescription>
<para>current clipping bottom right </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structClip" kindref="compound">Clip</ref> rectangle area to clipping rectangle. This means given arguments can be changed to take the clipping rectangle into account.</para>
<para><xrefsect id="todo_1_todo000125"><xreftitle>Todo</xreftitle><xrefdescription><para>FIXME: not easy to debug, but making it a function needs:<itemizedlist>
<listitem><para>pointers to be able to alter given arguments</para>
</listitem><listitem><para>special return value to denote &apos;outside&apos; clipping region (which is now handled by a simple return in caller function)</para>
</listitem></itemizedlist>
</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>int X screen pixel position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>int Y screen pixel position (return value of X and Y can be made larger) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>unsigned int width to display </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>unsigned int height to display (return value of width and height can be made smaller) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/video/intern_video.h" line="112" column="9" bodyfile="src/video/intern_video.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intern__video_8h_1ad7192d6be629bfa7fbfa4ecc65dcb074" prot="public" static="no">
        <name>CLIP_RECTANGLE_OFS</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>width</defname></param>
        <param><defname>height</defname></param>
        <param><defname>ofsx</defname></param>
        <param><defname>ofsy</defname></param>
        <param><defname>endx</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structClip" kindref="compound">Clip</ref> rectangle area (just like CLIP_RECTANGLE), but also return offsets (these offsets can be used to skip data when used for sprites and such)</para>
<para><xrefsect id="todo_1_todo000126"><xreftitle>Todo</xreftitle><xrefdescription><para>FIXME: not easy to debug, but making it a function needs:<itemizedlist>
<listitem><para>pointers to be able to alter given arguments</para>
</listitem><listitem><para>special return value to denote &apos;outside&apos; clipping region (which is now handled by a simple return in caller function)</para>
</listitem></itemizedlist>
</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>int X screen position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>int Y screen position (return value of X and Y can be made larger) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>int width to display </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>int height to display (return value of width and height can be made smaller) returns: </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ofsx</parametername>
</parameternamelist>
<parameterdescription>
<para>int offset X from start of sprite data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ofsy</parametername>
</parameternamelist>
<parameterdescription>
<para>int offset Y from start of sprite data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>endx</parametername>
</parameternamelist>
<parameterdescription>
<para>int offset to skip the remaining data at the end of each horizontal line of the sprite.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>there was no need for &apos;endy&apos;, as it isn&apos;t used to draw sprites.. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/video/intern_video.h" line="167" column="9" bodyfile="src/video/intern_video.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="intern__video_8h_1a1f76ccb3d6f3805ac629503418443fa1" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ClipX1</definition>
        <argsstring></argsstring>
        <name>ClipX1</name>
        <briefdescription>
<para>Profile, frames out of sync. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/video/intern_video.h" line="86" column="12" bodyfile="src/video/video.cpp" bodystart="164" bodyend="-1" declfile="src/video/intern_video.h" declline="86" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="intern__video_8h_1ac0ddbfe4c1622e34d91bafa43e9557cc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ClipY1</definition>
        <argsstring></argsstring>
        <name>ClipY1</name>
        <briefdescription>
<para>current clipping top left </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/video/intern_video.h" line="87" column="12" bodyfile="src/video/video.cpp" bodystart="165" bodyend="-1" declfile="src/video/intern_video.h" declline="87" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="intern__video_8h_1a2e5b34284d634538ea9c985bb61845e7" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ClipX2</definition>
        <argsstring></argsstring>
        <name>ClipX2</name>
        <briefdescription>
<para>current clipping top left </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/video/intern_video.h" line="88" column="12" bodyfile="src/video/video.cpp" bodystart="166" bodyend="-1" declfile="src/video/intern_video.h" declline="88" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="intern__video_8h_1a64c6bea016f4b61e03995589278ca005" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ClipY2</definition>
        <argsstring></argsstring>
        <name>ClipY2</name>
        <briefdescription>
<para>current clipping bottom right </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/video/intern_video.h" line="89" column="12" bodyfile="src/video/video.cpp" bodystart="167" bodyend="-1" declfile="src/video/intern_video.h" declline="89" declcolumn="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="intern__video_8h_1a8661bead2aee2f23a5bfd05a2ec5ebb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void ColorCycleSurface</definition>
        <argsstring>(SDL_Surface &amp;surface)</argsstring>
        <name>ColorCycleSurface</name>
        <param>
          <type>SDL_Surface &amp;</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classColor" kindref="compound">Color</ref> Cycle for particular surface </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/video/intern_video.h" line="76" column="13" bodyfile="src/video/video.cpp" bodystart="417" bodyend="431" declfile="src/video/intern_video.h" declline="76" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="intern__video_8h_1acbfdcfe525801bf9f53ddb33739ce8b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void LazilyMakeColorCyclingTextures</definition>
        <argsstring>(CGraphic *g, std::vector&lt; ColorIndexRange &gt; ranges)</argsstring>
        <name>LazilyMakeColorCyclingTextures</name>
        <param>
          <type><ref refid="classCGraphic" kindref="compound">CGraphic</ref> *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classColorIndexRange" kindref="compound">ColorIndexRange</ref> &gt;</type>
          <declname>ranges</declname>
        </param>
        <briefdescription>
<para>Make OpenGL textures for color cycling. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/video/intern_video.h" line="78" column="13" declfile="src/video/intern_video.h" declline="78" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="intern__video_8h_1abf5ddb177edab4186fa88bd4b71ebdfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void MakeColorCyclingTextures</definition>
        <argsstring>(CGraphic *g, int count)</argsstring>
        <name>MakeColorCyclingTextures</name>
        <param>
          <type><ref refid="classCGraphic" kindref="compound">CGraphic</ref> *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/video/intern_video.h" line="79" column="13" declfile="src/video/intern_video.h" declline="79" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>THIS HEADER FILE SHOULD ONLY BE INCLUDED BY SOURCE-FILES IN VIDEO !!!</para>
<para>This delivers an interface to basic video operations in video.c, while keeping these detailed operations out of the main include-file <ref refid="video_8h" kindref="compound">video.h</ref></para>
<para><xrefsect id="todo_1_todo000124"><xreftitle>Todo</xreftitle><xrefdescription><para>FIXME: Currently some interfaces listed in <ref refid="video_8h" kindref="compound">video.h</ref> should be moved in here, this includes possible &quot;extern&quot; declarations in source-files themselves. The doxygen docs looks not good, but now contains all info. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <location file="src/video/intern_video.h"/>
  </compounddef>
</doxygen>
