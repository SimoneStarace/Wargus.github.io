<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="network_8cpp" kind="file" language="C++">
    <compoundname>network.cpp</compoundname>
    <includes refid="online__service_8h" local="yes">online_service.h</includes>
    <includes refid="stratagus_8h" local="yes">stratagus.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">list</includes>
    <includes refid="network_8h" local="yes">network.h</includes>
    <includes refid="actions_8h" local="yes">actions.h</includes>
    <includes refid="commands_8h" local="yes">commands.h</includes>
    <includes refid="interface_8h" local="yes">interface.h</includes>
    <includes refid="map_8h" local="yes">map.h</includes>
    <includes refid="net__lowlevel_8h" local="yes">net_lowlevel.h</includes>
    <includes refid="net__message_8h" local="yes">net_message.h</includes>
    <includes refid="netconnect_8h" local="yes">netconnect.h</includes>
    <includes refid="parameters_8h" local="yes">parameters.h</includes>
    <includes refid="player_8h" local="yes">player.h</includes>
    <includes refid="replay_8h" local="yes">replay.h</includes>
    <includes refid="sound_8h" local="yes">sound.h</includes>
    <includes refid="translate_8h" local="yes">translate.h</includes>
    <includes refid="unit_8h" local="yes">unit.h</includes>
    <includes refid="unit__manager_8h" local="yes">unit_manager.h</includes>
    <includes refid="unittype_8h" local="yes">unittype.h</includes>
    <includes refid="video_8h" local="yes">video.h</includes>
    <includes local="no">deque</includes>
    <incdepgraph>
      <node id="21">
        <label>upgrade_structs.h</label>
        <link refid="upgrade__structs_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>list</label>
      </node>
      <node id="81">
        <label>guichan/widgets/label.h</label>
        <link refid="label_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>replay.h</label>
        <link refid="replay_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>SDL_mixer.h</label>
      </node>
      <node id="47">
        <label>video.h</label>
        <link refid="video_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>guichan/widgets/textfield.h</label>
        <link refid="textfield_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>guichan/widgets/textbox.h</label>
        <link refid="textbox_8h"/>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>guichan/font.h</label>
        <link refid="guichan_2include_2guichan_2font_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>translate.h</label>
        <link refid="translate_8h"/>
      </node>
      <node id="38">
        <label>SDL.h</label>
      </node>
      <node id="9">
        <label>cstdint</label>
      </node>
      <node id="7">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>guichan/exception.h</label>
        <link refid="exception_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>stdint.h</label>
      </node>
      <node id="77">
        <label>guichan/widgets/dropdown.h</label>
        <link refid="dropdown_8h"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>actions.h</label>
        <link refid="actions_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>unit_manager.h</label>
        <link refid="unit__manager_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>guichan/widgets/window.h</label>
        <link refid="window_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>network/netsockets.h</label>
        <link refid="netsockets_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>net_message.h</label>
        <link refid="net__message_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="1">
        <label>src/network/network.cpp</label>
        <link refid="network_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>guichan/widgets/icon.h</label>
        <link refid="icon_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>guichan/imagefont.h</label>
        <link refid="imagefont_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>guichan/platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="45">
        <label>map</label>
      </node>
      <node id="2">
        <label>online_service.h</label>
        <link refid="online__service_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>guichan/defaultfont.h</label>
        <link refid="defaultfont_8h"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>guichan.h</label>
        <link refid="guichan_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stddef.h</label>
      </node>
      <node id="79">
        <label>guichan/widgets/scrollarea.h</label>
        <link refid="scrollarea_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>guichan/rectangle.h</label>
        <link refid="rectangle_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>unitptr.h</label>
        <link refid="unitptr_8h"/>
      </node>
      <node id="58">
        <label>guichan/imageloader.h</label>
        <link refid="imageloader_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>winsock2.h</label>
      </node>
      <node id="18">
        <label>interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>guichan/mouseinput.h</label>
        <link refid="mouseinput_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>guichan/mouselistener.h</label>
        <link refid="mouselistener_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>libmng.h</label>
      </node>
      <node id="25">
        <label>unit_cache.h</label>
        <link refid="unit__cache_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>guichan/widgets/checkbox.h</label>
        <link refid="checkbox_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>guichan/listmodel.h</label>
        <link refid="listmodel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="54">
        <label>guichan/cliprectangle.h</label>
        <link refid="cliprectangle_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>guichan/graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>missileconfig.h</label>
        <link refid="missileconfig_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>ctime</label>
      </node>
      <node id="37">
        <label>sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>netconnect.h</label>
        <link refid="netconnect_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>guichan/focushandler.h</label>
        <link refid="focushandler_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>guichan/key.h</label>
        <link refid="key_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>guichan/input.h</label>
        <link refid="input_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>guichan/color.h</label>
        <link refid="guichan_2include_2guichan_2color_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>stack</label>
      </node>
      <node id="22">
        <label>vector</label>
      </node>
      <node id="76">
        <label>guichan/basiccontainer.h</label>
        <link refid="basiccontainer_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>guichan/gui.h</label>
        <link refid="gui_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stratagus.h</label>
        <link refid="stratagus_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>guichan/widgets/slider.h</label>
        <link refid="slider_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>color.h</label>
        <link refid="include_2color_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>unitsound.h</label>
        <link refid="unitsound_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>guichan/keyinput.h</label>
        <link refid="keyinput_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>guichan/widgets/radiobutton.h</label>
        <link refid="radiobutton_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>icons.h</label>
        <link refid="icons_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cstdlib</label>
      </node>
      <node id="89">
        <label>deque</label>
      </node>
      <node id="13">
        <label>network.h</label>
        <link refid="network_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>climits</label>
      </node>
      <node id="23">
        <label>map.h</label>
        <link refid="map_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>shaders.h</label>
        <link refid="shaders_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>guichan/image.h</label>
        <link refid="image_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>guichan/widgets/button.h</label>
        <link refid="button_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>vec2i.h</label>
        <link refid="vec2i_8h"/>
      </node>
      <node id="66">
        <label>guichan/keylistener.h</label>
        <link refid="keylistener_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>unit.h</label>
        <link refid="unit_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>guichan/widgets/container.h</label>
        <link refid="container_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>tile.h</label>
        <link refid="tile_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>net_lowlevel.h</label>
        <link refid="net__lowlevel_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>set</label>
      </node>
      <node id="61">
        <label>guichan/widget.h</label>
        <link refid="widget_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>unittype.h</label>
        <link refid="unittype_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>algorithm</label>
      </node>
      <node id="33">
        <label>parameters.h</label>
        <link refid="parameters_8h"/>
      </node>
      <node id="78">
        <label>guichan/widgets/listbox.h</label>
        <link refid="listbox_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>guichan/actionlistener.h</label>
        <link refid="actionlistener_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>player.h</label>
        <link refid="player_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>commands.h</label>
        <link refid="commands_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classCNetworkCommandQueue" prot="public">CNetworkCommandQueue</innerclass>
      <sectiondef kind="user-defined">
      <header>network.cpp - The network.</header>
      <memberdef kind="variable" id="network_8cpp_1af78757e14fe4d29ec3fa3ce0433d165a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool NetworkInSync</definition>
        <argsstring></argsstring>
        <name>NetworkInSync</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Network file descriptor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="294" column="6" bodyfile="src/network/network.cpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="network_8cpp_1a4b1d83fcec21423e903cef57d9c638e8" prot="public" static="no" mutable="no">
        <type><ref refid="classCUDPSocket" kindref="compound">CUDPSocket</ref></type>
        <definition>CUDPSocket NetworkFildes</definition>
        <argsstring></argsstring>
        <name>NetworkFildes</name>
        <briefdescription>
<para>Network is in sync. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="296" column="12" bodyfile="src/network/network.cpp" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="network_8cpp_1a057ab078edf0b1e93ee2f78c1e36d222" prot="public" static="yes" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long NetworkLastFrame[PlayerMax]</definition>
        <argsstring>[PlayerMax]</argsstring>
        <name>NetworkLastFrame</name>
        <briefdescription>
<para>Network file descriptor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="298" column="22" bodyfile="src/network/network.cpp" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="network_8cpp_1acd2f74a4934ca7b8ffbfaa3ffd148554" prot="public" static="yes" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long NetworkLastCycle[PlayerMax]</definition>
        <argsstring>[PlayerMax]</argsstring>
        <name>NetworkLastCycle</name>
        <briefdescription>
<para>Last frame received packet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="299" column="22" bodyfile="src/network/network.cpp" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="network_8cpp_1a0a516f9feb938edb619cf89562277aec" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int NetworkSyncSeeds[256]</definition>
        <argsstring>[256]</argsstring>
        <name>NetworkSyncSeeds</name>
        <briefdescription>
<para>Last cycle received packet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="301" column="12" bodyfile="src/network/network.cpp" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="network_8cpp_1a637f84e576127607eadc30699a1c78b7" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int NetworkSyncHashs[256]</definition>
        <argsstring>[256]</argsstring>
        <name>NetworkSyncHashs</name>
        <briefdescription>
<para>Network sync seeds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="302" column="12" bodyfile="src/network/network.cpp" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="network_8cpp_1ab7feecd702afaaa60f047b30062a65fa" prot="public" static="yes" mutable="no">
        <type><ref refid="classCNetworkCommandQueue" kindref="compound">CNetworkCommandQueue</ref></type>
        <definition>CNetworkCommandQueue NetworkIn[256][PlayerMax][MaxNetworkCommands]</definition>
        <argsstring>[256][PlayerMax][MaxNetworkCommands]</argsstring>
        <name>NetworkIn</name>
        <briefdescription>
<para>Network sync hashs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="303" column="29" bodyfile="src/network/network.cpp" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="network_8cpp_1a6cb1d1e2e050382053d07bd385027952" prot="public" static="yes" mutable="no">
        <type>std::deque&lt; <ref refid="classCNetworkCommandQueue" kindref="compound">CNetworkCommandQueue</ref> &gt;</type>
        <definition>std::deque&lt;CNetworkCommandQueue&gt; CommandsIn</definition>
        <argsstring></argsstring>
        <name>CommandsIn</name>
        <briefdescription>
<para>Per-player network packet input queue. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="304" column="19" bodyfile="src/network/network.cpp" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="network_8cpp_1a889082ff0f1b499f0e782f7d697c0556" prot="public" static="yes" mutable="no">
        <type>std::deque&lt; <ref refid="classCNetworkCommandQueue" kindref="compound">CNetworkCommandQueue</ref> &gt;</type>
        <definition>std::deque&lt;CNetworkCommandQueue&gt; MsgCommandsIn</definition>
        <argsstring></argsstring>
        <name>MsgCommandsIn</name>
        <briefdescription>
<para>Network command input queue. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="305" column="19" bodyfile="src/network/network.cpp" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="network_8cpp_1a86bb28b71d131eeafb9cfcc19855fb1c" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int PlayerQuit[PlayerMax]</definition>
        <argsstring>[PlayerMax]</argsstring>
        <name>PlayerQuit</name>
        <briefdescription>
<para>Network message input queue. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="339" column="12" bodyfile="src/network/network.cpp" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a45f5cb330c4e52475e1d372b728e89a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void NetworkBroadcast</definition>
        <argsstring>(const CNetworkPacket &amp;packet, int numcommands, int player=255)</argsstring>
        <name>NetworkBroadcast</name>
        <param>
          <type>const <ref refid="classCNetworkPacket" kindref="compound">CNetworkPacket</ref> &amp;</type>
          <declname>packet</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numcommands</declname>
        </param>
        <param>
          <type>int</type>
          <declname>player</declname>
          <defval>255</defval>
        </param>
        <briefdescription>
<para>Player quit. </para>
        </briefdescription>
        <detaileddescription>
<para>Send message to all clients.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>packet</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet to send. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numcommands</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of commands. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="351" column="13" bodyfile="src/network/network.cpp" bodystart="351" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a4d63e3533022e4c9fb4a2323e5b7f077" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void NetworkSendPacket</definition>
        <argsstring>(const CNetworkCommandQueue(&amp;ncq)[MaxNetworkCommands])</argsstring>
        <name>NetworkSendPacket</name>
        <param>
          <type>const <ref refid="classCNetworkCommandQueue" kindref="compound">CNetworkCommandQueue</ref>(&amp;)</type>
          <declname>ncq</declname>
          <array>[MaxNetworkCommands]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Network send packet. Build it from queue and broadcast.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ncq</parametername>
</parameternamelist>
<parameterdescription>
<para>Outgoing network queue start. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="378" column="13" bodyfile="src/network/network.cpp" bodystart="378" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1ad5d19b49bf082f99e833f1619fa937c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InitNetwork1</definition>
        <argsstring>()</argsstring>
        <name>InitNetwork1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize network port. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="405" column="6" bodyfile="src/network/network.cpp" bodystart="405" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a9d3ab8c36c690f0ed56f1ec42816255d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void ExitNetwork1</definition>
        <argsstring>()</argsstring>
        <name>ExitNetwork1</name>
        <briefdescription>
<para>Initialise network. </para>
        </briefdescription>
        <detaileddescription>
<para>Cleanup network. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="445" column="6" bodyfile="src/network/network.cpp" bodystart="445" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a94c96c757a4e53b9e17901105d748380" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkOnStartGame</definition>
        <argsstring>()</argsstring>
        <name>NetworkOnStartGame</name>
        <briefdescription>
<para>Cleanup network (port) </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classGame" kindref="compound">Game</ref> will start now. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="468" column="6" bodyfile="src/network/network.cpp" bodystart="468" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a61656c86317745b47e41d0aee6918907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkSendCommand</definition>
        <argsstring>(int command, const CUnit &amp;unit, int x, int y, const CUnit *dest, const CUnitType *type, int status)</argsstring>
        <name>NetworkSendCommand</name>
        <param>
          <type>int</type>
          <declname>command</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Send network command. </para>
        </briefdescription>
        <detaileddescription>
<para>Prepare send of command message.</para>
<para>Convert arguments into network format and place it into output queue.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>Command (Move,Attack,...). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit that receive the command. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>optional X map position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>optional y map position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>optional destination unit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>optional unit-type argument. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Append command or flush old commands.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Destination and unit-type shares the same network slot. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="531" column="6" bodyfile="src/network/network.cpp" bodystart="531" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a58727f23bfc41c14922270a3cebcc037" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkSendExtendedCommand</definition>
        <argsstring>(int command, int arg1, int arg2, int arg3, int arg4, int status)</argsstring>
        <name>NetworkSendExtendedCommand</name>
        <param>
          <type>int</type>
          <declname>command</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg3</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg4</declname>
        </param>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Send extended network command. </para>
        </briefdescription>
        <detaileddescription>
<para>Prepare send of extended command message.</para>
<para>Convert arguments into network format and place it into output queue.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>Command (Move,Attack,...). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg1</parametername>
</parameternamelist>
<parameterdescription>
<para>optional argument #1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg2</parametername>
</parameternamelist>
<parameterdescription>
<para>optional argument #2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg3</parametername>
</parameternamelist>
<parameterdescription>
<para>optional argument #3 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg4</parametername>
</parameternamelist>
<parameterdescription>
<para>optional argument #4 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Append command or flush old commands. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="574" column="6" bodyfile="src/network/network.cpp" bodystart="574" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a2c561d4360ac0338631ec6d3ce6b0087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkSendSelection</definition>
        <argsstring>(CUnit **units, int count)</argsstring>
        <name>NetworkSendSelection</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> **</type>
          <declname>units</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Send Selections to Team. </para>
        </briefdescription>
        <detaileddescription>
<para>Sends my selections to teammates</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>units</parametername>
</parameternamelist>
<parameterdescription>
<para>Units to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of units to send </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="601" column="6" bodyfile="src/network/network.cpp" bodystart="601" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1ab09eca7ac063101fbb812982d4c7c203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkSendChatMessage</definition>
        <argsstring>(const std::string &amp;msg)</argsstring>
        <name>NetworkSendChatMessage</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Get all network commands. </para>
        </briefdescription>
        <detaileddescription>
<para>Send chat message. (Message is sent with low priority)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Text message to send. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="634" column="6" bodyfile="src/network/network.cpp" bodystart="634" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a46da7bb40c1585aa790c196942100266" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void NetworkRemovePlayer</definition>
        <argsstring>(int player)</argsstring>
        <name>NetworkRemovePlayer</name>
        <param>
          <type>int</type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a player from the game.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Player number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="653" column="13" bodyfile="src/network/network.cpp" bodystart="653" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1af745b6fe4378ca28cbce70c10aa217a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool IsNetworkCommandReady</definition>
        <argsstring>(int hostIndex, unsigned long gameNetCycle)</argsstring>
        <name>IsNetworkCommandReady</name>
        <param>
          <type>int</type>
          <declname>hostIndex</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>gameNetCycle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="670" column="13" bodyfile="src/network/network.cpp" bodystart="670" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1ae0c9443214942e8c4263f372a2d75368" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool IsNetworkCommandReady</definition>
        <argsstring>(unsigned long gameNetCycle)</argsstring>
        <name>IsNetworkCommandReady</name>
        <param>
          <type>unsigned long</type>
          <declname>gameNetCycle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="681" column="13" bodyfile="src/network/network.cpp" bodystart="681" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a3126a01ab921daaf21e1fa46447a6a9e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void ParseResendCommand</definition>
        <argsstring>(const CNetworkPacket &amp;packet)</argsstring>
        <name>ParseResendCommand</name>
        <param>
          <type>const <ref refid="classCNetworkPacket" kindref="compound">CNetworkPacket</ref> &amp;</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="693" column="13" bodyfile="src/network/network.cpp" bodystart="693" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1aadb5bc8a9c412499eafd84ad04756e18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool IsAValidCommand_Command</definition>
        <argsstring>(const CNetworkPacket &amp;packet, int index, const int player)</argsstring>
        <name>IsAValidCommand_Command</name>
        <param>
          <type>const <ref refid="classCNetworkPacket" kindref="compound">CNetworkPacket</ref> &amp;</type>
          <declname>packet</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="728" column="13" bodyfile="src/network/network.cpp" bodystart="728" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a454d1b52df3bf4aee0a6b776b813b570" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool IsAValidCommand_Dismiss</definition>
        <argsstring>(const CNetworkPacket &amp;packet, int index, const int player)</argsstring>
        <name>IsAValidCommand_Dismiss</name>
        <param>
          <type>const <ref refid="classCNetworkPacket" kindref="compound">CNetworkPacket</ref> &amp;</type>
          <declname>packet</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="743" column="13" bodyfile="src/network/network.cpp" bodystart="743" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a2ddb8b1e97d59a77588acd2bfa0f5b0b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool IsAValidCommand</definition>
        <argsstring>(const CNetworkPacket &amp;packet, int index, const int player)</argsstring>
        <name>IsAValidCommand</name>
        <param>
          <type>const <ref refid="classCNetworkPacket" kindref="compound">CNetworkPacket</ref> &amp;</type>
          <declname>packet</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="756" column="13" bodyfile="src/network/network.cpp" bodystart="756" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a13c8909d94833f218e56b6ed182dd768" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void NetworkParseInGameEvent</definition>
        <argsstring>(const unsigned char *buf, int len, const CHost &amp;host)</argsstring>
        <name>NetworkParseInGameEvent</name>
        <param>
          <type>const unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const <ref refid="classCHost" kindref="compound">CHost</ref> &amp;</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="772" column="13" bodyfile="src/network/network.cpp" bodystart="772" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1aed4da7550e85618912b9f43f59994d45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkEvent</definition>
        <argsstring>()</argsstring>
        <name>NetworkEvent</name>
        <briefdescription>
<para>Initialise network data for ingame communication. </para>
        </briefdescription>
        <detaileddescription>
<para>Called if message for the network is ready. (by WaitEventsOneFrame) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="853" column="6" bodyfile="src/network/network.cpp" bodystart="853" bodyend="885"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a691be9bb929e5d0d7c8fc73123d20782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkQuitGame</definition>
        <argsstring>()</argsstring>
        <name>NetworkQuitGame</name>
        <briefdescription>
<para>Hold in sync. </para>
        </briefdescription>
        <detaileddescription>
<para>Quit the game. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="890" column="6" bodyfile="src/network/network.cpp" bodystart="890" bodyend="910"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a86f311e68409438ecd046c246b628bdb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void NetworkExecCommand_Sync</definition>
        <argsstring>(const CNetworkCommandQueue &amp;ncq)</argsstring>
        <name>NetworkExecCommand_Sync</name>
        <param>
          <type>const <ref refid="classCNetworkCommandQueue" kindref="compound">CNetworkCommandQueue</ref> &amp;</type>
          <declname>ncq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="912" column="13" bodyfile="src/network/network.cpp" bodystart="912" bodyend="929"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a64b95375c9293b6d546d1eac562f8b00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void NetworkExecCommand_Selection</definition>
        <argsstring>(const CNetworkCommandQueue &amp;ncq)</argsstring>
        <name>NetworkExecCommand_Selection</name>
        <param>
          <type>const <ref refid="classCNetworkCommandQueue" kindref="compound">CNetworkCommandQueue</ref> &amp;</type>
          <declname>ncq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="931" column="13" bodyfile="src/network/network.cpp" bodystart="931" bodyend="947"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a7d0751df07ab6494a38e0a4c33f3bfc1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void NetworkExecCommand_Chat</definition>
        <argsstring>(const CNetworkCommandQueue &amp;ncq)</argsstring>
        <name>NetworkExecCommand_Chat</name>
        <param>
          <type>const <ref refid="classCNetworkCommandQueue" kindref="compound">CNetworkCommandQueue</ref> &amp;</type>
          <declname>ncq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="949" column="13" bodyfile="src/network/network.cpp" bodystart="949" bodyend="959"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a16834a874de088aae373f9d99e7a3f93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void NetworkExecCommand_Quit</definition>
        <argsstring>(const CNetworkCommandQueue &amp;ncq)</argsstring>
        <name>NetworkExecCommand_Quit</name>
        <param>
          <type>const <ref refid="classCNetworkCommandQueue" kindref="compound">CNetworkCommandQueue</ref> &amp;</type>
          <declname>ncq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="961" column="13" bodyfile="src/network/network.cpp" bodystart="961" bodyend="970"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a9e3b53e40abf421a6349c14615f056b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void NetworkExecCommand_ExtendedCommand</definition>
        <argsstring>(const CNetworkCommandQueue &amp;ncq)</argsstring>
        <name>NetworkExecCommand_ExtendedCommand</name>
        <param>
          <type>const <ref refid="classCNetworkCommandQueue" kindref="compound">CNetworkCommandQueue</ref> &amp;</type>
          <declname>ncq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="972" column="13" bodyfile="src/network/network.cpp" bodystart="972" bodyend="980"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a03215972c89018aeeb62bee18a97e16b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void NetworkExecCommand_Command</definition>
        <argsstring>(const CNetworkCommandQueue &amp;ncq)</argsstring>
        <name>NetworkExecCommand_Command</name>
        <param>
          <type>const <ref refid="classCNetworkCommandQueue" kindref="compound">CNetworkCommandQueue</ref> &amp;</type>
          <declname>ncq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="982" column="13" bodyfile="src/network/network.cpp" bodystart="982" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1ab7231c0f429c8ab6b375c23d615ae4ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void NetworkExecCommand</definition>
        <argsstring>(const CNetworkCommandQueue &amp;ncq)</argsstring>
        <name>NetworkExecCommand</name>
        <param>
          <type>const <ref refid="classCNetworkCommandQueue" kindref="compound">CNetworkCommandQueue</ref> &amp;</type>
          <declname>ncq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute a network command.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ncq</parametername>
</parameternamelist>
<parameterdescription>
<para>Network command from queue </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="995" column="13" bodyfile="src/network/network.cpp" bodystart="995" bodyend="1009"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a7f9a7bd6600dc6b77d4295e6d9e83cb2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void NetworkSendCommands</definition>
        <argsstring>(unsigned long gameNetCycle)</argsstring>
        <name>NetworkSendCommands</name>
        <param>
          <type>unsigned long</type>
          <declname>gameNetCycle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Network send commands. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="1014" column="13" bodyfile="src/network/network.cpp" bodystart="1014" bodyend="1063"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1aa28026141aa664128d8556b91f43edae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void NetworkExecCommands</definition>
        <argsstring>(unsigned long gameNetCycle)</argsstring>
        <name>NetworkExecCommands</name>
        <param>
          <type>unsigned long</type>
          <declname>gameNetCycle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Network execute commands. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="1068" column="13" bodyfile="src/network/network.cpp" bodystart="1068" bodyend="1083"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1abff2ea5452021ce87032c53955a54510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkCommands</definition>
        <argsstring>()</argsstring>
        <name>NetworkCommands</name>
        <briefdescription>
<para>Recover network. </para>
        </briefdescription>
        <detaileddescription>
<para>Handle network commands. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="1088" column="6" bodyfile="src/network/network.cpp" bodystart="1088" bodyend="1101"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a35be4bff2e180397e0dcff7e3c910e93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void CheckPlayerThatTimeOut</definition>
        <argsstring>(int hostIndex)</argsstring>
        <name>CheckPlayerThatTimeOut</name>
        <param>
          <type>int</type>
          <declname>hostIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="1103" column="13" bodyfile="src/network/network.cpp" bodystart="1103" bodyend="1137"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1acf4273caea22ad9d2498f7c35dd458f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void NetworkResendCommands</definition>
        <argsstring>()</argsstring>
        <name>NetworkResendCommands</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Network resend commands, we have a missing packet send to all clients what packet we are missing.</para>
<para><xrefsect id="todo_1_todo000054"><xreftitle>Todo</xreftitle><xrefdescription><para>We need only send to the clients, that have not delivered the packet. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="1146" column="13" bodyfile="src/network/network.cpp" bodystart="1146" bodyend="1161"/>
      </memberdef>
      <memberdef kind="function" id="network_8cpp_1a9419bda4a9887da6edd137aa86cdd7d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NetworkRecover</definition>
        <argsstring>()</argsstring>
        <name>NetworkRecover</name>
        <briefdescription>
<para>Quit game: warn other users. </para>
        </briefdescription>
        <detaileddescription>
<para>Recover network. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/network.cpp" line="1166" column="6" bodyfile="src/network/network.cpp" bodystart="1166" bodyend="1181"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/network/network.cpp"/>
  </compounddef>
</doxygen>
