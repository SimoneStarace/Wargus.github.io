<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classCUnitTypeFinder" kind="class" language="C++" prot="public">
    <compoundname>CUnitTypeFinder</compoundname>
    <includes refid="unit__find_8h" local="no">unit_find.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCUnitTypeFinder_1aa1d9b5280950d29c6833c69ac1166f93" prot="private" static="no" mutable="no">
        <type>const <ref refid="unittype_8h_1afe35dd4934363bb7626f498bdc947a4a" kindref="member">UnitTypeType</ref></type>
        <definition>const UnitTypeType CUnitTypeFinder::unitTypeType</definition>
        <argsstring></argsstring>
        <name>unitTypeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/unit_find.h" line="200" column="20" bodyfile="src/include/unit_find.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCUnitTypeFinder_1a5d77153051d1ddef31dd78a5a7201e9b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CUnitTypeFinder::CUnitTypeFinder</definition>
        <argsstring>(const UnitTypeType t)</argsstring>
        <name>CUnitTypeFinder</name>
        <param>
          <type>const <ref refid="unittype_8h_1afe35dd4934363bb7626f498bdc947a4a" kindref="member">UnitTypeType</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/unit_find.h" line="190" column="10" bodyfile="src/include/unit_find.h" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classCUnitTypeFinder_1a8df53c62c0f00a356599e2f81a684e62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CUnitTypeFinder::operator()</definition>
        <argsstring>(const CUnit *const unit) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> *const</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/unit_find.h" line="191" column="6" bodyfile="src/include/unit_find.h" bodystart="191" bodyend="198"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/include/unit_find.h" line="188" column="1" bodyfile="src/include/unit_find.h" bodystart="187" bodyend="201"/>
    <listofallmembers>
      <member refid="classCUnitTypeFinder_1a5d77153051d1ddef31dd78a5a7201e9b" prot="public" virt="non-virtual"><scope>CUnitTypeFinder</scope><name>CUnitTypeFinder</name></member>
      <member refid="classCUnitTypeFinder_1a8df53c62c0f00a356599e2f81a684e62" prot="public" virt="non-virtual"><scope>CUnitTypeFinder</scope><name>operator()</name></member>
      <member refid="classCUnitTypeFinder_1aa1d9b5280950d29c6833c69ac1166f93" prot="private" virt="non-virtual"><scope>CUnitTypeFinder</scope><name>unitTypeType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
