<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgcn_1_1SDLImageLoader" kind="class" language="C++" prot="public">
    <compoundname>gcn::SDLImageLoader</compoundname>
    <basecompoundref refid="classgcn_1_1ImageLoader" prot="public" virt="non-virtual">gcn::ImageLoader</basecompoundref>
    <includes refid="sdlimageloader_8h" local="no">sdlimageloader.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgcn_1_1SDLImageLoader_1aeca575314aa60bcb406836b137709e8b" prot="protected" static="no" mutable="no">
        <type>SDL_Surface *</type>
        <definition>SDL_Surface* gcn::SDLImageLoader::mCurrentImage</definition>
        <argsstring></argsstring>
        <name>mCurrentImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlimageloader.h" line="102" column="21" bodyfile="src/guichan/include/guichan/sdl/sdlimageloader.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgcn_1_1SDLImageLoader_1a44832338e6c0ee495124ad617112f40d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gcn::SDLImageLoader::SDLImageLoader</definition>
        <argsstring>()</argsstring>
        <name>SDLImageLoader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlimageloader.h" line="78" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1SDLImageLoader_1a3662ac487054734fae28c233f0f84aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>virtual void gcn::SDLImageLoader::prepare</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>prepare</name>
        <reimplements refid="classgcn_1_1ImageLoader_1a4daabf5c6645601be6914489bf882291">prepare</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prepares an image for reading. After you have called this function you can retrieve information about it and edit it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the image file to prepare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgcn_1_1Exception" kindref="compound">Exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>when called without having finalized or disposed to last image or when unable to load the image. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlimageloader.h" line="83" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1SDLImageLoader_1a698af2a7a767d2e3255d4b3f6e7e86d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>virtual void gcn::SDLImageLoader::free</definition>
        <argsstring>(Image *image)</argsstring>
        <name>free</name>
        <reimplements refid="classgcn_1_1ImageLoader_1a929d9d08f40a1ec16e6476121d31b9c0">free</reimplements>
        <param>
          <type><ref refid="classgcn_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function frees an image.</para>
<para>NOTE: There is generally no reason to call this function as it is called upon by the <ref refid="classgcn_1_1Image" kindref="compound">Image</ref> object when destroying an <ref refid="classgcn_1_1Image" kindref="compound">Image</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>the image to be freed and removed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgcn_1_1Exception" kindref="compound">Exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>when image points to NULL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlimageloader.h" line="85" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1SDLImageLoader_1aefc8ee795479cc1834fc542854894dc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref> *</type>
        <definition>virtual void* gcn::SDLImageLoader::getRawData</definition>
        <argsstring>()</argsstring>
        <name>getRawData</name>
        <reimplements refid="classgcn_1_1ImageLoader_1a49fb1ffda9e4eeda976131ab643eebb9">getRawData</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rreturns a pointer of raw data of an image. The raw data is in 32 bit RGBA format. The funcion will not free a prepared image, so finalize or discard should be used afterwards.</para>
<para><simplesect kind="return"><para>a pointer to the raw image data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlimageloader.h" line="87" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1SDLImageLoader_1a1fedf352b8864a6d07256096c8b78d32" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref> *</type>
        <definition>virtual void* gcn::SDLImageLoader::finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <reimplements refid="classgcn_1_1ImageLoader_1aa43a9488443697421be2e12bca87a6eb">finalize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finalizes an image meaning it will return the image data. If the image contains pixels with &quot;magic pink&quot; (0xff00ff) they will be treated as transparent pixels.</para>
<para><simplesect kind="return"><para>a pointer to the image data. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgcn_1_1Exception" kindref="compound">Exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>when no image has been prepared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlimageloader.h" line="89" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1SDLImageLoader_1a788499c7bd31f55082dee07e37778d38" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>virtual void gcn::SDLImageLoader::discard</definition>
        <argsstring>()</argsstring>
        <name>discard</name>
        <reimplements refid="classgcn_1_1ImageLoader_1abc6d63fd34827e52431577be57d3ed9e">discard</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Discards a prepared image.</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgcn_1_1Exception" kindref="compound">Exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>when no image has been prepared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlimageloader.h" line="91" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1SDLImageLoader_1ad17e315e68f940dcb39ac358bce6e22e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int gcn::SDLImageLoader::getHeight</definition>
        <argsstring>() const</argsstring>
        <name>getHeight</name>
        <reimplements refid="classgcn_1_1ImageLoader_1aaf09dbde0504436761b886359ec5f012">getHeight</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the height if the image.</para>
<para><simplesect kind="return"><para>the height of the image. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgcn_1_1Exception" kindref="compound">Exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if no image have been prepared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlimageloader.h" line="93" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1SDLImageLoader_1aa91730438c3e490792a2bdf4f4d0b432" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int gcn::SDLImageLoader::getWidth</definition>
        <argsstring>() const</argsstring>
        <name>getWidth</name>
        <reimplements refid="classgcn_1_1ImageLoader_1a868e7446825d4ab1b41b1e968546e132">getWidth</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the width of an image.</para>
<para><simplesect kind="return"><para>the width of the image. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgcn_1_1Exception" kindref="compound">Exception</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if no image have been prepared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlimageloader.h" line="95" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1SDLImageLoader_1adf260888fd0e6ec036b11ec3efc6d385" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classgcn_1_1Color" kindref="compound">Color</ref></type>
        <definition>virtual Color gcn::SDLImageLoader::getPixel</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>getPixel</name>
        <reimplements refid="classgcn_1_1ImageLoader_1a605f2c02226446d6b70f55f5533e6344">getPixel</reimplements>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the color of a pixel at coordinate x and y.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y coordinate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the color of the pixel. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlimageloader.h" line="97" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classgcn_1_1SDLImageLoader_1a52d840c7ceaf1deaaaae8a372e0033a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>virtual void gcn::SDLImageLoader::putPixel</definition>
        <argsstring>(int x, int y, const Color &amp;color)</argsstring>
        <name>putPixel</name>
        <reimplements refid="classgcn_1_1ImageLoader_1afc4dbd4b254b6be2ac2465f5b5ac4390">putPixel</reimplements>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="classgcn_1_1Color" kindref="compound">Color</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Puts a pixel with a certain color at coordinate x and y.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>the color of the pixel to put. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlimageloader.h" line="99" column="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>SDL implementation of <ref refid="classgcn_1_1ImageLoader" kindref="compound">ImageLoader</ref>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>gcn::ImageLoader</label>
        <link refid="classgcn_1_1ImageLoader"/>
      </node>
      <node id="1">
        <label>gcn::SDLImageLoader</label>
        <link refid="classgcn_1_1SDLImageLoader"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>gcn::ImageLoader</label>
        <link refid="classgcn_1_1ImageLoader"/>
      </node>
      <node id="1">
        <label>gcn::SDLImageLoader</label>
        <link refid="classgcn_1_1SDLImageLoader"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/guichan/include/guichan/sdl/sdlimageloader.h" line="72" column="1" bodyfile="src/guichan/include/guichan/sdl/sdlimageloader.h" bodystart="71" bodyend="103"/>
    <listofallmembers>
      <member refid="classgcn_1_1SDLImageLoader_1a788499c7bd31f55082dee07e37778d38" prot="public" virt="virtual"><scope>gcn::SDLImageLoader</scope><name>discard</name></member>
      <member refid="classgcn_1_1SDLImageLoader_1a1fedf352b8864a6d07256096c8b78d32" prot="public" virt="virtual"><scope>gcn::SDLImageLoader</scope><name>finalize</name></member>
      <member refid="classgcn_1_1SDLImageLoader_1a698af2a7a767d2e3255d4b3f6e7e86d6" prot="public" virt="virtual"><scope>gcn::SDLImageLoader</scope><name>free</name></member>
      <member refid="classgcn_1_1SDLImageLoader_1ad17e315e68f940dcb39ac358bce6e22e" prot="public" virt="virtual"><scope>gcn::SDLImageLoader</scope><name>getHeight</name></member>
      <member refid="classgcn_1_1SDLImageLoader_1adf260888fd0e6ec036b11ec3efc6d385" prot="public" virt="virtual"><scope>gcn::SDLImageLoader</scope><name>getPixel</name></member>
      <member refid="classgcn_1_1SDLImageLoader_1aefc8ee795479cc1834fc542854894dc2" prot="public" virt="virtual"><scope>gcn::SDLImageLoader</scope><name>getRawData</name></member>
      <member refid="classgcn_1_1SDLImageLoader_1aa91730438c3e490792a2bdf4f4d0b432" prot="public" virt="virtual"><scope>gcn::SDLImageLoader</scope><name>getWidth</name></member>
      <member refid="classgcn_1_1SDLImageLoader_1aeca575314aa60bcb406836b137709e8b" prot="protected" virt="non-virtual"><scope>gcn::SDLImageLoader</scope><name>mCurrentImage</name></member>
      <member refid="classgcn_1_1SDLImageLoader_1a3662ac487054734fae28c233f0f84aa8" prot="public" virt="virtual"><scope>gcn::SDLImageLoader</scope><name>prepare</name></member>
      <member refid="classgcn_1_1SDLImageLoader_1a52d840c7ceaf1deaaaae8a372e0033a2" prot="public" virt="virtual"><scope>gcn::SDLImageLoader</scope><name>putPixel</name></member>
      <member refid="classgcn_1_1SDLImageLoader_1a44832338e6c0ee495124ad617112f40d" prot="public" virt="non-virtual"><scope>gcn::SDLImageLoader</scope><name>SDLImageLoader</name></member>
      <member refid="classgcn_1_1ImageLoader_1a894b75f8f25ebfa9e0962c2d499ca7ba" prot="public" virt="virtual"><scope>gcn::SDLImageLoader</scope><name>~ImageLoader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
