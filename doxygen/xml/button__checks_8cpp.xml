<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="button__checks_8cpp" kind="file" language="C++">
    <compoundname>button_checks.cpp</compoundname>
    <includes refid="stratagus_8h" local="yes">stratagus.h</includes>
    <includes refid="actions_8h" local="yes">actions.h</includes>
    <includes refid="depend_8h" local="yes">depend.h</includes>
    <includes refid="interface_8h" local="yes">interface.h</includes>
    <includes refid="network_8h" local="yes">network.h</includes>
    <includes refid="player_8h" local="yes">player.h</includes>
    <includes refid="unit_8h" local="yes">unit.h</includes>
    <includes refid="unittype_8h" local="yes">unittype.h</includes>
    <includes refid="upgrade_8h" local="yes">upgrade.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="16">
        <label>upgrade_structs.h</label>
        <link refid="upgrade__structs_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="4">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>stdint.h</label>
      </node>
      <node id="9">
        <label>actions.h</label>
        <link refid="actions_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/ui/button_checks.cpp</label>
        <link refid="button__checks_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>network/netsockets.h</label>
        <link refid="netsockets_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="29">
        <label>map</label>
      </node>
      <node id="30">
        <label>upgrade.h</label>
        <link refid="upgrade_8h"/>
      </node>
      <node id="10">
        <label>unitptr.h</label>
        <link refid="unitptr_8h"/>
      </node>
      <node id="13">
        <label>interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="26">
        <label>missileconfig.h</label>
        <link refid="missileconfig_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>vector</label>
      </node>
      <node id="2">
        <label>stratagus.h</label>
        <link refid="stratagus_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>color.h</label>
        <link refid="include_2color_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>unitsound.h</label>
        <link refid="unitsound_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>icons.h</label>
        <link refid="icons_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cstdlib</label>
      </node>
      <node id="18">
        <label>network.h</label>
        <link refid="network_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>depend.h</label>
        <link refid="depend_8h"/>
      </node>
      <node id="27">
        <label>climits</label>
      </node>
      <node id="11">
        <label>vec2i.h</label>
        <link refid="vec2i_8h"/>
      </node>
      <node id="24">
        <label>unit.h</label>
        <link refid="unit_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>set</label>
      </node>
      <node id="25">
        <label>unittype.h</label>
        <link refid="unittype_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>algorithm</label>
      </node>
      <node id="31">
        <label>stdio.h</label>
      </node>
      <node id="20">
        <label>player.h</label>
        <link refid="player_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <header>button_checks.cpp - The button checks.</header>
      <memberdef kind="function" id="button__checks_8cpp_1aad29e8f23159a9d16decdaffe1c731f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckTrue</definition>
        <argsstring>(const CUnit &amp;, const ButtonAction &amp;)</argsstring>
        <name>ButtonCheckTrue</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Check is always true. </para>
        </briefdescription>
        <detaileddescription>
<para>ButtonCheck for button enabled, always true. This needed to overwrite the internal tests.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui/button_checks.cpp" line="62" column="6" bodyfile="src/ui/button_checks.cpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="button__checks_8cpp_1ad3d32ebc2372eca1f4a46ce4d77854bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckFalse</definition>
        <argsstring>(const CUnit &amp;, const ButtonAction &amp;)</argsstring>
        <name>ButtonCheckFalse</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Check is always false. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, always false. This needed to overwrite the internal tests.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui/button_checks.cpp" line="76" column="6" bodyfile="src/ui/button_checks.cpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="button__checks_8cpp_1abd22fd382cab992031dff1e06df4dd9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckUpgrade</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckUpgrade</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if allowed upgrade is ready. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if upgrade is ready.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui/button_checks.cpp" line="89" column="6" bodyfile="src/ui/button_checks.cpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="button__checks_8cpp_1a398f6153ad5c0218221f2133f58e7e9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckIndividualUpgrade</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckIndividualUpgrade</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if unit has an individual upgrade. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if unit has an individual upgrade.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui/button_checks.cpp" line="102" column="6" bodyfile="src/ui/button_checks.cpp" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="button__checks_8cpp_1a5411da00268170d1c520a8dc7c689823" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckUnitVariable</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckUnitVariable</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if unit&apos;s variables pass the condition check. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if unit&apos;s variables pass the condition check.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui/button_checks.cpp" line="115" column="6" bodyfile="src/ui/button_checks.cpp" bodystart="115" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="button__checks_8cpp_1a89abe8a9014548bc919a032c6e1a92a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckUnitsOr</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckUnitsOr</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if allowed units exists. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if any unit is available.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui/button_checks.cpp" line="181" column="6" bodyfile="src/ui/button_checks.cpp" bodystart="181" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="button__checks_8cpp_1ac30847e04a5a2387a6ce332aba51600f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckUnitsAnd</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckUnitsAnd</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if allowed units exists. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if all units are available.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui/button_checks.cpp" line="204" column="6" bodyfile="src/ui/button_checks.cpp" bodystart="204" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="button__checks_8cpp_1ad3584ad658b9f6dc5912c88e69727ddd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckUnitsNot</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckUnitsNot</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if units don&apos;t exist. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if no unit is available.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui/button_checks.cpp" line="227" column="6" bodyfile="src/ui/button_checks.cpp" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="button__checks_8cpp_1a65cda50c30eb141335d48c9cdb659518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckNetwork</definition>
        <argsstring>(const CUnit &amp;, const ButtonAction &amp;)</argsstring>
        <name>ButtonCheckNetwork</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Check if have network play. </para>
        </briefdescription>
        <detaileddescription>
<para>Check if network play is enabled.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled.</para>
</simplesect>
<simplesect kind="note"><para>: this check could also be moved into intialisation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui/button_checks.cpp" line="242" column="6" bodyfile="src/ui/button_checks.cpp" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="button__checks_8cpp_1a848d21c0f9198f1346d505b7688f4030" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckNoNetwork</definition>
        <argsstring>(const CUnit &amp;, const ButtonAction &amp;)</argsstring>
        <name>ButtonCheckNoNetwork</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Check if don&apos;t have network play. </para>
        </briefdescription>
        <detaileddescription>
<para>Check if network play is disabled.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if disabled.</para>
</simplesect>
<simplesect kind="note"><para>: this check could also be moved into intialisation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui/button_checks.cpp" line="257" column="6" bodyfile="src/ui/button_checks.cpp" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="button__checks_8cpp_1a7e15fea7c7026dfab2f6df969550844c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckNoWork</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;)</argsstring>
        <name>ButtonCheckNoWork</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Check if unit isn&apos;t working (train,upgrade,research) </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if the unit isn&apos;t working. Working is training, upgrading, researching.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui/button_checks.cpp" line="271" column="6" bodyfile="src/ui/button_checks.cpp" bodystart="271" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="button__checks_8cpp_1aaef604d14880d583d665c780450732f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckNoResearch</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;)</argsstring>
        <name>ButtonCheckNoResearch</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Check if unit isn&apos;t researching or upgrading. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if the unit isn&apos;t researching.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui/button_checks.cpp" line="287" column="6" bodyfile="src/ui/button_checks.cpp" bodystart="287" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="button__checks_8cpp_1a44c6cc7d94357b424455331813d42a9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckUpgradeTo</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckUpgradeTo</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if all requirements for an upgrade to are meet. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if all requirements for an upgrade to unit are met.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui/button_checks.cpp" line="302" column="6" bodyfile="src/ui/button_checks.cpp" bodystart="302" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="button__checks_8cpp_1aedaa60aa4133123e0a50e26d384cf582" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckAttack</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;)</argsstring>
        <name>ButtonCheckAttack</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Check if all requirements for an attack to are meet. </para>
        </briefdescription>
        <detaileddescription>
<para>Check if all requirements for an attack are met.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui/button_checks.cpp" line="318" column="6" bodyfile="src/ui/button_checks.cpp" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="button__checks_8cpp_1ad73bc148e70bc8fdeb24f0bbac389cd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckResearch</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckResearch</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if all requirements for a research are meet. </para>
        </briefdescription>
        <detaileddescription>
<para>Check if all requirements for upgrade research are met.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui/button_checks.cpp" line="331" column="6" bodyfile="src/ui/button_checks.cpp" bodystart="331" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="button__checks_8cpp_1a475382be2daecd2aacd9341f4d0315f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckSingleResearch</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckSingleResearch</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if all requirements for a single research are meet. </para>
        </briefdescription>
        <detaileddescription>
<para>Check if all requirements for upgrade research are met only one running research allowed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ui/button_checks.cpp" line="358" column="6" bodyfile="src/ui/button_checks.cpp" bodystart="358" bodyend="365"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/ui/button_checks.cpp"/>
  </compounddef>
</doxygen>
