<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="interface_8h" kind="file" language="C++">
    <compoundname>interface.h</compoundname>
    <includes refid="icons_8h" local="yes">icons.h</includes>
    <includes refid="unitsound_8h" local="yes">unitsound.h</includes>
    <includes refid="vec2i_8h" local="yes">vec2i.h</includes>
    <includes local="no">vector</includes>
    <includedby refid="action__move_8cpp" local="yes">src/action/action_move.cpp</includedby>
    <includedby refid="action__resource_8cpp" local="yes">src/action/action_resource.cpp</includedby>
    <includedby refid="actions_8cpp" local="yes">src/action/actions.cpp</includedby>
    <includedby refid="script__ai_8cpp" local="yes">src/ai/script_ai.cpp</includedby>
    <includedby refid="editloop_8cpp" local="yes">src/editor/editloop.cpp</includedby>
    <includedby refid="game_8cpp" local="yes">src/game/game.cpp</includedby>
    <includedby refid="replay_8cpp" local="yes">src/game/replay.cpp</includedby>
    <includedby refid="trigger_8cpp" local="yes">src/game/trigger.cpp</includedby>
    <includedby refid="ui_8h" local="yes">src/include/ui.h</includedby>
    <includedby refid="netconnect_8cpp" local="yes">src/network/netconnect.cpp</includedby>
    <includedby refid="network_8cpp" local="yes">src/network/network.cpp</includedby>
    <includedby refid="selection_8cpp" local="yes">src/stratagus/selection.cpp</includedby>
    <includedby refid="stratagus_8cpp" local="yes">src/stratagus/stratagus.cpp</includedby>
    <includedby refid="botpanel_8cpp" local="yes">src/ui/botpanel.cpp</includedby>
    <includedby refid="button__checks_8cpp" local="yes">src/ui/button_checks.cpp</includedby>
    <includedby refid="interface_8cpp" local="yes">src/ui/interface.cpp</includedby>
    <includedby refid="mainscr_8cpp" local="yes">src/ui/mainscr.cpp</includedby>
    <includedby refid="mouse_8cpp" local="yes">src/ui/mouse.cpp</includedby>
    <includedby refid="script__ui_8cpp" local="yes">src/ui/script_ui.cpp</includedby>
    <includedby refid="statusline_8cpp" local="yes">src/ui/statusline.cpp</includedby>
    <includedby refid="ui_8cpp" local="yes">src/ui/ui.cpp</includedby>
    <includedby refid="depend_8cpp" local="yes">src/unit/depend.cpp</includedby>
    <includedby refid="script__unit_8cpp" local="yes">src/unit/script_unit.cpp</includedby>
    <includedby refid="unit_8cpp" local="yes">src/unit/unit.cpp</includedby>
    <includedby refid="unit__draw_8cpp" local="yes">src/unit/unit_draw.cpp</includedby>
    <includedby refid="upgrade_8cpp" local="yes">src/unit/upgrade.cpp</includedby>
    <includedby refid="cursor_8cpp" local="yes">src/video/cursor.cpp</includedby>
    <includedby refid="sdl_8cpp" local="yes">src/video/sdl.cpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>upgrade_structs.h</label>
        <link refid="upgrade__structs_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="1">
        <label>src/include/interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="5">
        <label>unitsound.h</label>
        <link refid="unitsound_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>icons.h</label>
        <link refid="icons_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>vec2i.h</label>
        <link refid="vec2i_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>src/ai/script_ai.cpp</label>
        <link refid="script__ai_8cpp"/>
      </node>
      <node id="50">
        <label>src/ui/mouse.cpp</label>
        <link refid="mouse_8cpp"/>
      </node>
      <node id="66">
        <label>src/network/netconnect.cpp</label>
        <link refid="netconnect_8cpp"/>
      </node>
      <node id="33">
        <label>src/missile/missile.cpp</label>
        <link refid="missile_8cpp"/>
      </node>
      <node id="45">
        <label>src/ui/botpanel.cpp</label>
        <link refid="botpanel_8cpp"/>
      </node>
      <node id="13">
        <label>src/action/action_build.cpp</label>
        <link refid="action__build_8cpp"/>
      </node>
      <node id="52">
        <label>src/ui/script_ui.cpp</label>
        <link refid="script__ui_8cpp"/>
      </node>
      <node id="59">
        <label>src/unit/unit_draw.cpp</label>
        <link refid="unit__draw_8cpp"/>
      </node>
      <node id="31">
        <label>src/map/minimap.cpp</label>
        <link refid="minimap_8cpp"/>
      </node>
      <node id="19">
        <label>src/action/action_spellcast.cpp</label>
        <link refid="action__spellcast_8cpp"/>
      </node>
      <node id="15">
        <label>src/action/action_explore.cpp</label>
        <link refid="action__explore_8cpp"/>
      </node>
      <node id="68">
        <label>src/ui/button_checks.cpp</label>
        <link refid="button__checks_8cpp"/>
      </node>
      <node id="7">
        <label>src/game/game.cpp</label>
        <link refid="game_8cpp"/>
      </node>
      <node id="40">
        <label>src/stratagus/mainloop.cpp</label>
        <link refid="mainloop_8cpp"/>
      </node>
      <node id="49">
        <label>src/ui/mainscr.cpp</label>
        <link refid="mainscr_8cpp"/>
      </node>
      <node id="65">
        <label>build/tolua.cpp</label>
        <link refid="tolua_8cpp"/>
      </node>
      <node id="55">
        <label>src/ui/uibuttons_proc.cpp</label>
        <link refid="uibuttons__proc_8cpp"/>
      </node>
      <node id="57">
        <label>src/unit/script_unittype.cpp</label>
        <link refid="script__unittype_8cpp"/>
      </node>
      <node id="46">
        <label>src/ui/contenttype.cpp</label>
        <link refid="contenttype_8cpp"/>
      </node>
      <node id="67">
        <label>src/network/network.cpp</label>
        <link refid="network_8cpp"/>
      </node>
      <node id="35">
        <label>src/network/online_service.cpp</label>
        <link refid="online__service_8cpp"/>
      </node>
      <node id="47">
        <label>src/ui/icons.cpp</label>
        <link refid="icons_8cpp"/>
      </node>
      <node id="38">
        <label>src/sound/sound.cpp</label>
        <link refid="sound_8cpp"/>
      </node>
      <node id="34">
        <label>src/missile/missileconfig.cpp</label>
        <link refid="missileconfig_8cpp"/>
      </node>
      <node id="58">
        <label>src/unit/unit.cpp</label>
        <link refid="unit_8cpp"/>
      </node>
      <node id="63">
        <label>src/video/sdl.cpp</label>
        <link refid="sdl_8cpp"/>
      </node>
      <node id="54">
        <label>src/ui/ui.cpp</label>
        <link refid="ui_8cpp"/>
      </node>
      <node id="23">
        <label>src/animation/animation_frame.cpp</label>
        <link refid="animation__frame_8cpp"/>
      </node>
      <node id="20">
        <label>src/action/action_train.cpp</label>
        <link refid="action__train_8cpp"/>
      </node>
      <node id="29">
        <label>src/map/map_fog.cpp</label>
        <link refid="map__fog_8cpp"/>
      </node>
      <node id="1">
        <label>src/include/interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>src/stratagus/selection.cpp</label>
        <link refid="selection_8cpp"/>
      </node>
      <node id="25">
        <label>src/game/loadgame.cpp</label>
        <link refid="loadgame_8cpp"/>
      </node>
      <node id="64">
        <label>src/video/video.cpp</label>
        <link refid="video_8cpp"/>
      </node>
      <node id="70">
        <label>src/unit/script_unit.cpp</label>
        <link refid="script__unit_8cpp"/>
      </node>
      <node id="42">
        <label>src/stratagus/script.cpp</label>
        <link refid="script_8cpp"/>
      </node>
      <node id="48">
        <label>src/ui/interface.cpp</label>
        <link refid="interface_8cpp"/>
      </node>
      <node id="37">
        <label>src/particle/particlemanager.cpp</label>
        <link refid="particlemanager_8cpp"/>
      </node>
      <node id="27">
        <label>src/map/map.cpp</label>
        <link refid="map_8cpp"/>
      </node>
      <node id="53">
        <label>src/ui/statusline.cpp</label>
        <link refid="statusline_8cpp"/>
      </node>
      <node id="32">
        <label>src/map/script_map.cpp</label>
        <link refid="script__map_8cpp"/>
      </node>
      <node id="56">
        <label>src/ui/widgets.cpp</label>
        <link refid="widgets_8cpp"/>
      </node>
      <node id="17">
        <label>src/action/action_patrol.cpp</label>
        <link refid="action__patrol_8cpp"/>
      </node>
      <node id="28">
        <label>src/map/map_draw.cpp</label>
        <link refid="map__draw_8cpp"/>
      </node>
      <node id="30">
        <label>src/map/map_wall.cpp</label>
        <link refid="map__wall_8cpp"/>
      </node>
      <node id="18">
        <label>src/action/action_repair.cpp</label>
        <link refid="action__repair_8cpp"/>
      </node>
      <node id="4">
        <label>src/action/actions.cpp</label>
        <link refid="actions_8cpp"/>
      </node>
      <node id="16">
        <label>src/action/action_follow.cpp</label>
        <link refid="action__follow_8cpp"/>
      </node>
      <node id="9">
        <label>src/game/trigger.cpp</label>
        <link refid="trigger_8cpp"/>
      </node>
      <node id="2">
        <label>src/action/action_move.cpp</label>
        <link refid="action__move_8cpp"/>
      </node>
      <node id="41">
        <label>src/stratagus/player.cpp</label>
        <link refid="player_8cpp"/>
      </node>
      <node id="39">
        <label>src/stratagus/construct.cpp</label>
        <link refid="construct_8cpp"/>
      </node>
      <node id="51">
        <label>src/ui/popup.cpp</label>
        <link refid="popup_8cpp"/>
      </node>
      <node id="36">
        <label>src/particle/graphicanimation.cpp</label>
        <link refid="graphicanimation_8cpp"/>
      </node>
      <node id="44">
        <label>src/stratagus/stratagus.cpp</label>
        <link refid="stratagus_8cpp"/>
      </node>
      <node id="6">
        <label>src/editor/editloop.cpp</label>
        <link refid="editloop_8cpp"/>
      </node>
      <node id="14">
        <label>src/action/action_defend.cpp</label>
        <link refid="action__defend_8cpp"/>
      </node>
      <node id="61">
        <label>src/video/cursor.cpp</label>
        <link refid="cursor_8cpp"/>
      </node>
      <node id="24">
        <label>src/editor/edmap.cpp</label>
        <link refid="edmap_8cpp"/>
      </node>
      <node id="21">
        <label>src/action/action_unload.cpp</label>
        <link refid="action__unload_8cpp"/>
      </node>
      <node id="69">
        <label>src/unit/depend.cpp</label>
        <link refid="depend_8cpp"/>
      </node>
      <node id="71">
        <label>src/unit/upgrade.cpp</label>
        <link refid="upgrade_8cpp"/>
      </node>
      <node id="3">
        <label>src/action/action_resource.cpp</label>
        <link refid="action__resource_8cpp"/>
      </node>
      <node id="12">
        <label>src/action/action_board.cpp</label>
        <link refid="action__board_8cpp"/>
      </node>
      <node id="10">
        <label>src/include/ui.h</label>
        <link refid="ui_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>src/video/graphic.cpp</label>
        <link refid="graphic_8cpp"/>
      </node>
      <node id="11">
        <label>src/action/action_attack.cpp</label>
        <link refid="action__attack_8cpp"/>
      </node>
      <node id="8">
        <label>src/game/replay.cpp</label>
        <link refid="replay_8cpp"/>
      </node>
      <node id="22">
        <label>src/action/command.cpp</label>
        <link refid="command_8cpp"/>
      </node>
      <node id="60">
        <label>src/unit/unittype.cpp</label>
        <link refid="unittype_8cpp"/>
      </node>
      <node id="26">
        <label>src/game/savegame.cpp</label>
        <link refid="savegame_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classButtonAction" prot="public">ButtonAction</innerclass>
      <sectiondef kind="user-defined">
      <header>interface.h - The user interface header file.</header>
      <memberdef kind="define" id="interface_8h_1afa76e5f76e9a042bac4214dc50233711" prot="public" static="no">
        <name>ModifierShift</name>
        <initializer>1</initializer>
        <briefdescription>
<para>current keyboard state </para>
        </briefdescription>
        <detaileddescription>
<para>Key modifier </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="146" column="9" bodyfile="src/include/interface.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a27841f58767d4e9df1afb69fafb29202" prot="public" static="no">
        <name>ModifierControl</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="147" column="9" bodyfile="src/include/interface.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1adda0abda4c37f7f29142e391a7b4bc38" prot="public" static="no">
        <name>ModifierAlt</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="148" column="9" bodyfile="src/include/interface.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a9c9c1b4ad582786c954d28a170b146f4" prot="public" static="no">
        <name>ModifierSuper</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="149" column="9" bodyfile="src/include/interface.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a15293ae20b56ad87a301c5f9acedc09c" prot="public" static="no">
        <name>ModifierDoublePress</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="150" column="9" bodyfile="src/include/interface.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a2e078200baa62421b7b454d5963780a6" prot="public" static="no">
        <name>MouseDoubleShift</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="152" column="9" bodyfile="src/include/interface.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a5682b444fe9cbeb389b239d133dc5212" prot="public" static="no">
        <name>MouseDragShift</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="153" column="9" bodyfile="src/include/interface.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1ae66e8df0e1d4e7d65ddae15dc3f4f386" prot="public" static="no">
        <name>MouseHoldShift</name>
        <initializer>24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="154" column="9" bodyfile="src/include/interface.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a5492c8d80f7b85c411934ad5c197a8ba" prot="public" static="no">
        <name>NoButton</name>
        <initializer>0</initializer>
        <briefdescription>
<para>pressed mouse button flags </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="157" column="9" bodyfile="src/include/interface.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a88efc8b48e041ff6182b56cde95f716b" prot="public" static="no">
        <name>LeftButton</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="158" column="9" bodyfile="src/include/interface.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1af7f09690c6132d0556b4042c5df6d6cc" prot="public" static="no">
        <name>MiddleButton</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="159" column="9" bodyfile="src/include/interface.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1ad817b0e4a0b77c2b5c1d6ca35ffaaeba" prot="public" static="no">
        <name>RightButton</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="160" column="9" bodyfile="src/include/interface.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a903a4e245f90cb72ee4c1cac55e1a7dc" prot="public" static="no">
        <name>UpButton</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="162" column="9" bodyfile="src/include/interface.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a489ff15e723e1bc2a8cfa62e4e97beb2" prot="public" static="no">
        <name>DownButton</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="163" column="9" bodyfile="src/include/interface.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a4fde06c0386b2e7caa268570d0f982e7" prot="public" static="no">
        <name>LeftAndMiddleButton</name>
        <initializer>(<ref refid="interface_8h_1a88efc8b48e041ff6182b56cde95f716b" kindref="member">LeftButton</ref> | <ref refid="interface_8h_1af7f09690c6132d0556b4042c5df6d6cc" kindref="member">MiddleButton</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="165" column="9" bodyfile="src/include/interface.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1aad56eb422a60a56afa50e21c3e430847" prot="public" static="no">
        <name>LeftAndRightButton</name>
        <initializer>(<ref refid="interface_8h_1a88efc8b48e041ff6182b56cde95f716b" kindref="member">LeftButton</ref> | <ref refid="interface_8h_1ad817b0e4a0b77c2b5c1d6ca35ffaaeba" kindref="member">RightButton</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="166" column="9" bodyfile="src/include/interface.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a589caee57f6694dc71f70f5788bd1152" prot="public" static="no">
        <name>MiddleAndRightButton</name>
        <initializer>(<ref refid="interface_8h_1af7f09690c6132d0556b4042c5df6d6cc" kindref="member">MiddleButton</ref> | <ref refid="interface_8h_1ad817b0e4a0b77c2b5c1d6ca35ffaaeba" kindref="member">RightButton</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="167" column="9" bodyfile="src/include/interface.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a49aa813aad4c259f2e98385603814bd3" prot="public" static="no">
        <name>ScrollNone</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Are We Scrolling With the Keyboard ? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="186" column="9" bodyfile="src/include/interface.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a38705e11d494976a13cf4b4fea0b029b" prot="public" static="no">
        <name>ScrollUp</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="187" column="9" bodyfile="src/include/interface.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a0a75b80b7b18ebc35499a7e47bb48f52" prot="public" static="no">
        <name>ScrollDown</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="188" column="9" bodyfile="src/include/interface.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1af165a8d272acbea2668b516ca04a5cfd" prot="public" static="no">
        <name>ScrollLeft</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="189" column="9" bodyfile="src/include/interface.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a287460ac1f322281774f5b3378bb6efc" prot="public" static="no">
        <name>ScrollRight</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="190" column="9" bodyfile="src/include/interface.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a001d946d970da1084d6c26106f316473" prot="public" static="no">
        <name>ScrollLeftUp</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="191" column="9" bodyfile="src/include/interface.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a7d4b1dca30741a91ac105e2da9e2e4c2" prot="public" static="no">
        <name>ScrollLeftDown</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="192" column="9" bodyfile="src/include/interface.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1a3cb80010ea369a60632a418639d4155c" prot="public" static="no">
        <name>ScrollRightUp</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="193" column="9" bodyfile="src/include/interface.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_8h_1ab4f77f137a8b54613586b53bd30c62f4" prot="public" static="no">
        <name>ScrollRightDown</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="194" column="9" bodyfile="src/include/interface.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="enum" id="interface_8h_1ab1e545bffeca417490e53630cce95e1c" prot="public" static="no" strong="no">
        <type></type>
        <name>ButtonCmd</name>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1cac05cc0a6fea0a0e37389b41bf214fb2f" prot="public">
          <name>ButtonMove</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1ca86c6c8ca8cb7bb0b300487f31338186c" prot="public">
          <name>ButtonAttack</name>
          <briefdescription>
<para>order move </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1cae6f5c17041c91d3ac2e3d75b56fd0a1f" prot="public">
          <name>ButtonRepair</name>
          <briefdescription>
<para>order attack </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1cacb875ab671784e29aa6f91f67646257c" prot="public">
          <name>ButtonHarvest</name>
          <briefdescription>
<para>order repair </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1cae67d5a608de1cfa6eedf720a989394af" prot="public">
          <name>ButtonBuild</name>
          <briefdescription>
<para>order harvest </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1cac637964097c908a236da5c4a0339275e" prot="public">
          <name>ButtonPatrol</name>
          <briefdescription>
<para>order build </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1ca3ab44b5a65a32bf47d4936bb327ea8cd" prot="public">
          <name>ButtonExplore</name>
          <briefdescription>
<para>order patrol </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1caf2c270d287960f184308aadc6af914a2" prot="public">
          <name>ButtonAttackGround</name>
          <briefdescription>
<para>order explore </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1caf4736a414ca47012ed423fddcdc8ba5d" prot="public">
          <name>ButtonSpellCast</name>
          <briefdescription>
<para>order attack ground </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1caea5236ac24b50e7e5eecb502ab0c26a1" prot="public">
          <name>ButtonUnload</name>
          <briefdescription>
<para>order cast spell </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1ca6a050ce0c44722a6b10ace4382a7dd6e" prot="public">
          <name>ButtonStop</name>
          <briefdescription>
<para>order unload unit </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1ca7366ff7b13a4ebb7d535b4653998f513" prot="public">
          <name>ButtonButton</name>
          <briefdescription>
<para>order stop </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1ca64bf32acbf7310d6d4910ab898edd455" prot="public">
          <name>ButtonTrain</name>
          <briefdescription>
<para>choose other button set </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1ca53e4702e6fb5a4d1b91f52b0401a537b" prot="public">
          <name>ButtonStandGround</name>
          <briefdescription>
<para>order train </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1ca8b6d667c7e5da8cc8d0b3068c8774c93" prot="public">
          <name>ButtonReturn</name>
          <briefdescription>
<para>order stand ground </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1cae2e239a0e8cdfcfc3296278dc1c5e121" prot="public">
          <name>ButtonResearch</name>
          <briefdescription>
<para>order return goods </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1cad218e22abffa63c9df63e78bdb521fe5" prot="public">
          <name>ButtonUpgradeTo</name>
          <briefdescription>
<para>order reseach </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1ca5d960a574bcedda4d41a08ae820a8d9d" prot="public">
          <name>ButtonCancel</name>
          <briefdescription>
<para>order upgrade </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1cad291457fadf3df3074b04eeeaefb6372" prot="public">
          <name>ButtonCancelUpgrade</name>
          <briefdescription>
<para>cancel </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1ca3fff7b18038547c3e69be1fd78981131" prot="public">
          <name>ButtonCancelTrain</name>
          <briefdescription>
<para>cancel upgrade </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1cabdfc7401d214c457b969620c5ae18cf3" prot="public">
          <name>ButtonCancelBuild</name>
          <briefdescription>
<para>cancel training </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ab1e545bffeca417490e53630cce95e1ca5f4562bbfa0babafa58f70a1bee69193" prot="public">
          <name>ButtonCallbackAction</name>
          <briefdescription>
<para>cancel building </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Button Commands that need target selection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="59" column="15" bodyfile="src/include/interface.h" bodystart="59" bodyend="82"/>
      </memberdef>
      <memberdef kind="enum" id="interface_8h_1a8392ed5848e239cf6adf1d51e6088a53" prot="public" static="no" strong="no">
        <type></type>
        <name>_button_area_</name>
        <enumvalue id="interface_8h_1a8392ed5848e239cf6adf1d51e6088a53a0754c408079125e12bcdd900ffcf4c3b" prot="public">
          <name>ButtonAreaSelected</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a8392ed5848e239cf6adf1d51e6088a53a8ef446cf37b90f349d6b83f13999699b" prot="public">
          <name>ButtonAreaTraining</name>
          <briefdescription>
<para>Selected button. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a8392ed5848e239cf6adf1d51e6088a53ad1263b02091db19d5bdee7dc89d0f429" prot="public">
          <name>ButtonAreaUpgrading</name>
          <briefdescription>
<para>Training button. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a8392ed5848e239cf6adf1d51e6088a53ade47a30ec59b1487a3b8a095110a659d" prot="public">
          <name>ButtonAreaResearching</name>
          <briefdescription>
<para>Upgrading button. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a8392ed5848e239cf6adf1d51e6088a53a3829de6c5e447ac460e73aa5bbb59d4e" prot="public">
          <name>ButtonAreaTransporting</name>
          <briefdescription>
<para>Researching button. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a8392ed5848e239cf6adf1d51e6088a53a63ba9e62aa3a8046a86e95c7ec94c058" prot="public">
          <name>ButtonAreaButton</name>
          <briefdescription>
<para>Transporting button. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a8392ed5848e239cf6adf1d51e6088a53a3126503b171cccbc3b272aacd45d2ea0" prot="public">
          <name>ButtonAreaMenu</name>
          <briefdescription>
<para>Button panel button. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a8392ed5848e239cf6adf1d51e6088a53ac6ad92111aa90d23df414072fbb28f83" prot="public">
          <name>ButtonAreaUser</name>
          <briefdescription>
<para>Menu button. </para>
          </briefdescription>
          <detaileddescription>
<para>User buttons </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Button area under cursor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="115" column="19" bodyfile="src/include/interface.h" bodystart="115" bodyend="124"/>
      </memberdef>
      <memberdef kind="enum" id="interface_8h_1ad99338b6c8491d7543ab429b87819bea" prot="public" static="no" strong="no">
        <type></type>
        <name>_menu_button_under_</name>
        <enumvalue id="interface_8h_1ad99338b6c8491d7543ab429b87819beaa33331ce2526b60af58e71a677f4af3d8" prot="public">
          <name>ButtonUnderMenu</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ad99338b6c8491d7543ab429b87819beaa434d88e90e0edafa8399030e295f3470" prot="public">
          <name>ButtonUnderNetworkMenu</name>
          <briefdescription>
<para>Menu button. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1ad99338b6c8491d7543ab429b87819beaacf3980d641d18649a16f07fa36f85b94" prot="public">
          <name>ButtonUnderNetworkDiplomacy</name>
          <briefdescription>
<para>Network menu button. </para>
          </briefdescription>
          <detaileddescription>
<para>Diplomacy button </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Menu button under cursor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="127" column="25" bodyfile="src/include/interface.h" bodystart="127" bodyend="131"/>
      </memberdef>
      <memberdef kind="enum" id="interface_8h_1aca7eb015523e5aa61aa3ea3b9543fac0" prot="public" static="no" strong="no">
        <type></type>
        <name>_iface_state_</name>
        <enumvalue id="interface_8h_1aca7eb015523e5aa61aa3ea3b9543fac0ae0b059c0693df25f28d48952cfd0d902" prot="public">
          <name>IfaceStateNormal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1aca7eb015523e5aa61aa3ea3b9543fac0a98403d03da651d0a7671935213c6059e" prot="public">
          <name>IfaceStateMenu</name>
          <briefdescription>
<para>Normal <ref refid="classGame" kindref="compound">Game</ref> state. </para>
          </briefdescription>
          <detaileddescription>
<para>Menu active </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>current interface state </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="134" column="19" bodyfile="src/include/interface.h" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="enum" id="interface_8h_1a071a9405c10f17ee5bbeb7e302d81e1c" prot="public" static="no" strong="no">
        <type></type>
        <name>_key_state_</name>
        <enumvalue id="interface_8h_1a071a9405c10f17ee5bbeb7e302d81e1ca1b4c5e1a080af1306e17a05aa319b56a" prot="public">
          <name>KeyStateCommand</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a071a9405c10f17ee5bbeb7e302d81e1ca07c79467186e7faa38c583d22674c0cb" prot="public">
          <name>KeyStateInput</name>
          <briefdescription>
<para>keys -&gt; commands </para>
          </briefdescription>
          <detaileddescription>
<para>keys -&gt; line editor </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>current key state </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="140" column="17" bodyfile="src/include/interface.h" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="enum" id="interface_8h_1a4e0f5b7dc29d371dcdfff2891216ca7a" prot="public" static="no" strong="no">
        <type></type>
        <name>_cursor_on_</name>
        <enumvalue id="interface_8h_1a4e0f5b7dc29d371dcdfff2891216ca7aa4b380c3a0805a4a88b68b3bc1b29d414" prot="public">
          <name>CursorOnUnknown</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a4e0f5b7dc29d371dcdfff2891216ca7aa4986db94205b1c6f90f7a286086290b6" prot="public">
          <name>CursorOnMinimap</name>
          <briefdescription>
<para>not known </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a4e0f5b7dc29d371dcdfff2891216ca7aa86a12e30923ff5ad3257df19940e4fba" prot="public">
          <name>CursorOnButton</name>
          <briefdescription>
<para>minimap area </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a4e0f5b7dc29d371dcdfff2891216ca7aad3daf38681c7426f40c079b61b0fb8a9" prot="public">
          <name>CursorOnMap</name>
          <briefdescription>
<para>button area see: ButtonUnderCursor </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a4e0f5b7dc29d371dcdfff2891216ca7aadf43130ea60a9fc9c28cd03bc9f0cb5c" prot="public">
          <name>CursorOnScrollUp</name>
          <briefdescription>
<para>over map area </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a4e0f5b7dc29d371dcdfff2891216ca7aa05d2fbbf2f575452b994dc65c9c5b9e3" prot="public">
          <name>CursorOnScrollDown</name>
          <briefdescription>
<para>in scroll up area </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a4e0f5b7dc29d371dcdfff2891216ca7aabbac1d1c9e42e46a27ce87e70ef111e2" prot="public">
          <name>CursorOnScrollLeft</name>
          <briefdescription>
<para>in scroll down area </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a4e0f5b7dc29d371dcdfff2891216ca7aa850b49e85dae6ec2a08110318d079d2d" prot="public">
          <name>CursorOnScrollRight</name>
          <briefdescription>
<para>in scroll left area </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a4e0f5b7dc29d371dcdfff2891216ca7aa30f5c576d1389f861e812a5e27f3463e" prot="public">
          <name>CursorOnScrollLeftUp</name>
          <briefdescription>
<para>in scroll right area </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a4e0f5b7dc29d371dcdfff2891216ca7aa9c99c19f188e6e080f6b60db771bc6b6" prot="public">
          <name>CursorOnScrollLeftDown</name>
          <briefdescription>
<para>in scroll left+up area </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a4e0f5b7dc29d371dcdfff2891216ca7aa168ae2f5e54520cb90d4e5793442ccda" prot="public">
          <name>CursorOnScrollRightUp</name>
          <briefdescription>
<para>in scroll left+down area </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="interface_8h_1a4e0f5b7dc29d371dcdfff2891216ca7aa2a83b90e2d8d7bf571a078113ce6b6e8" prot="public">
          <name>CursorOnScrollRightDown</name>
          <briefdescription>
<para>in scroll right+up area </para>
          </briefdescription>
          <detaileddescription>
<para>in scroll right+down area </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Where is our cursor ? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="170" column="17" bodyfile="src/include/interface.h" bodystart="170" bodyend="183"/>
      </memberdef>
      <memberdef kind="typedef" id="interface_8h_1aed1420deaa5d401a88b916f82a5ababc" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* ButtonCheckFunc) (const CUnit &amp;, const ButtonAction &amp;)</definition>
        <argsstring>)(const CUnit &amp;, const ButtonAction &amp;)</argsstring>
        <name>ButtonCheckFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="85" column="9" bodyfile="src/include/interface.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1ab6e7abf903f6312a3cca83a6e8101cf6" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> * &gt;</type>
        <definition>std::vector&lt;ButtonAction *&gt; UnitButtonTable</definition>
        <argsstring></argsstring>
        <name>UnitButtonTable</name>
        <briefdescription>
<para>All buttons for units. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="199" column="20" bodyfile="src/ui/botpanel.cpp" bodystart="78" bodyend="-1" declfile="src/include/interface.h" declline="199" declcolumn="20"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a6694874111059d4663c0ac7bef4b64fc" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool GameRunning</definition>
        <argsstring></argsstring>
        <name>GameRunning</name>
        <briefdescription>
<para>Flag telling if the game is running. </para>
        </briefdescription>
        <detaileddescription>
<para>Flag telling if the game is running. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="202" column="13" bodyfile="src/ui/interface.cpp" bodystart="87" bodyend="-1" declfile="src/include/interface.h" declline="202" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1adc475a9ce73c11d2cb45757a6434909a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool GamePaused</definition>
        <argsstring></argsstring>
        <name>GamePaused</name>
        <briefdescription>
<para>Flag telling if the game is paused. </para>
        </briefdescription>
        <detaileddescription>
<para>Flag telling if the game is paused. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="204" column="13" bodyfile="src/ui/interface.cpp" bodystart="88" bodyend="-1" declfile="src/include/interface.h" declline="204" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a7b8ab0292b0cc2d62678d7e0d669b420" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool GameObserve</definition>
        <argsstring></argsstring>
        <name>GameObserve</name>
        <briefdescription>
<para>Flag telling if the game is in observe mode. </para>
        </briefdescription>
        <detaileddescription>
<para>Flag telling if the game is in observe mode. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="206" column="13" bodyfile="src/ui/interface.cpp" bodystart="89" bodyend="-1" declfile="src/include/interface.h" declline="206" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a663f17bf1d1f77a4ef3434f981aca5ee" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool GameEstablishing</definition>
        <argsstring></argsstring>
        <name>GameEstablishing</name>
        <briefdescription>
<para>Flag telling if the game is in establishing mode. </para>
        </briefdescription>
        <detaileddescription>
<para>Flag telling if the game is in establishing mode. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="208" column="13" bodyfile="src/ui/interface.cpp" bodystart="90" bodyend="-1" declfile="src/include/interface.h" declline="208" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a33b696604bbf5ab8759b0ded11f0d64f" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char SkipGameCycle</definition>
        <argsstring></argsstring>
        <name>SkipGameCycle</name>
        <briefdescription>
<para>Flag telling not to advance to the next game cycle. </para>
        </briefdescription>
        <detaileddescription>
<para>Flag telling not to advance to the next game cycle. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="210" column="13" bodyfile="src/ui/interface.cpp" bodystart="91" bodyend="-1" declfile="src/include/interface.h" declline="210" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a465c373a894c1f0e5c7a8d6d7cba4844" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool GodMode</definition>
        <argsstring></argsstring>
        <name>GodMode</name>
        <briefdescription>
<para>Invincibility cheat. </para>
        </briefdescription>
        <detaileddescription>
<para>Invincibility cheat. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="212" column="13" bodyfile="src/ui/interface.cpp" bodystart="94" bodyend="-1" declfile="src/include/interface.h" declline="212" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a72905a1737be0b97a78adaea98c81f59" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char BigMapMode</definition>
        <argsstring></argsstring>
        <name>BigMapMode</name>
        <briefdescription>
<para>Whether the map is the only thing displayed or not. </para>
        </briefdescription>
        <detaileddescription>
<para>Whether the map is the only thing displayed or not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="214" column="13" bodyfile="src/ui/interface.cpp" bodystart="92" bodyend="-1" declfile="src/include/interface.h" declline="214" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1ab22951366b3fd58931605f14004397d0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool IsSDLWindowVisible</definition>
        <argsstring></argsstring>
        <name>IsSDLWindowVisible</name>
        <briefdescription>
<para>Flag telling if the SDL window is visible. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="216" column="13" bodyfile="src/video/sdl.cpp" bodystart="106" bodyend="-1" declfile="src/include/interface.h" declline="216" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a611ba3fa0bf9b1679b44600debcea613" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int MouseButtons</definition>
        <argsstring></argsstring>
        <name>MouseButtons</name>
        <briefdescription>
<para>pressed mouse buttons (normal,double,dragged,long) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="219" column="12" bodyfile="src/ui/mouse.cpp" bodystart="73" bodyend="-1" declfile="src/include/interface.h" declline="219" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a3bb5b8445cc395196bd20bf7787c0e72" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int KeyModifiers</definition>
        <argsstring></argsstring>
        <name>KeyModifiers</name>
        <briefdescription>
<para>current active modifiers </para>
        </briefdescription>
        <detaileddescription>
<para>current active modifiers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="221" column="12" bodyfile="src/ui/mouse.cpp" bodystart="75" bodyend="-1" declfile="src/include/interface.h" declline="221" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1ad14e694bad4c466bdc242a8e0eeb9153" prot="public" static="no" mutable="no">
        <type>enum <ref refid="interface_8h_1aca7eb015523e5aa61aa3ea3b9543fac0" kindref="member">_iface_state_</ref></type>
        <definition>enum _iface_state_ InterfaceState</definition>
        <argsstring></argsstring>
        <name>InterfaceState</name>
        <briefdescription>
<para>current interface state </para>
        </briefdescription>
        <detaileddescription>
<para>current interface state </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="221" column="12" bodyfile="src/ui/interface.cpp" bodystart="93" bodyend="-1" declfile="src/include/interface.h" declline="221" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a0e5c369f7fe868bdf94faadd02263f07" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int KeyScrollState</definition>
        <argsstring></argsstring>
        <name>KeyScrollState</name>
        <briefdescription>
<para>current scroll state of keyboard </para>
        </briefdescription>
        <detaileddescription>
<para>current scroll state of keyboard </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="225" column="12" bodyfile="src/stratagus/mainloop.cpp" bodystart="63" bodyend="-1" declfile="src/include/interface.h" declline="225" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1afddc1ff39836c9e393fb6074829ba499" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int MouseScrollState</definition>
        <argsstring></argsstring>
        <name>MouseScrollState</name>
        <briefdescription>
<para>current scroll state of mouse </para>
        </briefdescription>
        <detaileddescription>
<para>current scroll state of mouse </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="227" column="12" bodyfile="src/stratagus/mainloop.cpp" bodystart="66" bodyend="-1" declfile="src/include/interface.h" declline="227" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1ae09c0175194ee2367d19c498e74f6689" prot="public" static="no" mutable="no">
        <type>enum <ref refid="interface_8h_1a071a9405c10f17ee5bbeb7e302d81e1c" kindref="member">_key_state_</ref></type>
        <definition>enum _key_state_ KeyState</definition>
        <argsstring></argsstring>
        <name>KeyState</name>
        <briefdescription>
<para>current key state </para>
        </briefdescription>
        <detaileddescription>
<para>current key state </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="227" column="12" bodyfile="src/ui/interface.cpp" bodystart="95" bodyend="-1" declfile="src/include/interface.h" declline="227" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a2d2b312b79136f11acf7fef427af6718" prot="public" static="no" mutable="no">
        <type><ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
        <definition>CUnit* UnitUnderCursor</definition>
        <argsstring></argsstring>
        <name>UnitUnderCursor</name>
        <briefdescription>
<para>shared pointer to unit under the cursor </para>
        </briefdescription>
        <detaileddescription>
<para>shared pointer to unit under the cursor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="231" column="14" bodyfile="src/ui/mouse.cpp" bodystart="77" bodyend="-1" declfile="src/include/interface.h" declline="231" declcolumn="14"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1ab56adc1f5f010e9d0d0cd167e99df218" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ButtonAreaUnderCursor</definition>
        <argsstring></argsstring>
        <name>ButtonAreaUnderCursor</name>
        <briefdescription>
<para>button area under the cursor </para>
        </briefdescription>
        <detaileddescription>
<para>button area under the cursor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="233" column="12" bodyfile="src/ui/mouse.cpp" bodystart="78" bodyend="-1" declfile="src/include/interface.h" declline="233" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a99cb018841b512cacf6dffc1ff0e9224" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ButtonUnderCursor</definition>
        <argsstring></argsstring>
        <name>ButtonUnderCursor</name>
        <briefdescription>
<para>button number under the cursor </para>
        </briefdescription>
        <detaileddescription>
<para>button number under the cursor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="235" column="12" bodyfile="src/ui/mouse.cpp" bodystart="79" bodyend="-1" declfile="src/include/interface.h" declline="235" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1af76913566295477f4de438dde7b63ec9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int OldButtonUnderCursor</definition>
        <argsstring></argsstring>
        <name>OldButtonUnderCursor</name>
        <briefdescription>
<para>oldbutton number under the cursor </para>
        </briefdescription>
        <detaileddescription>
<para>oldbutton number under the cursor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="237" column="12" bodyfile="src/ui/mouse.cpp" bodystart="80" bodyend="-1" declfile="src/include/interface.h" declline="237" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a7f63acbab0803203299378ea43429f28" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool GameMenuButtonClicked</definition>
        <argsstring></argsstring>
        <name>GameMenuButtonClicked</name>
        <briefdescription>
<para>menu button was clicked down </para>
        </briefdescription>
        <detaileddescription>
<para>menu button was clicked down </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="239" column="13" bodyfile="src/ui/mouse.cpp" bodystart="81" bodyend="-1" declfile="src/include/interface.h" declline="239" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a72da073537ffad46907ad75e321abcb6" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool GameDiplomacyButtonClicked</definition>
        <argsstring></argsstring>
        <name>GameDiplomacyButtonClicked</name>
        <briefdescription>
<para>diplomacy button was clicked down </para>
        </briefdescription>
        <detaileddescription>
<para>diplomacy button was clicked down </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="241" column="13" bodyfile="src/ui/mouse.cpp" bodystart="82" bodyend="-1" declfile="src/include/interface.h" declline="241" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1aeca423bf8f23a7241cd0b2e4e27d29b5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool LeaveStops</definition>
        <argsstring></argsstring>
        <name>LeaveStops</name>
        <briefdescription>
<para>Mouse leaves windows stops scroll. </para>
        </briefdescription>
        <detaileddescription>
<para>Mouse leaves windows stops scroll. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="243" column="13" bodyfile="src/ui/mouse.cpp" bodystart="83" bodyend="-1" declfile="src/include/interface.h" declline="243" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a8cc63cd525b0e32a4c75a02e21914baf" prot="public" static="no" mutable="no">
        <type>enum <ref refid="interface_8h_1a4e0f5b7dc29d371dcdfff2891216ca7a" kindref="member">_cursor_on_</ref></type>
        <definition>enum _cursor_on_ CursorOn</definition>
        <argsstring></argsstring>
        <name>CursorOn</name>
        <briefdescription>
<para>current CursorOn field </para>
        </briefdescription>
        <detaileddescription>
<para>current CursorOn field </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="243" column="13" bodyfile="src/ui/mouse.cpp" bodystart="85" bodyend="-1" declfile="src/include/interface.h" declline="243" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a44d90cd07656d339c3e1d6a225af9ca4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CurrentButtonLevel</definition>
        <argsstring></argsstring>
        <name>CurrentButtonLevel</name>
        <briefdescription>
<para>vladi: used for unit buttons sub-menus etc </para>
        </briefdescription>
        <detaileddescription>
<para>vladi: used for unit buttons sub-menus etc </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="248" column="12" bodyfile="src/ui/botpanel.cpp" bodystart="76" bodyend="-1" declfile="src/include/interface.h" declline="248" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a9ed32a530405e55cc829ead1c22cbb80" prot="public" static="no" mutable="no">
        <type><ref refid="classButtonAction" kindref="compound">ButtonAction</ref> *</type>
        <definition>ButtonAction* LastDrawnButtonPopup</definition>
        <argsstring></argsstring>
        <name>LastDrawnButtonPopup</name>
        <briefdescription>
<para>Last drawn popup : used to speed up drawing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="250" column="21" bodyfile="src/ui/botpanel.cpp" bodystart="74" bodyend="-1" declfile="src/include/interface.h" declline="250" declcolumn="21"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a63a4744000a9f992b3db3dbc298d28f4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int DoubleClickDelay</definition>
        <argsstring></argsstring>
        <name>DoubleClickDelay</name>
        <briefdescription>
<para>Time to detect double clicks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="253" column="12" bodyfile="src/ui/interface.cpp" bodystart="1336" bodyend="-1" declfile="src/include/interface.h" declline="253" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="interface_8h_1a7a9d83f064bc2ed1388edae991ac8528" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HoldClickDelay</definition>
        <argsstring></argsstring>
        <name>HoldClickDelay</name>
        <briefdescription>
<para>Time to detect hold clicks. </para>
        </briefdescription>
        <detaileddescription>
<para>Time to detect hold clicks. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="255" column="12" bodyfile="src/ui/interface.cpp" bodystart="1337" bodyend="-1" declfile="src/include/interface.h" declline="255" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1ae3f55baf077016a522e041ed7e601721" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
        <definition>CUnit* GetUnitUnderCursor</definition>
        <argsstring>()</argsstring>
        <name>GetUnitUnderCursor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="261" column="14" bodyfile="src/ui/mouse.cpp" bodystart="92" bodyend="95" declfile="src/include/interface.h" declline="261" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1af40dade0ff6434fa616e16f769cd8413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InitButtons</definition>
        <argsstring>()</argsstring>
        <name>InitButtons</name>
        <briefdescription>
<para>Generate all buttons. </para>
        </briefdescription>
        <detaileddescription>
<para>Initialize the buttons. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="267" column="13" bodyfile="src/ui/botpanel.cpp" bodystart="89" bodyend="96" declfile="src/include/interface.h" declline="267" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a0cc84859d5528048d5b5dc57f06b94ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CleanButtons</definition>
        <argsstring>()</argsstring>
        <name>CleanButtons</name>
        <briefdescription>
<para>Free memory for buttons. </para>
        </briefdescription>
        <detaileddescription>
<para>Cleanup buttons. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="269" column="13" bodyfile="src/ui/botpanel.cpp" bodystart="192" bodyend="203" declfile="src/include/interface.h" declline="269" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a1b137d78efcffbcaa7edfa2622522e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AddButton</definition>
        <argsstring>(int pos, int level, const std::string &amp;IconIdent, ButtonCmd action, const std::string &amp;value, void *payload, const ButtonCheckFunc func, const std::string &amp;arg, const int key, const std::string &amp;hint, const std::string &amp;descr, const std::string &amp;sound, const std::string &amp;cursor, const std::string &amp;umask, const std::string &amp;popup, bool alwaysShow)</argsstring>
        <name>AddButton</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>IconIdent</declname>
          <defname>icon_ident</defname>
        </param>
        <param>
          <type><ref refid="interface_8h_1ab1e545bffeca417490e53630cce95e1c" kindref="member">ButtonCmd</ref></type>
          <declname>action</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref> *</type>
          <declname>payload</declname>
          <defname>actionCb</defname>
        </param>
        <param>
          <type>const <ref refid="interface_8h_1aed1420deaa5d401a88b916f82a5ababc" kindref="member">ButtonCheckFunc</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>arg</declname>
          <defname>allow</defname>
        </param>
        <param>
          <type>const int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>hint</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>descr</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>sound</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>cursor</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>umask</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>popup</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alwaysShow</declname>
        </param>
        <briefdescription>
<para>Make a new button. </para>
        </briefdescription>
        <detaileddescription>
<para>FIXME: docu </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="271" column="12" bodyfile="src/ui/botpanel.cpp" bodystart="105" bodyend="186" declfile="src/include/interface.h" declline="271" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1aa29694adb09753b0364f1308e175430e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsButtonAllowed</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;buttonaction)</argsstring>
        <name>IsButtonAllowed</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>buttonaction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the button is allowed for the unit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>unit which checks for allow. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buttonaction</parametername>
</parameternamelist>
<parameterdescription>
<para>button to check if it is allowed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if button is allowed, 0 else.</para>
</simplesect>
<xrefsect id="todo_1_todo000070"><xreftitle>Todo</xreftitle><xrefdescription><para>FIXME: better check. (dependency, resource, ...) </para>
<para>FIXME: make difference with impossible and not yet researched. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="277" column="13" bodyfile="src/ui/botpanel.cpp" bodystart="865" bodyend="955" declfile="src/include/interface.h" declline="277" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a57c795baffe6835ac59b691d1af3bf92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void HandleButtonDown</definition>
        <argsstring>(unsigned button)</argsstring>
        <name>HandleButtonDown</name>
        <param>
          <type>unsigned</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Called if any mouse button is pressed down. </para>
        </briefdescription>
        <detaileddescription>
<para>Called if mouse button pressed down.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Mouse button number (0 left, 1 middle, 2 right) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="283" column="13" bodyfile="src/ui/interface.cpp" bodystart="1314" bodyend="1317" declfile="src/include/interface.h" declline="283" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1ae384b43578507e888b327513459501ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void HandleButtonUp</definition>
        <argsstring>(unsigned button)</argsstring>
        <name>HandleButtonUp</name>
        <param>
          <type>unsigned</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Called if any mouse button is released up. </para>
        </briefdescription>
        <detaileddescription>
<para>Called if mouse button released.</para>
<para><xrefsect id="todo_1_todo000078"><xreftitle>Todo</xreftitle><xrefdescription><para>FIXME: the mouse handling should be complete rewritten </para>
<para>FIXME: this is needed for double click, long click,...</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Mouse button number (0 left, 1 middle, 2 right) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="285" column="13" bodyfile="src/ui/interface.cpp" bodystart="1327" bodyend="1330" declfile="src/include/interface.h" declline="285" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a7ad488e54ac8469edfc5c73e59bbba18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void HandleCursorMove</definition>
        <argsstring>(int *x, int *y)</argsstring>
        <name>HandleCursorMove</name>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Keep coordinates in window and update cursor position. </para>
        </briefdescription>
        <detaileddescription>
<para>Keep coordinates in window and update cursor position</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>screen pixel X position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>screen pixel Y position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="287" column="13" bodyfile="src/ui/interface.cpp" bodystart="1288" bodyend="1295" declfile="src/include/interface.h" declline="287" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a4839aa1157e0ae854659d82d189ea812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void HandleMouseMove</definition>
        <argsstring>(const PixelPos &amp;pos)</argsstring>
        <name>HandleMouseMove</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a20cc8627b3e52515a26778e489bda2ae" kindref="member">PixelPos</ref> &amp;</type>
          <declname>pos</declname>
          <defname>screenPos</defname>
        </param>
        <briefdescription>
<para>Called if the mouse is moved. </para>
        </briefdescription>
        <detaileddescription>
<para>Handle movement of the cursor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>screePos</parametername>
</parameternamelist>
<parameterdescription>
<para>screen pixel position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="289" column="13" bodyfile="src/ui/interface.cpp" bodystart="1302" bodyend="1307" declfile="src/include/interface.h" declline="289" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1abcfc2a52a65db35e1e16c0139e534692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void HandleMouseExit</definition>
        <argsstring>()</argsstring>
        <name>HandleMouseExit</name>
        <briefdescription>
<para>Called if the mouse exits the game window (only for some videomodes) </para>
        </briefdescription>
        <detaileddescription>
<para>Handle cursor exits the game window (only for some videomodes) <xrefsect id="todo_1_todo000083"><xreftitle>Todo</xreftitle><xrefdescription><para>FIXME: make it so that the game is partially &apos;paused&apos;. <ref refid="classGame" kindref="compound">Game</ref> should run (for network play), but not react on or show interactive events. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="291" column="13" bodyfile="src/ui/mouse.cpp" bodystart="858" bodyend="875" declfile="src/include/interface.h" declline="291" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a1dfdad3ae82c5829bf168295f53561ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HandleKeyModifiersDown</definition>
        <argsstring>(unsigned keycode, unsigned keychar)</argsstring>
        <name>HandleKeyModifiersDown</name>
        <param>
          <type>unsigned</type>
          <declname>keycode</declname>
          <defname>key</defname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>keychar</declname>
        </param>
        <briefdescription>
<para>Update KeyModifiers if a key is pressed. </para>
        </briefdescription>
        <detaileddescription>
<para>Update KeyModifiers if a key is pressed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Key scancode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keychar</parametername>
</parameternamelist>
<parameterdescription>
<para>Character code.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if modifier found, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="294" column="12" bodyfile="src/ui/interface.cpp" bodystart="1043" bodyend="1077" declfile="src/include/interface.h" declline="294" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a2f19dfe8ac20ef10eac134d21fdf8f20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HandleKeyModifiersUp</definition>
        <argsstring>(unsigned keycode, unsigned keychar)</argsstring>
        <name>HandleKeyModifiersUp</name>
        <param>
          <type>unsigned</type>
          <declname>keycode</declname>
          <defname>key</defname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>keychar</declname>
        </param>
        <briefdescription>
<para>Update KeyModifiers if a key is released. </para>
        </briefdescription>
        <detaileddescription>
<para>Update KeyModifiers if a key is released.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Key scancode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keychar</parametername>
</parameternamelist>
<parameterdescription>
<para>Character code.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if modifier found, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="296" column="12" bodyfile="src/ui/interface.cpp" bodystart="1087" bodyend="1112" declfile="src/include/interface.h" declline="296" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a56c2696e0f4caf9945566c25e61df24f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void HandleKeyDown</definition>
        <argsstring>(unsigned keycode, unsigned keychar)</argsstring>
        <name>HandleKeyDown</name>
        <param>
          <type>unsigned</type>
          <declname>keycode</declname>
          <defname>key</defname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>keychar</declname>
        </param>
        <briefdescription>
<para>Called if a key is pressed. </para>
        </briefdescription>
        <detaileddescription>
<para>Handle key down.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Key scancode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keychar</parametername>
</parameternamelist>
<parameterdescription>
<para>Character code. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="299" column="13" bodyfile="src/ui/interface.cpp" bodystart="1150" bodyend="1180" declfile="src/include/interface.h" declline="299" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1ad91052ebb407825b81d9a08aec60a350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void HandleKeyUp</definition>
        <argsstring>(unsigned keycode, unsigned keychar)</argsstring>
        <name>HandleKeyUp</name>
        <param>
          <type>unsigned</type>
          <declname>keycode</declname>
          <defname>key</defname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>keychar</declname>
        </param>
        <briefdescription>
<para>Called when a key is released. </para>
        </briefdescription>
        <detaileddescription>
<para>Handle key up.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Key scancode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keychar</parametername>
</parameternamelist>
<parameterdescription>
<para>Character code. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="301" column="13" bodyfile="src/ui/interface.cpp" bodystart="1188" bodyend="1214" declfile="src/include/interface.h" declline="301" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a9901a123d50a4be2e38867a27f33f44e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void HandleKeyRepeat</definition>
        <argsstring>(unsigned keycode, unsigned keychar)</argsstring>
        <name>HandleKeyRepeat</name>
        <param>
          <type>unsigned</type>
          <declname>keycode</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>keychar</declname>
        </param>
        <briefdescription>
<para>Called when a key is repeated. </para>
        </briefdescription>
        <detaileddescription>
<para>Handle key up.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Key scancode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keychar</parametername>
</parameternamelist>
<parameterdescription>
<para>Character code. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="303" column="13" bodyfile="src/ui/interface.cpp" bodystart="1222" bodyend="1227" declfile="src/include/interface.h" declline="303" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1ad8d07e86d7c4265f74674a2ab5fc6794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InputMouseButtonPress</definition>
        <argsstring>(const EventCallback &amp;callbacks, unsigned ticks, unsigned button)</argsstring>
        <name>InputMouseButtonPress</name>
        <param>
          <type>const <ref refid="structEventCallback" kindref="compound">EventCallback</ref> &amp;</type>
          <declname>callbacks</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>ticks</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Called if any mouse button is pressed down. </para>
        </briefdescription>
        <detaileddescription>
<para>Called if any mouse button is pressed down.</para>
<para>Called if any mouse button is pressed down</para>
<para>Handles event conversion to double click, dragging, hold.</para>
<para>FIXME: dragging is not supported.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback structure for events. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>Denotes time-stamp of video-system </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Mouse button pressed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="309" column="13" bodyfile="src/ui/interface.cpp" bodystart="1360" bodyend="1380" declfile="src/include/interface.h" declline="309" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1afe0a816143fec88e9b0b9f11f16a60ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InputMouseButtonRelease</definition>
        <argsstring>(const EventCallback &amp;callbacks, unsigned ticks, unsigned button)</argsstring>
        <name>InputMouseButtonRelease</name>
        <param>
          <type>const <ref refid="structEventCallback" kindref="compound">EventCallback</ref> &amp;</type>
          <declname>callbacks</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>ticks</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Called if any mouse button is released up. </para>
        </briefdescription>
        <detaileddescription>
<para>Called if any mouse button is released up</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback structure for events. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>Denotes time-stamp of video-system </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Mouse button released. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="311" column="13" bodyfile="src/ui/interface.cpp" bodystart="1389" bodyend="1414" declfile="src/include/interface.h" declline="311" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1aca14a9e5229d4b4a4eee510894459b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InputMouseMove</definition>
        <argsstring>(const EventCallback &amp;callbacks, unsigned ticks, int x, int y)</argsstring>
        <name>InputMouseMove</name>
        <param>
          <type>const <ref refid="structEventCallback" kindref="compound">EventCallback</ref> &amp;</type>
          <declname>callbacks</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>ticks</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Called if the mouse is moved. </para>
        </briefdescription>
        <detaileddescription>
<para>Called if the mouse is moved</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback structure for events. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>Denotes time-stamp of video-system </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X movement </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y movement </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="313" column="13" bodyfile="src/ui/interface.cpp" bodystart="1424" bodyend="1435" declfile="src/include/interface.h" declline="313" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a603e7ea0282f85ed439eda5fde9322cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InputMouseExit</definition>
        <argsstring>(const EventCallback &amp;callbacks, unsigned ticks)</argsstring>
        <name>InputMouseExit</name>
        <param>
          <type>const <ref refid="structEventCallback" kindref="compound">EventCallback</ref> &amp;</type>
          <declname>callbacks</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
<para>Called if the mouse exits the game window (when supported by videomode) </para>
        </briefdescription>
        <detaileddescription>
<para>Called if the mouse exits the game window (when supported by videomode)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback structure for events. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>Denotes time-stamp of video-system </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="315" column="13" bodyfile="src/ui/interface.cpp" bodystart="1443" bodyend="1448" declfile="src/include/interface.h" declline="315" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a902906855278194ced8a7979e9a1938c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InputMouseTimeout</definition>
        <argsstring>(const EventCallback &amp;callbacks, unsigned ticks)</argsstring>
        <name>InputMouseTimeout</name>
        <param>
          <type>const <ref refid="structEventCallback" kindref="compound">EventCallback</ref> &amp;</type>
          <declname>callbacks</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
<para>Called to look for mouse timeouts. </para>
        </briefdescription>
        <detaileddescription>
<para>Called each frame to handle mouse timeouts.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback structure for events. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>Denotes time-stamp of video-system </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="317" column="13" bodyfile="src/ui/interface.cpp" bodystart="1456" bodyend="1468" declfile="src/include/interface.h" declline="317" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a3d78df70d9d2e8b762e7bd08f75bd9cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InputKeyButtonPress</definition>
        <argsstring>(const EventCallback &amp;callbacks, unsigned ticks, unsigned ikey, unsigned ikeychar)</argsstring>
        <name>InputKeyButtonPress</name>
        <param>
          <type>const <ref refid="structEventCallback" kindref="compound">EventCallback</ref> &amp;</type>
          <declname>callbacks</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>ticks</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>ikey</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>ikeychar</declname>
        </param>
        <briefdescription>
<para>Called if any key button is pressed down. </para>
        </briefdescription>
        <detaileddescription>
<para>Called if any key button is pressed down.</para>
<para>Handle keyboard key press.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback structure for events. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>Denotes time-stamp of video-system </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ikey</parametername>
</parameternamelist>
<parameterdescription>
<para>Key scancode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ikeychar</parametername>
</parameternamelist>
<parameterdescription>
<para>Character code. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="320" column="13" bodyfile="src/ui/interface.cpp" bodystart="1487" bodyend="1499" declfile="src/include/interface.h" declline="320" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a9a365a5225adba09e2d24840e6ebe4f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InputKeyButtonRelease</definition>
        <argsstring>(const EventCallback &amp;callbacks, unsigned ticks, unsigned ikey, unsigned ikeychar)</argsstring>
        <name>InputKeyButtonRelease</name>
        <param>
          <type>const <ref refid="structEventCallback" kindref="compound">EventCallback</ref> &amp;</type>
          <declname>callbacks</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>ticks</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>ikey</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>ikeychar</declname>
        </param>
        <briefdescription>
<para>Called if any key button is released up. </para>
        </briefdescription>
        <detaileddescription>
<para>Handle keyboard key release.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback structure for events. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>Denotes time-stamp of video-system </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ikey</parametername>
</parameternamelist>
<parameterdescription>
<para>Key scancode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ikeychar</parametername>
</parameternamelist>
<parameterdescription>
<para>Character code. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="322" column="13" bodyfile="src/ui/interface.cpp" bodystart="1509" bodyend="1517" declfile="src/include/interface.h" declline="322" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a5b466927ab4de4464e13aa74a60992d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InputKeyTimeout</definition>
        <argsstring>(const EventCallback &amp;callbacks, unsigned ticks)</argsstring>
        <name>InputKeyTimeout</name>
        <param>
          <type>const <ref refid="structEventCallback" kindref="compound">EventCallback</ref> &amp;</type>
          <declname>callbacks</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
<para>Called to look for key timeouts. </para>
        </briefdescription>
        <detaileddescription>
<para>Called each frame to handle keyboard timeouts.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback structure for events. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>Denotes time-stamp of video-system </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="324" column="13" bodyfile="src/ui/interface.cpp" bodystart="1525" bodyend="1531" declfile="src/include/interface.h" declline="324" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a2da2d8b722958af7ae36b70bcd456e9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetDoubleClickDelay</definition>
        <argsstring>()</argsstring>
        <name>GetDoubleClickDelay</name>
        <briefdescription>
<para>Get double click delay. </para>
        </briefdescription>
        <detaileddescription>
<para>Get double click delay </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="327" column="12" bodyfile="src/ui/interface.cpp" bodystart="1536" bodyend="1539" declfile="src/include/interface.h" declline="327" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1aad03833af6c0c679c139369a1848d0d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void SetDoubleClickDelay</definition>
        <argsstring>(int delay)</argsstring>
        <name>SetDoubleClickDelay</name>
        <param>
          <type>int</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
<para>Set double click delay. </para>
        </briefdescription>
        <detaileddescription>
<para>Set double click delay</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>Double click delay </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="329" column="13" bodyfile="src/ui/interface.cpp" bodystart="1546" bodyend="1549" declfile="src/include/interface.h" declline="329" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a043dd75eb6ba3c4151b95f24b13cc076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetHoldClickDelay</definition>
        <argsstring>()</argsstring>
        <name>GetHoldClickDelay</name>
        <briefdescription>
<para>Get hold click delay. </para>
        </briefdescription>
        <detaileddescription>
<para>Get hold click delay </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="331" column="12" bodyfile="src/ui/interface.cpp" bodystart="1554" bodyend="1557" declfile="src/include/interface.h" declline="331" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a103d61b3cb27db8ed0dd2e50316b796b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void SetHoldClickDelay</definition>
        <argsstring>(int delay)</argsstring>
        <name>SetHoldClickDelay</name>
        <param>
          <type>int</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
<para>Set hold click delay. </para>
        </briefdescription>
        <detaileddescription>
<para>Set hold click delay</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>Hold click delay </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="333" column="13" bodyfile="src/ui/interface.cpp" bodystart="1564" bodyend="1567" declfile="src/include/interface.h" declline="333" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1aacca40237cf7a5acf8c0b1b41f03833f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UiTogglePause</definition>
        <argsstring>()</argsstring>
        <name>UiTogglePause</name>
        <briefdescription>
<para>Toggle pause mode. </para>
        </briefdescription>
        <detaileddescription>
<para>Toggle pause on / off. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="336" column="13" bodyfile="src/ui/interface.cpp" bodystart="297" bodyend="307" declfile="src/include/interface.h" declline="336" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a08238939e042df34416af000acfcb58c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UiToggleBigMap</definition>
        <argsstring>()</argsstring>
        <name>UiToggleBigMap</name>
        <briefdescription>
<para>Toggle big map. </para>
        </briefdescription>
        <detaileddescription>
<para>Toggle big map mode.</para>
<para><xrefsect id="todo_1_todo000076"><xreftitle>Todo</xreftitle><xrefdescription><para>FIXME: We should try to keep the same view, if possible </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="338" column="13" bodyfile="src/ui/interface.cpp" bodystart="314" bodyend="346" declfile="src/include/interface.h" declline="338" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a42d0c0c6dbeb4e237c61eb42ec053182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UiToggleTerrain</definition>
        <argsstring>()</argsstring>
        <name>UiToggleTerrain</name>
        <briefdescription>
<para>Toggle terrain display on/off. </para>
        </briefdescription>
        <detaileddescription>
<para>Toggle terrain display on/off. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="340" column="13" bodyfile="src/ui/interface.cpp" bodystart="437" bodyend="445" declfile="src/include/interface.h" declline="340" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a12a8f9fd408426d5fe99d6242ad4afb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UiFindIdleWorker</definition>
        <argsstring>()</argsstring>
        <name>UiFindIdleWorker</name>
        <briefdescription>
<para>Find the next idle worker. </para>
        </briefdescription>
        <detaileddescription>
<para>Find the next idle worker, select it, and center on it </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="342" column="13" bodyfile="src/ui/interface.cpp" bodystart="450" bodyend="478" declfile="src/include/interface.h" declline="342" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a96c3ec66a8745192d94c996a7982bed4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UiTrackUnit</definition>
        <argsstring>()</argsstring>
        <name>UiTrackUnit</name>
        <briefdescription>
<para>Track unit, the viewport follows the unit. </para>
        </briefdescription>
        <detaileddescription>
<para>Track unit, the viewport follows the unit. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="344" column="13" bodyfile="src/ui/interface.cpp" bodystart="493" bodyend="505" declfile="src/include/interface.h" declline="344" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1aa8ddd56266dbafe8cd8f731de173384e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HandleCheats</definition>
        <argsstring>(const std::string &amp;input)</argsstring>
        <name>HandleCheats</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Handle cheats. </para>
        </briefdescription>
        <detaileddescription>
<para>Handle cheats</para>
<para><simplesect kind="return"><para>1 if a cheat was handled, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="347" column="12" bodyfile="src/ui/interface.cpp" bodystart="768" bodyend="810" declfile="src/include/interface.h" declline="347" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1aca348e5be60fcf7746973c727bc7c4ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool HandleCommandKey</definition>
        <argsstring>(int key)</argsstring>
        <name>HandleCommandKey</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Call the lua function HandleCommandKey. </para>
        </briefdescription>
        <detaileddescription>
<para>Call the lua function HandleCommandKey </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="350" column="6" bodyfile="src/ui/interface.cpp" bodystart="510" bodyend="532" declfile="src/include/interface.h" declline="350" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a19bffb8758bf20715b8c1b3d383c260d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CancelBuildingMode</definition>
        <argsstring>()</argsstring>
        <name>CancelBuildingMode</name>
        <briefdescription>
<para>Cancel the building input mode. </para>
        </briefdescription>
        <detaileddescription>
<para>Cancel building cursor mode. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="356" column="13" bodyfile="src/ui/mouse.cpp" bodystart="100" bodyend="107" declfile="src/include/interface.h" declline="356" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a9010f35752857076b7da578579e7fec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void DrawMenuButtonArea</definition>
        <argsstring>()</argsstring>
        <name>DrawMenuButtonArea</name>
        <briefdescription>
<para>Draw menu button area. </para>
        </briefdescription>
        <detaileddescription>
<para>Draw menu button area. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="359" column="13" bodyfile="src/ui/mainscr.cpp" bodystart="111" bodyend="118" declfile="src/include/interface.h" declline="359" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a3153bfcc776483a9f8ba088cb30b73d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void DrawUserDefinedButtons</definition>
        <argsstring>()</argsstring>
        <name>DrawUserDefinedButtons</name>
        <briefdescription>
<para>Draw user defined buttons. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="361" column="13" bodyfile="src/ui/mainscr.cpp" bodystart="120" bodyend="134" declfile="src/include/interface.h" declline="361" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a73225ab91b93b772f5dd7878889f1773" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UpdateMessages</definition>
        <argsstring>()</argsstring>
        <name>UpdateMessages</name>
        <briefdescription>
<para>Update messages. </para>
        </briefdescription>
        <detaileddescription>
<para>Update messages </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="363" column="13" bodyfile="src/ui/mainscr.cpp" bodystart="927" bodyend="930" declfile="src/include/interface.h" declline="363" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1aaadf113c5dac5f3418a97046745b76b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void DrawMessages</definition>
        <argsstring>()</argsstring>
        <name>DrawMessages</name>
        <briefdescription>
<para>Draw messages as overlay over of the map. </para>
        </briefdescription>
        <detaileddescription>
<para>Draw messages </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="365" column="13" bodyfile="src/ui/mainscr.cpp" bodystart="943" bodyend="946" declfile="src/include/interface.h" declline="365" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1ab3ce35232d456098d6f5c58260910419" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void DrawResources</definition>
        <argsstring>()</argsstring>
        <name>DrawResources</name>
        <briefdescription>
<para>Draw the player resource in resource line. </para>
        </briefdescription>
        <detaileddescription>
<para>Draw the player resource in top line.</para>
<para><xrefsect id="todo_1_todo000079"><xreftitle>Todo</xreftitle><xrefdescription><para>FIXME : make DrawResources more configurable (format, font). </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="367" column="13" bodyfile="src/ui/mainscr.cpp" bodystart="576" bodyend="627" declfile="src/include/interface.h" declline="367" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1afa7fbeb7d6753d8f894e3761c66d93fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void SetMessage</definition>
        <argsstring>(const char *fmt,...) PRINTF_VAARG_ATTRIBUTE(1</argsstring>
        <name>SetMessage</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Set message to display. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="369" column="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a904170ad4164a108a5636c8b882c143d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref> <ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void void SetMessageEvent</definition>
        <argsstring>(const Vec2i &amp;pos, const char *fmt,...) PRINTF_VAARG_ATTRIBUTE(2</argsstring>
        <name>SetMessageEvent</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Set message to display with event point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="371" column="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1ac134d8805ffbff57bd1a8c963b831d2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref> <ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref> <ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void void void CenterOnMessage</definition>
        <argsstring>()</argsstring>
        <name>CenterOnMessage</name>
        <briefdescription>
<para>Center view-point on last event message. </para>
        </briefdescription>
        <detaileddescription>
<para>Goto message origin. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="373" column="13" bodyfile="src/ui/mainscr.cpp" bodystart="1014" bodyend="1026" declfile="src/include/interface.h" declline="373" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a825093882a032be58901b4e2bdc807f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CleanMessages</definition>
        <argsstring>()</argsstring>
        <name>CleanMessages</name>
        <briefdescription>
<para>Cleanup all messages. </para>
        </briefdescription>
        <detaileddescription>
<para>Clean messages </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="375" column="13" bodyfile="src/ui/mainscr.cpp" bodystart="935" bodyend="938" declfile="src/include/interface.h" declline="375" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a837493d74c6dc75391508ea7ef0c4362" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void ToggleShowMessages</definition>
        <argsstring>()</argsstring>
        <name>ToggleShowMessages</name>
        <briefdescription>
<para>show/hide messages </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="377" column="13" bodyfile="src/ui/mainscr.cpp" bodystart="1028" bodyend="1031" declfile="src/include/interface.h" declline="377" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a321308ac4607c034a6fce5fe4c21755e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void DrawTimer</definition>
        <argsstring>()</argsstring>
        <name>DrawTimer</name>
        <briefdescription>
<para>Draw the timer. </para>
        </briefdescription>
        <detaileddescription>
<para>Draw the timer</para>
<para><xrefsect id="todo_1_todo000082"><xreftitle>Todo</xreftitle><xrefdescription><para>FIXME : make DrawTimer more configurable (Pos, format). </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="380" column="13" bodyfile="src/ui/mainscr.cpp" bodystart="1190" bodyend="1198" declfile="src/include/interface.h" declline="380" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1ae178df4c21a790e2f58257d74912bbf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UpdateTimer</definition>
        <argsstring>()</argsstring>
        <name>UpdateTimer</name>
        <briefdescription>
<para>Update the timer. </para>
        </briefdescription>
        <detaileddescription>
<para>Update the timer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="382" column="13" bodyfile="src/ui/mainscr.cpp" bodystart="1203" bodyend="1214" declfile="src/include/interface.h" declline="382" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1af086f6d76ecd1f762ac869dbe8026371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UpdateStatusLineForButton</definition>
        <argsstring>(const ButtonAction &amp;button)</argsstring>
        <name>UpdateStatusLineForButton</name>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Update the status line with hints from the button. </para>
        </briefdescription>
        <detaileddescription>
<para>Update the status line with hints from the button</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Button </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="384" column="13" bodyfile="src/ui/botpanel.cpp" bodystart="827" bodyend="849" declfile="src/include/interface.h" declline="384" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1aebaf012ba39486bbd00e21510a4b2b92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void DrawPieMenu</definition>
        <argsstring>()</argsstring>
        <name>DrawPieMenu</name>
        <briefdescription>
<para>Draw the Pie Menu. </para>
        </briefdescription>
        <detaileddescription>
<para>Draw Pie Menu </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="386" column="13" bodyfile="src/ui/mouse.cpp" bodystart="2166" bodyend="2235" declfile="src/include/interface.h" declline="386" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a723454c5a760644b1428df6585e35073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void DrawPopup</definition>
        <argsstring>(const ButtonAction &amp;button, const CUIButton &amp;uibutton, int x=0, int y=0)</argsstring>
        <name>DrawPopup</name>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <param>
          <type>const <ref refid="classCUIButton" kindref="compound">CUIButton</ref> &amp;</type>
          <declname>uibutton</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draw the button popup. </para>
        </briefdescription>
        <detaileddescription>
<para>Draw popup </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="388" column="13" bodyfile="src/ui/botpanel.cpp" bodystart="548" bodyend="728" declfile="src/include/interface.h" declline="388" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1ab9f0a7aec9c694128fdf81fc3c15321a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool HandleMouseScrollArea</definition>
        <argsstring>(const PixelPos &amp;mousePos)</argsstring>
        <name>HandleMouseScrollArea</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a20cc8627b3e52515a26778e489bda2ae" kindref="member">PixelPos</ref> &amp;</type>
          <declname>mousePos</declname>
        </param>
        <briefdescription>
<para>Handle the mouse in scroll area. </para>
        </briefdescription>
        <detaileddescription>
<para>Handle the mouse in scroll area</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mousePos</parametername>
</parameternamelist>
<parameterdescription>
<para>Screen position.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the mouse is in the scroll area, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="391" column="13" bodyfile="src/ui/interface.cpp" bodystart="1236" bodyend="1280" declfile="src/include/interface.h" declline="391" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a516f2282410bfa0c7339e008b72664cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckTrue</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckTrue</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check is always true. </para>
        </briefdescription>
        <detaileddescription>
<para>ButtonCheck for button enabled, always true. This needed to overwrite the internal tests.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="397" column="13" bodyfile="src/ui/button_checks.cpp" bodystart="62" bodyend="65" declfile="src/include/interface.h" declline="397" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a8307a7c36341d98cdafd088aca56a9c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckFalse</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckFalse</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check is always false. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, always false. This needed to overwrite the internal tests.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="399" column="13" bodyfile="src/ui/button_checks.cpp" bodystart="76" bodyend="79" declfile="src/include/interface.h" declline="399" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1abd22fd382cab992031dff1e06df4dd9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckUpgrade</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckUpgrade</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if allowed upgrade is ready. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if upgrade is ready.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="401" column="13" bodyfile="src/ui/button_checks.cpp" bodystart="89" bodyend="92" declfile="src/include/interface.h" declline="401" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a398f6153ad5c0218221f2133f58e7e9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckIndividualUpgrade</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckIndividualUpgrade</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if unit has an individual upgrade. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if unit has an individual upgrade.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="403" column="13" bodyfile="src/ui/button_checks.cpp" bodystart="102" bodyend="105" declfile="src/include/interface.h" declline="403" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a5411da00268170d1c520a8dc7c689823" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckUnitVariable</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckUnitVariable</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if unit&apos;s variables pass the condition check. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if unit&apos;s variables pass the condition check.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="405" column="13" bodyfile="src/ui/button_checks.cpp" bodystart="115" bodyend="171" declfile="src/include/interface.h" declline="405" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a89abe8a9014548bc919a032c6e1a92a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckUnitsOr</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckUnitsOr</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if allowed units exists. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if any unit is available.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="407" column="13" bodyfile="src/ui/button_checks.cpp" bodystart="181" bodyend="194" declfile="src/include/interface.h" declline="407" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1ac30847e04a5a2387a6ce332aba51600f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckUnitsAnd</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckUnitsAnd</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if allowed units exists. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if all units are available.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="409" column="13" bodyfile="src/ui/button_checks.cpp" bodystart="204" bodyend="217" declfile="src/include/interface.h" declline="409" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1ad3584ad658b9f6dc5912c88e69727ddd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckUnitsNot</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckUnitsNot</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if units don&apos;t exist. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if no unit is available.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="411" column="13" bodyfile="src/ui/button_checks.cpp" bodystart="227" bodyend="230" declfile="src/include/interface.h" declline="411" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a964e60a582e08eb32d90a6fb2902f942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckNetwork</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckNetwork</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if have network play. </para>
        </briefdescription>
        <detaileddescription>
<para>Check if network play is enabled.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled.</para>
</simplesect>
<simplesect kind="note"><para>: this check could also be moved into intialisation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="413" column="13" bodyfile="src/ui/button_checks.cpp" bodystart="242" bodyend="245" declfile="src/include/interface.h" declline="413" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a1bf02641f6473e3324b4af852c096ddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckNoNetwork</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckNoNetwork</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if don&apos;t have network play. </para>
        </briefdescription>
        <detaileddescription>
<para>Check if network play is disabled.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if disabled.</para>
</simplesect>
<simplesect kind="note"><para>: this check could also be moved into intialisation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="415" column="13" bodyfile="src/ui/button_checks.cpp" bodystart="257" bodyend="260" declfile="src/include/interface.h" declline="415" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a512161b5d8d644bb7647cbfceaeaf3ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckNoWork</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckNoWork</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if unit isn&apos;t working (train,upgrade,research) </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if the unit isn&apos;t working. Working is training, upgrading, researching.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="417" column="13" bodyfile="src/ui/button_checks.cpp" bodystart="271" bodyend="277" declfile="src/include/interface.h" declline="417" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a95b93355393a8753977590be342d2bb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckNoResearch</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckNoResearch</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if unit isn&apos;t researching or upgrading. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if the unit isn&apos;t researching.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="419" column="13" bodyfile="src/ui/button_checks.cpp" bodystart="287" bodyend="291" declfile="src/include/interface.h" declline="419" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a2c3f7d30f3cc366beaae00a8a46fd394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckAttack</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckAttack</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if all requirements for an attack to are meet. </para>
        </briefdescription>
        <detaileddescription>
<para>Check if all requirements for an attack are met.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="421" column="13" bodyfile="src/ui/button_checks.cpp" bodystart="318" bodyend="321" declfile="src/include/interface.h" declline="421" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a44c6cc7d94357b424455331813d42a9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckUpgradeTo</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckUpgradeTo</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if all requirements for an upgrade to are meet. </para>
        </briefdescription>
        <detaileddescription>
<para>Check for button enabled, if all requirements for an upgrade to unit are met.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="423" column="13" bodyfile="src/ui/button_checks.cpp" bodystart="302" bodyend="308" declfile="src/include/interface.h" declline="423" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1ad73bc148e70bc8fdeb24f0bbac389cd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckResearch</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckResearch</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if all requirements for a research are meet. </para>
        </briefdescription>
        <detaileddescription>
<para>Check if all requirements for upgrade research are met.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="425" column="13" bodyfile="src/ui/button_checks.cpp" bodystart="331" bodyend="347" declfile="src/include/interface.h" declline="425" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a475382be2daecd2aacd9341f4d0315f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ButtonCheckSingleResearch</definition>
        <argsstring>(const CUnit &amp;unit, const ButtonAction &amp;button)</argsstring>
        <name>ButtonCheckSingleResearch</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classButtonAction" kindref="compound">ButtonAction</ref> &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Check if all requirements for a single research are meet. </para>
        </briefdescription>
        <detaileddescription>
<para>Check if all requirements for upgrade research are met only one running research allowed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit for button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to button to check/enable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="427" column="13" bodyfile="src/ui/button_checks.cpp" bodystart="358" bodyend="365" declfile="src/include/interface.h" declline="427" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a13461428545f624dfc015d1168105c85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void SelectionChanged</definition>
        <argsstring>()</argsstring>
        <name>SelectionChanged</name>
        <briefdescription>
<para>Called whenever the units selection is altered. </para>
        </briefdescription>
        <detaileddescription>
<para>Run the set-selection-changed-hook. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="433" column="13" bodyfile="src/ui/script_ui.cpp" bodystart="1096" bodyend="1109" declfile="src/include/interface.h" declline="433" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a02de97a476575ea24a9798c92af9bf1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void SelectedUnitChanged</definition>
        <argsstring>()</argsstring>
        <name>SelectedUnitChanged</name>
        <briefdescription>
<para>Called whenever the selected unit was updated. </para>
        </briefdescription>
        <detaileddescription>
<para>The selected unit has been altered. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="435" column="13" bodyfile="src/ui/script_ui.cpp" bodystart="1114" bodyend="1117" declfile="src/include/interface.h" declline="435" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a3f7e23e5ab775a66d5ed940c2308d807" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void SetGamePaused</definition>
        <argsstring>(bool paused)</argsstring>
        <name>SetGamePaused</name>
        <param>
          <type>bool</type>
          <declname>paused</declname>
        </param>
        <briefdescription>
<para>Set the game paused or unpaused. </para>
        </briefdescription>
        <detaileddescription>
<para>Set the game paused or unpaused</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paused</parametername>
</parameternamelist>
<parameterdescription>
<para>True to pause game, false to unpause. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="441" column="13" bodyfile="src/game/game.cpp" bodystart="581" bodyend="584" declfile="src/include/interface.h" declline="441" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1aac9227c653b803821860484f25ee6ef3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GetGamePaused</definition>
        <argsstring>()</argsstring>
        <name>GetGamePaused</name>
        <briefdescription>
<para>Get the game paused or unpaused. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the game paused or unpaused</para>
<para><simplesect kind="return"><para>True if the game is paused, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="443" column="13" bodyfile="src/game/game.cpp" bodystart="591" bodyend="594" declfile="src/include/interface.h" declline="443" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a1e9cca9ef2842a5465572691cf38d688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void SetGameSpeed</definition>
        <argsstring>(int speed)</argsstring>
        <name>SetGameSpeed</name>
        <param>
          <type>int</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
<para>Set the game speed. </para>
        </briefdescription>
        <detaileddescription>
<para>Set the game speed</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>New game speed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="445" column="13" bodyfile="src/game/game.cpp" bodystart="601" bodyend="607" declfile="src/include/interface.h" declline="445" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a197eff5eca05b81bbb33b50b6d86501d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetGameSpeed</definition>
        <argsstring>()</argsstring>
        <name>GetGameSpeed</name>
        <briefdescription>
<para>Get the game speed. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the game speed</para>
<para><simplesect kind="return"><para><ref refid="classGame" kindref="compound">Game</ref> speed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/interface.h" line="447" column="12" bodyfile="src/game/game.cpp" bodystart="614" bodyend="617" declfile="src/include/interface.h" declline="447" declcolumn="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/include/interface.h"/>
  </compounddef>
</doxygen>
