<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacegcn" kind="namespace" language="C++">
    <compoundname>gcn</compoundname>
    <innerclass refid="classgcn_1_1ActionListener" prot="public">gcn::ActionListener</innerclass>
    <innerclass refid="classgcn_1_1BasicContainer" prot="public">gcn::BasicContainer</innerclass>
    <innerclass refid="classgcn_1_1Button" prot="public">gcn::Button</innerclass>
    <innerclass refid="classgcn_1_1CheckBox" prot="public">gcn::CheckBox</innerclass>
    <innerclass refid="classgcn_1_1ClipRectangle" prot="public">gcn::ClipRectangle</innerclass>
    <innerclass refid="classgcn_1_1Color" prot="public">gcn::Color</innerclass>
    <innerclass refid="classgcn_1_1Container" prot="public">gcn::Container</innerclass>
    <innerclass refid="classgcn_1_1DefaultFont" prot="public">gcn::DefaultFont</innerclass>
    <innerclass refid="classgcn_1_1DropDown" prot="public">gcn::DropDown</innerclass>
    <innerclass refid="classgcn_1_1Exception" prot="public">gcn::Exception</innerclass>
    <innerclass refid="classgcn_1_1FocusHandler" prot="public">gcn::FocusHandler</innerclass>
    <innerclass refid="classgcn_1_1Font" prot="public">gcn::Font</innerclass>
    <innerclass refid="classgcn_1_1Graphics" prot="public">gcn::Graphics</innerclass>
    <innerclass refid="classgcn_1_1Gui" prot="public">gcn::Gui</innerclass>
    <innerclass refid="classgcn_1_1Icon" prot="public">gcn::Icon</innerclass>
    <innerclass refid="classgcn_1_1Image" prot="public">gcn::Image</innerclass>
    <innerclass refid="classgcn_1_1ImageFont" prot="public">gcn::ImageFont</innerclass>
    <innerclass refid="classgcn_1_1ImageLoader" prot="public">gcn::ImageLoader</innerclass>
    <innerclass refid="classgcn_1_1Input" prot="public">gcn::Input</innerclass>
    <innerclass refid="classgcn_1_1Key" prot="public">gcn::Key</innerclass>
    <innerclass refid="classgcn_1_1KeyInput" prot="public">gcn::KeyInput</innerclass>
    <innerclass refid="classgcn_1_1KeyListener" prot="public">gcn::KeyListener</innerclass>
    <innerclass refid="classgcn_1_1Label" prot="public">gcn::Label</innerclass>
    <innerclass refid="classgcn_1_1ListBox" prot="public">gcn::ListBox</innerclass>
    <innerclass refid="classgcn_1_1ListModel" prot="public">gcn::ListModel</innerclass>
    <innerclass refid="classgcn_1_1MouseInput" prot="public">gcn::MouseInput</innerclass>
    <innerclass refid="classgcn_1_1MouseListener" prot="public">gcn::MouseListener</innerclass>
    <innerclass refid="classgcn_1_1RadioButton" prot="public">gcn::RadioButton</innerclass>
    <innerclass refid="classgcn_1_1Rectangle" prot="public">gcn::Rectangle</innerclass>
    <innerclass refid="classgcn_1_1ScrollArea" prot="public">gcn::ScrollArea</innerclass>
    <innerclass refid="classgcn_1_1SDLGraphics" prot="public">gcn::SDLGraphics</innerclass>
    <innerclass refid="classgcn_1_1SDLImageLoader" prot="public">gcn::SDLImageLoader</innerclass>
    <innerclass refid="classgcn_1_1SDLInput" prot="public">gcn::SDLInput</innerclass>
    <innerclass refid="classgcn_1_1Slider" prot="public">gcn::Slider</innerclass>
    <innerclass refid="classgcn_1_1TextBox" prot="public">gcn::TextBox</innerclass>
    <innerclass refid="classgcn_1_1TextField" prot="public">gcn::TextField</innerclass>
    <innerclass refid="classgcn_1_1Widget" prot="public">gcn::Widget</innerclass>
    <innerclass refid="classgcn_1_1Window" prot="public">gcn::Window</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacegcn_1a28d03f3ed79200d5e3aeee3f9c4e175b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int gcn::GetNext</definition>
        <argsstring>(const std::string &amp;text, int curpos)</argsstring>
        <name>GetNext</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>curpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/gfont.cpp" line="64" column="12" bodyfile="src/guichan/gfont.cpp" bodystart="64" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespacegcn_1a4e1ef14affd39f2f4325b0893b3b3a4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classgcn_1_1Color" kindref="compound">Color</ref></type>
        <definition>const Color gcn::SDLgetPixel</definition>
        <argsstring>(SDL_Surface *surface, int x, int y)</argsstring>
        <name>SDLgetPixel</name>
        <param>
          <type>SDL_Surface *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks a pixels color of an SDL_Surface.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>an SDL_Surface where to check for a pixel color. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x coordinate on the surface. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y coordinate on the surface. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a color of a pixel. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlpixel.h" line="73" column="24" bodyfile="src/guichan/include/guichan/sdl/sdlpixel.h" bodystart="73" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="namespacegcn_1a43658ef0f8e93653cc817e1b5bd0b2c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void gcn::SDLputPixel</definition>
        <argsstring>(SDL_Surface *surface, int x, int y, const Color &amp;color)</argsstring>
        <name>SDLputPixel</name>
        <param>
          <type>SDL_Surface *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="classgcn_1_1Color" kindref="compound">Color</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Puts a pixel on an SDL_Surface. <verbatim>@param surface an SDL_Surface to put the pixel on
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x coordinate on the surface. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y coordinate on the surface. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>the color the pixel should be in. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlpixel.h" line="126" column="17" bodyfile="src/guichan/include/guichan/sdl/sdlpixel.h" bodystart="126" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="namespacegcn_1a45a2879dd883dc476dac703521fb98f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int gcn::SDLAlpha16</definition>
        <argsstring>(unsigned int src, unsigned int dst, unsigned char a)</argsstring>
        <name>SDLAlpha16</name>
        <param>
          <type>unsigned int</type>
          <declname>src</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Blends two 16 bit colors together.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>the source color. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the destination color. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>alpha. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlpixel.h" line="176" column="25" bodyfile="src/guichan/include/guichan/sdl/sdlpixel.h" bodystart="176" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="namespacegcn_1ab4a102528188828a2297ffcc9d394ecf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int gcn::SDLAlpha32</definition>
        <argsstring>(unsigned int src, unsigned int dst, unsigned char a)</argsstring>
        <name>SDLAlpha32</name>
        <param>
          <type>unsigned int</type>
          <declname>src</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Blends two 32 bit colors together.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>the source color. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the destination color. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>alpha. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlpixel.h" line="194" column="25" bodyfile="src/guichan/include/guichan/sdl/sdlpixel.h" bodystart="194" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="namespacegcn_1a7717edeb6d1a21751918c6c74fdf8272" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void gcn::SDLputPixelAlpha</definition>
        <argsstring>(SDL_Surface *surface, int x, int y, const Color &amp;color)</argsstring>
        <name>SDLputPixelAlpha</name>
        <param>
          <type>SDL_Surface *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="classgcn_1_1Color" kindref="compound">Color</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Puts a pixel on an SDL_Surface with alpha <verbatim>@param surface an SDL_Surface to put the pixel on
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x coordinate on the surface. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y coordinate on the surface. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>the color the pixel should be in. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/include/guichan/sdl/sdlpixel.h" line="217" column="17" bodyfile="src/guichan/include/guichan/sdl/sdlpixel.h" bodystart="217" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="namespacegcn_1a54084e668221330f387d5bf3e7c75c64" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int gcn::FindNext</definition>
        <argsstring>(const std::string &amp;text, int curpos)</argsstring>
        <name>FindNext</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>curpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/guichan/widgets/textbox.cpp" line="205" column="12" bodyfile="src/guichan/widgets/textbox.cpp" bodystart="205" bodyend="215"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/guichan/cliprectangle.cpp" line="62" column="1"/>
  </compounddef>
</doxygen>
