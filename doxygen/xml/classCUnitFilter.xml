<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classCUnitFilter" kind="class" language="C++" prot="public">
    <compoundname>CUnitFilter</compoundname>
    <derivedcompoundref refid="classAndPredicate" prot="public" virt="non-virtual">AndPredicate&lt; Pred1, Pred2 &gt;</derivedcompoundref>
    <derivedcompoundref refid="classHasNotSamePlayerAs" prot="public" virt="non-virtual">HasNotSamePlayerAs</derivedcompoundref>
    <derivedcompoundref refid="classHasSamePlayerAndTypeAs" prot="public" virt="non-virtual">HasSamePlayerAndTypeAs</derivedcompoundref>
    <derivedcompoundref refid="classHasSamePlayerAs" prot="public" virt="non-virtual">HasSamePlayerAs</derivedcompoundref>
    <derivedcompoundref refid="classHasSameTypeAs" prot="public" virt="non-virtual">HasSameTypeAs</derivedcompoundref>
    <derivedcompoundref refid="classIsAggresiveUnit" prot="public" virt="non-virtual">IsAggresiveUnit</derivedcompoundref>
    <derivedcompoundref refid="classIsAlliedWith" prot="public" virt="non-virtual">IsAlliedWith</derivedcompoundref>
    <derivedcompoundref refid="classIsBuildingType" prot="public" virt="non-virtual">IsBuildingType</derivedcompoundref>
    <derivedcompoundref refid="classIsEnemyWith" prot="public" virt="non-virtual">IsEnemyWith</derivedcompoundref>
    <derivedcompoundref refid="classIsNotTheSameUnitAs" prot="public" virt="non-virtual">IsNotTheSameUnitAs</derivedcompoundref>
    <derivedcompoundref refid="classNoFilter" prot="public" virt="non-virtual">NoFilter</derivedcompoundref>
    <derivedcompoundref refid="classNotPredicate" prot="public" virt="non-virtual">NotPredicate&lt; Pred &gt;</derivedcompoundref>
    <derivedcompoundref refid="classOutOfMinRange" prot="public" virt="non-virtual">OutOfMinRange</derivedcompoundref>
    <includes refid="unit__find_8h" local="no">unit_find.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCUnitFilter_1a221344cdf7709ba55d94a33d0fa7cc7e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CUnitFilter::operator()</definition>
        <argsstring>(const CUnit *unit) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/unit_find.h" line="52" column="6" bodyfile="src/include/unit_find.h" bodystart="52" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="11">
        <label>IsNotTheSameUnitAs</label>
        <link refid="classIsNotTheSameUnitAs"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>OutOfMinRange</label>
        <link refid="classOutOfMinRange"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>HasSameTypeAs</label>
        <link refid="classHasSameTypeAs"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>AndPredicate&lt; Pred1, Pred2 &gt;</label>
        <link refid="classAndPredicate"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>HasSamePlayerAndTypeAs</label>
        <link refid="classHasSamePlayerAndTypeAs"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>IsEnemyWith</label>
        <link refid="classIsEnemyWith"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>NotPredicate&lt; Pred &gt;</label>
        <link refid="classNotPredicate"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>HasNotSamePlayerAs</label>
        <link refid="classHasNotSamePlayerAs"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>IsBuildingType</label>
        <link refid="classIsBuildingType"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>IsAlliedWith</label>
        <link refid="classIsAlliedWith"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>NoFilter</label>
        <link refid="classNoFilter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>CUnitFilter</label>
        <link refid="classCUnitFilter"/>
      </node>
      <node id="5">
        <label>HasSamePlayerAs</label>
        <link refid="classHasSamePlayerAs"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>IsAggresiveUnit</label>
        <link refid="classIsAggresiveUnit"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/include/unit_find.h" line="50" column="1" bodyfile="src/include/unit_find.h" bodystart="49" bodyend="53"/>
    <listofallmembers>
      <member refid="classCUnitFilter_1a221344cdf7709ba55d94a33d0fa7cc7e" prot="public" virt="non-virtual"><scope>CUnitFilter</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
