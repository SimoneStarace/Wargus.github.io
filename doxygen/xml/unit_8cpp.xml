<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="unit_8cpp" kind="file" language="C++">
    <compoundname>unit.cpp</compoundname>
    <includes refid="stratagus_8h" local="yes">stratagus.h</includes>
    <includes refid="unit_8h" local="yes">unit.h</includes>
    <includes refid="action__attack_8h" local="yes">action/action_attack.h</includes>
    <includes refid="actions_8h" local="yes">actions.h</includes>
    <includes refid="ai_8h" local="yes">ai.h</includes>
    <includes refid="animation_8h" local="yes">animation.h</includes>
    <includes refid="commands_8h" local="yes">commands.h</includes>
    <includes refid="construct_8h" local="yes">construct.h</includes>
    <includes refid="game_8h" local="yes">game.h</includes>
    <includes refid="editor_8h" local="yes">editor.h</includes>
    <includes refid="interface_8h" local="yes">interface.h</includes>
    <includes refid="luacallback_8h" local="yes">luacallback.h</includes>
    <includes refid="map_8h" local="yes">map.h</includes>
    <includes refid="missile_8h" local="yes">missile.h</includes>
    <includes refid="network_8h" local="yes">network.h</includes>
    <includes refid="pathfinder_8h" local="yes">pathfinder.h</includes>
    <includes refid="player_8h" local="yes">player.h</includes>
    <includes refid="script_8h" local="yes">script.h</includes>
    <includes refid="settings_8h" local="yes">settings.h</includes>
    <includes refid="sound_8h" local="yes">sound.h</includes>
    <includes refid="sound__server_8h" local="yes">sound_server.h</includes>
    <includes refid="spells_8h" local="yes">spells.h</includes>
    <includes refid="tileset_8h" local="yes">tileset.h</includes>
    <includes refid="translate_8h" local="yes">translate.h</includes>
    <includes refid="ui_8h" local="yes">ui.h</includes>
    <includes refid="unit__find_8h" local="yes">unit_find.h</includes>
    <includes refid="unit__manager_8h" local="yes">unit_manager.h</includes>
    <includes refid="unitsound_8h" local="yes">unitsound.h</includes>
    <includes refid="unittype_8h" local="yes">unittype.h</includes>
    <includes refid="upgrade_8h" local="yes">upgrade.h</includes>
    <includes refid="video_8h" local="yes">video.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="65">
        <label>list</label>
      </node>
      <node id="12">
        <label>upgrade_structs.h</label>
        <link refid="upgrade__structs_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>guichan/widgets/label.h</label>
        <link refid="label_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>editor.h</label>
        <link refid="editor_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>queue</label>
      </node>
      <node id="52">
        <label>SDL_mixer.h</label>
      </node>
      <node id="27">
        <label>ai.h</label>
        <link refid="ai_8h"/>
      </node>
      <node id="67">
        <label>video.h</label>
        <link refid="video_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>game.h</label>
        <link refid="game_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>guichan/widgets/textfield.h</label>
        <link refid="textfield_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>guichan/widgets/textbox.h</label>
        <link refid="textbox_8h"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>guichan/font.h</label>
        <link refid="guichan_2include_2guichan_2font_8h"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>translate.h</label>
        <link refid="translate_8h"/>
      </node>
      <node id="51">
        <label>SDL.h</label>
      </node>
      <node id="62">
        <label>ui/uitimer.h</label>
        <link refid="uitimer_8h"/>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="4">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>guichan/exception.h</label>
        <link refid="exception_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>lua.h</label>
      </node>
      <node id="17">
        <label>stdint.h</label>
      </node>
      <node id="36">
        <label>variant</label>
      </node>
      <node id="97">
        <label>guichan/widgets/dropdown.h</label>
        <link refid="dropdown_8h"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>actions.h</label>
        <link refid="actions_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>unit_manager.h</label>
        <link refid="unit__manager_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>pathfinder.h</label>
        <link refid="pathfinder_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>guichan/widgets/window.h</label>
        <link refid="window_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>network/netsockets.h</label>
        <link refid="netsockets_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="49">
        <label>settings.h</label>
        <link refid="settings_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>guichan/widgets/icon.h</label>
        <link refid="icon_8h"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>guichan/imagefont.h</label>
        <link refid="imagefont_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>guichan/platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="59">
        <label>minimap.h</label>
        <link refid="minimap_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="54">
        <label>spells.h</label>
        <link refid="spells_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>animation.h</label>
        <link refid="animation_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>map</label>
      </node>
      <node id="1">
        <label>src/unit/unit.cpp</label>
        <link refid="unit_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>guichan/defaultfont.h</label>
        <link refid="defaultfont_8h"/>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>guichan.h</label>
        <link refid="guichan_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>upgrade.h</label>
        <link refid="upgrade_8h"/>
      </node>
      <node id="99">
        <label>guichan/widgets/scrollarea.h</label>
        <link refid="scrollarea_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>guichan/rectangle.h</label>
        <link refid="rectangle_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>ui/statusline.h</label>
        <link refid="statusline_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>unitptr.h</label>
        <link refid="unitptr_8h"/>
      </node>
      <node id="78">
        <label>guichan/imageloader.h</label>
        <link refid="imageloader_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>guichan/mouseinput.h</label>
        <link refid="mouseinput_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>action/action_attack.h</label>
        <link refid="action__attack_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>guichan/mouselistener.h</label>
        <link refid="mouselistener_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>viewport.h</label>
        <link refid="viewport_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>libmng.h</label>
      </node>
      <node id="39">
        <label>unit_cache.h</label>
        <link refid="unit__cache_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>guichan/widgets/checkbox.h</label>
        <link refid="checkbox_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>guichan/listmodel.h</label>
        <link refid="listmodel_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>lauxlib.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="74">
        <label>guichan/cliprectangle.h</label>
        <link refid="cliprectangle_8h"/>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>guichan/graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>missileconfig.h</label>
        <link refid="missileconfig_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>ctime</label>
      </node>
      <node id="50">
        <label>sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>guichan/focushandler.h</label>
        <link refid="focushandler_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>guichan/key.h</label>
        <link refid="key_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>guichan/input.h</label>
        <link refid="input_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>luacallback.h</label>
        <link refid="luacallback_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>guichan/color.h</label>
        <link refid="guichan_2include_2guichan_2color_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>stack</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="96">
        <label>guichan/basiccontainer.h</label>
        <link refid="basiccontainer_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>guichan/gui.h</label>
        <link refid="gui_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>utility</label>
      </node>
      <node id="2">
        <label>stratagus.h</label>
        <link refid="stratagus_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>guichan/widgets/slider.h</label>
        <link refid="slider_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>construct.h</label>
        <link refid="construct_8h"/>
      </node>
      <node id="16">
        <label>color.h</label>
        <link refid="include_2color_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>unitsound.h</label>
        <link refid="unitsound_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>missile.h</label>
        <link refid="missile_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>guichan/keyinput.h</label>
        <link refid="keyinput_8h"/>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>guichan/widgets/radiobutton.h</label>
        <link refid="radiobutton_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>math.h</label>
      </node>
      <node id="14">
        <label>icons.h</label>
        <link refid="icons_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cstdlib</label>
      </node>
      <node id="45">
        <label>network.h</label>
        <link refid="network_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>climits</label>
      </node>
      <node id="37">
        <label>map.h</label>
        <link refid="map_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>shaders.h</label>
        <link refid="shaders_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>guichan/image.h</label>
        <link refid="image_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>guichan/widgets/button.h</label>
        <link refid="button_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>vec2i.h</label>
        <link refid="vec2i_8h"/>
      </node>
      <node id="86">
        <label>guichan/keylistener.h</label>
        <link refid="keylistener_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>unit.h</label>
        <link refid="unit_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>guichan/widgets/container.h</label>
        <link refid="container_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>tileset.h</label>
        <link refid="tileset_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>tile.h</label>
        <link refid="tile_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>ui.h</label>
        <link refid="ui_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>unit_find.h</label>
        <link refid="unit__find_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>set</label>
      </node>
      <node id="81">
        <label>guichan/widget.h</label>
        <link refid="widget_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>unittype.h</label>
        <link refid="unittype_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>algorithm</label>
      </node>
      <node id="58">
        <label>cursor.h</label>
        <link refid="cursor_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>guichan/widgets/listbox.h</label>
        <link refid="listbox_8h"/>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>guichan/actionlistener.h</label>
        <link refid="actionlistener_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>player.h</label>
        <link refid="player_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>lualib.h</label>
      </node>
      <node id="29">
        <label>commands.h</label>
        <link refid="commands_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>sound_server.h</label>
        <link refid="sound__server_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class__UnmarkUnitFieldFlags" prot="public">_UnmarkUnitFieldFlags</innerclass>
      <sectiondef kind="user-defined">
      <header>unit.cpp - The units.</header>
      <memberdef kind="enum" id="unit_8cpp_1ae8a3b6a5d0d3244ed73924ab2421a0d0" prot="public" static="no" strong="no">
        <type></type>
        <name>@48</name>
        <enumvalue id="unit_8cpp_1ae8a3b6a5d0d3244ed73924ab2421a0d0afcee38a85875c3a8630234d31f3fdaef" prot="public">
          <name>W_NORTH</name>
          <initializer>= 0x10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unit_8cpp_1ae8a3b6a5d0d3244ed73924ab2421a0d0ab88f07adf084e1d1252a28e77a6df77f" prot="public">
          <name>W_WEST</name>
          <initializer>= 0x20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unit_8cpp_1ae8a3b6a5d0d3244ed73924ab2421a0d0abc9d0531c8cc1fceb16d19f5e968a6bf" prot="public">
          <name>W_SOUTH</name>
          <initializer>= 0x40</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unit_8cpp_1ae8a3b6a5d0d3244ed73924ab2421a0d0af64860aabdd741c6b4f8511a0acf7822" prot="public">
          <name>W_EAST</name>
          <initializer>= 0x80</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1458" column="6" bodyfile="src/unit/unit.cpp" bodystart="1458" bodyend="1463"/>
      </memberdef>
      <memberdef kind="variable" id="unit_8cpp_1a08ee3fb48ffd6c2030335fb7b347d612" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool EnableTrainingQueue</definition>
        <argsstring></argsstring>
        <name>EnableTrainingQueue</name>
        <briefdescription>
<para>Show unit&apos;s name for some time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="357" column="6" bodyfile="src/unit/unit.cpp" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unit_8cpp_1a8912340f3509ab4e851e52a3eefdd172" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool EnableBuildingCapture</definition>
        <argsstring></argsstring>
        <name>EnableBuildingCapture</name>
        <briefdescription>
<para>Config: training queues enabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="358" column="6" bodyfile="src/unit/unit.cpp" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unit_8cpp_1ae8232999a75d23b538a95b0ad1f06594" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool RevealAttacker</definition>
        <argsstring></argsstring>
        <name>RevealAttacker</name>
        <briefdescription>
<para>Config: capture buildings enabled. </para>
        </briefdescription>
        <detaileddescription>
<para>Config: building capture enabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="359" column="6" bodyfile="src/unit/unit.cpp" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unit_8cpp_1adbe892cf4aae7983a751d5eeab793f6f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ResourcesMultiBuildersMultiplier</definition>
        <argsstring></argsstring>
        <name>ResourcesMultiBuildersMultiplier</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Config: reveal attacker enabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="360" column="5" bodyfile="src/unit/unit.cpp" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unit_8cpp_1afdf49e23c38fb2e487dbba5fec0c3775" prot="public" static="yes" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long HelpMeLastCycle</definition>
        <argsstring></argsstring>
        <name>HelpMeLastCycle</name>
        <briefdescription>
<para>Config: spend resources for building with multiple workers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="362" column="22" bodyfile="src/unit/unit.cpp" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unit_8cpp_1a4c4e268cb2fa4940fc6ff1e1f3216586" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int HelpMeLastX</definition>
        <argsstring></argsstring>
        <name>HelpMeLastX</name>
        <briefdescription>
<para>Last cycle HelpMe sound played. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="363" column="12" bodyfile="src/unit/unit.cpp" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unit_8cpp_1aa1a4d22c14d936a8f3ee30b70825ee24" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int HelpMeLastY</definition>
        <argsstring></argsstring>
        <name>HelpMeLastY</name>
        <briefdescription>
<para>Last X coordinate HelpMe sound played. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="364" column="12" bodyfile="src/unit/unit.cpp" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1adf7e382644e1d19e74873a363fba14ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void RemoveUnitFromContainer</definition>
        <argsstring>(CUnit &amp;unit)</argsstring>
        <name>RemoveUnitFromContainer</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Last Y coordinate HelpMe sound played. </para>
        </briefdescription>
        <detaileddescription>
<para>Remove unit from a container. It only updates linked list stuff.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1030" column="13" bodyfile="src/unit/unit.cpp" bodystart="1030" bodyend="1047" declfile="src/unit/unit.cpp" declline="371" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a79971a3a2db1f99fab2f78b17601aabb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ExtraDeathIndex</definition>
        <argsstring>(const char *death)</argsstring>
        <name>ExtraDeathIndex</name>
        <param>
          <type>const char *</type>
          <declname>death</declname>
        </param>
        <briefdescription>
<para>Get the suitable animation frame depends of unit&apos;s damaged type. </para>
        </briefdescription>
        <detaileddescription>
<para>Find the index of a extra death type </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="373" column="12" bodyfile="src/unit/script_unittype.cpp" bodystart="213" bodyend="221" declfile="src/unit/unit.cpp" declline="373" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a18ed9f239b77457a095002ace105dfd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
        <definition>CUnit* MakeUnit</definition>
        <argsstring>(const CUnitType &amp;type, CPlayer *player)</argsstring>
        <name>MakeUnit</name>
        <param>
          <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="classCPlayer" kindref="compound">CPlayer</ref> *</type>
          <declname>player</declname>
        </param>
        <briefdescription>
<para>Create a new unit. </para>
        </briefdescription>
        <detaileddescription>
<para>Create a new unit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit-type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to owning player.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to created unit. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="764" column="7" bodyfile="src/unit/unit.cpp" bodystart="764" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a6e67ff87c996eeeba762b12d2eb0e422" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void MapMarkUnitSightRec</definition>
        <argsstring>(const CUnit &amp;unit, const Vec2i &amp;pos, int width, int height, MapMarkerFunc *f, MapMarkerFunc *f2)</argsstring>
        <name>MapMarkUnitSightRec</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="map_8h_1adb91ef202d7ab2ba4da1d7637ea2f146" kindref="member">MapMarkerFunc</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="map_8h_1adb91ef202d7ab2ba4da1d7637ea2f146" kindref="member">MapMarkerFunc</ref> *</type>
          <declname>f2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>(Un)Mark on vision table the Sight of the unit (and units inside for transporter (recursively))</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit to (un)mark. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>coord of first container of unit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the first container of unit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the first container of unit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to (un)mark for normal vision. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f2</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to (un)mark for cloaking vision. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="801" column="13" bodyfile="src/unit/unit.cpp" bodystart="801" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a058338d51fbff41795691bce0f5bac89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
        <definition>CUnit* GetFirstContainer</definition>
        <argsstring>(const CUnit &amp;unit)</argsstring>
        <name>GetFirstContainer</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the unit not transported, by viewing the container recursively.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>unit from where look the first conatiner.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Container of container of ... of unit. It is not null. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="826" column="7" bodyfile="src/unit/unit.cpp" bodystart="826" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a83030d3fa34e82019e732e97f580a287" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void MapMarkUnitSight</definition>
        <argsstring>(CUnit &amp;unit)</argsstring>
        <name>MapMarkUnitSight</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Mark on vision table the Sight of the unit. </para>
        </briefdescription>
        <detaileddescription>
<para>Mark on vision table the Sight of the unit (and units inside for transporter)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>unit to unmark its vision. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="unit_8cpp_1ac74331fb73e9f83af60ad442ce29acc6" kindref="member">MapUnmarkUnitSight</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="843" column="6" bodyfile="src/unit/unit.cpp" bodystart="843" bodyend="862"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1ac74331fb73e9f83af60ad442ce29acc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void MapUnmarkUnitSight</definition>
        <argsstring>(CUnit &amp;unit)</argsstring>
        <name>MapUnmarkUnitSight</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Unmark on vision table the Sight of the unit. </para>
        </briefdescription>
        <detaileddescription>
<para>Unmark on vision table the Sight of the unit (and units inside for transporter)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>unit to unmark its vision. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="unit_8cpp_1a83030d3fa34e82019e732e97f580a287" kindref="member">MapMarkUnitSight</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="871" column="6" bodyfile="src/unit/unit.cpp" bodystart="871" bodyend="892"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a3d108c683459a597a9a42272e1c90b3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UpdateUnitSightRange</definition>
        <argsstring>(CUnit &amp;unit)</argsstring>
        <name>UpdateUnitSightRange</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Update unit-&gt;CurrentSightRange. </para>
        </briefdescription>
        <detaileddescription>
<para>Update the Unit Current sight range to good value and transported units inside.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>unit to update SightRange </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="906" column="6" bodyfile="src/unit/unit.cpp" bodystart="906" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a19720d30202cff775b3e81851e5785e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void MarkUnitFieldFlags</definition>
        <argsstring>(const CUnit &amp;unit)</argsstring>
        <name>MarkUnitFieldFlags</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>currently selected units </para>
        </briefdescription>
        <detaileddescription>
<para>Mark the field with the FieldFlags.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>unit to mark. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="935" column="6" bodyfile="src/unit/unit.cpp" bodystart="935" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a7582a8206bb1d2b5f2eef87cf0a7e188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UnmarkUnitFieldFlags</definition>
        <argsstring>(const CUnit &amp;unit)</argsstring>
        <name>UnmarkUnitFieldFlags</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Unmark the field with the FieldFlags. </para>
        </briefdescription>
        <detaileddescription>
<para>Mark the field with the FieldFlags.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>unit to mark. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="979" column="6" bodyfile="src/unit/unit.cpp" bodystart="979" bodyend="1002"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a33a2b859099c005ba69d20ec065e5472" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void UnitInXY</definition>
        <argsstring>(CUnit &amp;unit, const Vec2i &amp;pos)</argsstring>
        <name>UnitInXY</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Affect Tile coord of a unit (with units inside) to tile (x, y).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>unit to move. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>map tile position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1060" column="13" bodyfile="src/unit/unit.cpp" bodystart="1060" bodyend="1070"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a76014a37e3b340f8d8e90253f6b42c62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
        <definition>CUnit* MakeUnitAndPlace</definition>
        <argsstring>(const Vec2i &amp;pos, const CUnitType &amp;type, CPlayer *player)</argsstring>
        <name>MakeUnitAndPlace</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="classCPlayer" kindref="compound">CPlayer</ref> *</type>
          <declname>player</declname>
        </param>
        <briefdescription>
<para>Create a new unit and place on map. </para>
        </briefdescription>
        <detaileddescription>
<para>Create new unit and place on map.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>map tile position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit-type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to owning player.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to created unit. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1140" column="7" bodyfile="src/unit/unit.cpp" bodystart="1140" bodyend="1148"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a56e3d81136937a9c5281a6591d7ebfd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void FindNearestDrop</definition>
        <argsstring>(const CUnitType &amp;type, const Vec2i &amp;goalPos, Vec2i &amp;resPos, int heading)</argsstring>
        <name>FindNearestDrop</name>
        <param>
          <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>goalPos</declname>
        </param>
        <param>
          <type><ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>resPos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>heading</declname>
        </param>
        <briefdescription>
<para>Find the nearest position at which unit can be placed. </para>
        </briefdescription>
        <detaileddescription>
<para>Find the nearest position at which unit can be placed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the dropped unit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>goalPos</parametername>
</parameternamelist>
<parameterdescription>
<para>Goal map tile position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resPos</parametername>
</parameternamelist>
<parameterdescription>
<para>Holds the nearest point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>heading</parametername>
</parameternamelist>
<parameterdescription>
<para>preferense side to drop out of. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1158" column="6" bodyfile="src/unit/unit.cpp" bodystart="1158" bodyend="1208"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a95edd2f42e87c4946febd4229b98a280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UnitLost</definition>
        <argsstring>(CUnit &amp;unit)</argsstring>
        <name>UnitLost</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Handle the loss of a unit (food,...) </para>
        </briefdescription>
        <detaileddescription>
<para>Update information for lost units.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Also called by ChangeUnitOwner </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1269" column="6" bodyfile="src/unit/unit.cpp" bodystart="1269" bodyend="1377"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1ad3b64dda0858175fcc8c52a2edc4b351" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UnitClearOrders</definition>
        <argsstring>(CUnit &amp;unit)</argsstring>
        <name>UnitClearOrders</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Remove the Orders of a Unit. </para>
        </briefdescription>
        <detaileddescription>
<para>Removes all orders from a unit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit that will have all its orders cleared </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1384" column="6" bodyfile="src/unit/unit.cpp" bodystart="1384" bodyend="1391"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a128b06151a7e6143d22ee1fec2731af5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UpdateForNewUnit</definition>
        <argsstring>(const CUnit &amp;unit, int upgrade)</argsstring>
        <name>UpdateForNewUnit</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>upgrade</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update for new unit. Food and income ...</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>New unit pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upgrade</parametername>
</parameternamelist>
<parameterdescription>
<para>True unit was upgraded. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1399" column="6" bodyfile="src/unit/unit.cpp" bodystart="1399" bodyend="1419"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a8881082ba9a2aee18697d545a9c418bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void NearestOfUnit</definition>
        <argsstring>(const CUnit &amp;unit, const Vec2i &amp;pos, Vec2i *dpos)</argsstring>
        <name>NearestOfUnit</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> *</type>
          <declname>dpos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find nearest point of unit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to unit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>tile map position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dpos</parametername>
</parameternamelist>
<parameterdescription>
<para>Out: nearest point tile map position to (tx,ty). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1428" column="6" bodyfile="src/unit/unit.cpp" bodystart="1428" bodyend="1436"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a93f1195fa0019b2a864449f03b28eeca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void UnitFillSeenValues</definition>
        <argsstring>(CUnit &amp;unit)</argsstring>
        <name>UnitFillSeenValues</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy the unit look in Seen variables. This should be called when buildings go under fog of war for ThisPlayer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit to work on </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1444" column="13" bodyfile="src/unit/unit.cpp" bodystart="1444" bodyend="1455"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1aff90bda053a2fa0f7e38bde47bed96ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CorrectWallDirections</definition>
        <argsstring>(CUnit &amp;unit)</argsstring>
        <name>CorrectWallDirections</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Correct directions for placed wall. </para>
        </briefdescription>
        <detaileddescription>
<para>Correct direction for placed wall.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The wall unit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1470" column="6" bodyfile="src/unit/unit.cpp" bodystart="1470" bodyend="1503"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a8ea33915635ac074fc37f8b74eb0a41d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CorrectWallNeighBours</definition>
        <argsstring>(CUnit &amp;unit)</argsstring>
        <name>CorrectWallNeighBours</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Correct the surrounding walls. </para>
        </briefdescription>
        <detaileddescription>
<para>Correct the surrounding walls.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The wall unit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1510" column="6" bodyfile="src/unit/unit.cpp" bodystart="1510" bodyend="1530"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a2ce8845e913e4e357e924b32865bf67b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UnitGoesUnderFog</definition>
        <argsstring>(CUnit &amp;unit, const CPlayer &amp;player)</argsstring>
        <name>UnitGoesUnderFog</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <briefdescription>
<para>Call when an Unit goes under fog. </para>
        </briefdescription>
        <detaileddescription>
<para>This function should get called when a unit goes under fog of war.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit that goes under fog. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>The player the unit goes out of fog for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1538" column="6" bodyfile="src/unit/unit.cpp" bodystart="1538" bodyend="1564"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a8b8cf2b3b785ed3b9b5d78bfee9b22e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UnitGoesOutOfFog</definition>
        <argsstring>(CUnit &amp;unit, const CPlayer &amp;player)</argsstring>
        <name>UnitGoesOutOfFog</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>player</declname>
        </param>
        <briefdescription>
<para>Call when an Unit goes out of fog. </para>
        </briefdescription>
        <detaileddescription>
<para>This function should get called when a unit goes out of fog of war.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit that goes out of fog. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>The player the unit goes out of fog for.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>For units that are visible under fog (mostly buildings) we use reference counts, from the players that know about the building. When an building goes under fog it gets a refs increase, and when it shows up it gets a decrease. It must not get an decrease the first time it&apos;s seen, so we have to keep track of what player saw what units, with SeenByPlayer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1579" column="6" bodyfile="src/unit/unit.cpp" bodystart="1579" bodyend="1591"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a58564e785c8a2d95aa8e9ae00e93e294" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UnitCountSeen</definition>
        <argsstring>(CUnit &amp;unit)</argsstring>
        <name>UnitCountSeen</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Does a recount for VisCount. </para>
        </briefdescription>
        <detaileddescription>
<para>Recalculates a units visiblity count. This happens really often, Like every time a unit moves. It&apos;s really fast though, since we have per-tile counts.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the unit to check if seen </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1600" column="6" bodyfile="src/unit/unit.cpp" bodystart="1600" bodyend="1666"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1afd12da073a7b1546522238326b140625" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool IsMineAssignedBy</definition>
        <argsstring>(const CUnit &amp;mine, const CUnit &amp;worker)</argsstring>
        <name>IsMineAssignedBy</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>mine</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>worker</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1841" column="13" bodyfile="src/unit/unit.cpp" bodystart="1841" bodyend="1849"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1abda232ecfc1b7bfa0bcbeb8a55a81fbe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void ChangePlayerOwner</definition>
        <argsstring>(CPlayer &amp;oldplayer, CPlayer &amp;newplayer)</argsstring>
        <name>ChangePlayerOwner</name>
        <param>
          <type><ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>oldplayer</declname>
        </param>
        <param>
          <type><ref refid="classCPlayer" kindref="compound">CPlayer</ref> &amp;</type>
          <declname>newplayer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the owner of all units of a player.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldplayer</parametername>
</parameternamelist>
<parameterdescription>
<para>Old owning player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newplayer</parametername>
</parameternamelist>
<parameterdescription>
<para>New owning player. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1913" column="13" bodyfile="src/unit/unit.cpp" bodystart="1913" bodyend="1931"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1aee889081c16a6b72a008d47b1c47ccce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void RescueUnits</definition>
        <argsstring>()</argsstring>
        <name>RescueUnits</name>
        <briefdescription>
<para>Check for rescue each second. </para>
        </briefdescription>
        <detaileddescription>
<para>Rescue units.</para>
<para>Look through all rescueable players, if they could be rescued. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="1938" column="6" bodyfile="src/unit/unit.cpp" bodystart="1938" bodyend="1987"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1aa949f8b74dcf9a840b7ec5e660d948d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int myatan</definition>
        <argsstring>(int val)</argsstring>
        <name>myatan</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fast arc tangent function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>atan argument</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>atan(val) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2000" column="12" bodyfile="src/unit/unit.cpp" bodystart="2000" bodyend="2016"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a1fe55547c8f3e0721907eb9106a6182a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DirectionToHeading</definition>
        <argsstring>(const Vec2i &amp;delta)</argsstring>
        <name>DirectionToHeading</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
<para>Convert direction (dx,dy) to heading (0-255) </para>
        </briefdescription>
        <detaileddescription>
<para>Convert direction to heading.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delta</parametername>
</parameternamelist>
<parameterdescription>
<para>Delta.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Angle (0..255) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2025" column="5" bodyfile="src/unit/unit.cpp" bodystart="2025" bodyend="2042"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a32f35631d9938d742a64a765c674d8f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DirectionToHeading</definition>
        <argsstring>(const PixelDiff &amp;delta)</argsstring>
        <name>DirectionToHeading</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a368fe415818899499de54bcbc23906c1" kindref="member">PixelDiff</ref> &amp;</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
<para>Convert direction (dx,dy) to heading (0-255) </para>
        </briefdescription>
        <detaileddescription>
<para>Convert direction to heading.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delta</parametername>
</parameternamelist>
<parameterdescription>
<para>Delta.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Angle (0..255) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2051" column="5" bodyfile="src/unit/unit.cpp" bodystart="2051" bodyend="2056"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a0a4540cf7ba8ca584a36c3b3b4cf9ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UnitUpdateHeading</definition>
        <argsstring>(CUnit &amp;unit)</argsstring>
        <name>UnitUpdateHeading</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Update frame from heading. </para>
        </briefdescription>
        <detaileddescription>
<para>Update sprite frame for new heading. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2061" column="6" bodyfile="src/unit/unit.cpp" bodystart="2061" bodyend="2088"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a2e230836b3aa740a4a69622ba687566a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void UnitHeadingFromDeltaXY</definition>
        <argsstring>(CUnit &amp;unit, const Vec2i &amp;delta)</argsstring>
        <name>UnitHeadingFromDeltaXY</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
<para>Heading and frame from delta direction. </para>
        </briefdescription>
        <detaileddescription>
<para>Change unit heading/frame from delta direction x, y.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit for new direction looking. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delta</parametername>
</parameternamelist>
<parameterdescription>
<para>map tile delta direction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2096" column="6" bodyfile="src/unit/unit.cpp" bodystart="2096" bodyend="2100"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a27194e108786a361c739344f403f85ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void DropOutOnSide</definition>
        <argsstring>(CUnit &amp;unit, int heading, const CUnit *container)</argsstring>
        <name>DropOutOnSide</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>heading</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Place a unit on the map to the side of a unit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit to drop out. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>heading</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction in which the unit should appear. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>container</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit &quot;containing&quot; unit to drop (may be different of unit.Container). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2113" column="6" bodyfile="src/unit/unit.cpp" bodystart="2113" bodyend="2188"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1afa6b89bdbccec3d872231bc18105f1ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void DropOutNearest</definition>
        <argsstring>(CUnit &amp;unit, const Vec2i &amp;goalPos, const CUnit *container)</argsstring>
        <name>DropOutNearest</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>goalPos</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Place a unit on the map nearest to goalPos.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit to drop out. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>goalPos</parametername>
</parameternamelist>
<parameterdescription>
<para>Goal map tile position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addx</parametername>
</parameternamelist>
<parameterdescription>
<para>Tile width of unit it&apos;s dropping out of. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addy</parametername>
</parameternamelist>
<parameterdescription>
<para>Tile height of unit it&apos;s dropping out of. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2198" column="6" bodyfile="src/unit/unit.cpp" bodystart="2198" bodyend="2269"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a6965a4b7cd529073a8852bdbc53b3629" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void DropOutAll</definition>
        <argsstring>(const CUnit &amp;source)</argsstring>
        <name>DropOutAll</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Drop out all units in the unit. </para>
        </briefdescription>
        <detaileddescription>
<para>Drop out all units inside unit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>All units inside source are dropped out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2276" column="6" bodyfile="src/unit/unit.cpp" bodystart="2276" bodyend="2283"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a43a166c245d171d5a228730ac0ddc62d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
        <definition>CUnit* UnitOnScreen</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>UnitOnScreen</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Get unit under cursor. </para>
        </briefdescription>
        <detaileddescription>
<para>Unit on map screen.</para>
<para>Select units on screen. (x, y are in pixels relative to map 0,0). Not GAMEPLAY safe, uses ReplayRevealMap</para>
<para>More units on same position. Cycle through units. First take highest unit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X pixel position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y pixel position.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An unit on x, y position. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2304" column="7" bodyfile="src/unit/unit.cpp" bodystart="2304" bodyend="2339"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a268d233a28c2f7e10fcd252db3abbe10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void LetUnitDie</definition>
        <argsstring>(CUnit &amp;unit, bool suicide)</argsstring>
        <name>LetUnitDie</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>suicide</declname>
        </param>
        <briefdescription>
<para>Let a unit die. </para>
        </briefdescription>
        <detaileddescription>
<para>Let an unit die.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit to be destroyed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2357" column="6" bodyfile="src/unit/unit.cpp" bodystart="2357" bodyend="2455"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a8fdcf34faa930d290c2e086284f3a751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void DestroyAllInside</definition>
        <argsstring>(CUnit &amp;source)</argsstring>
        <name>DestroyAllInside</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Destroy all units inside another unit. </para>
        </briefdescription>
        <detaileddescription>
<para>Destroy all units inside unit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>container. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2462" column="6" bodyfile="src/unit/unit.cpp" bodystart="2462" bodyend="2476"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a3edadc6cd962af47a1b78eb8dadd6f6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ThreatCalculate</definition>
        <argsstring>(const CUnit &amp;unit, const CUnit &amp;dest)</argsstring>
        <name>ThreatCalculate</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Calculate some value to measure the unit&apos;s priority for AI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2483" column="5" bodyfile="src/unit/unit.cpp" bodystart="2483" bodyend="2535"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a37b623389aa4fb2a58b9715a84e0c252" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TargetPriorityCalculate</definition>
        <argsstring>(const CUnit *const attacker, const CUnit *const dest)</argsstring>
        <name>TargetPriorityCalculate</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> *const</type>
          <declname>attacker</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> *const</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Check if target attacks us (or has us as goal for any action)</para>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2537" column="5" bodyfile="src/unit/unit.cpp" bodystart="2537" bodyend="2622"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1ace8c59036621b4de5e70f53900325ba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool InReactRange</definition>
        <argsstring>(const CUnit &amp;unit, const CUnit &amp;target)</argsstring>
        <name>InReactRange</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Is target within reaction range of this unit? </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true, if target is in reaction range of the unit <xrefsect id="todo_1_todo000100"><xreftitle>Todo</xreftitle><xrefdescription><para>: Do we have to check range from unit.Container pos if unit is bunkered or in transport?</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit to check for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>Checked target.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if within react range, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2633" column="6" bodyfile="src/unit/unit.cpp" bodystart="2633" bodyend="2641"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a8f7d1c42a1b4d50a436b90092be21b61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool InAttackRange</definition>
        <argsstring>(const CUnit &amp;unit, const CUnit &amp;target)</argsstring>
        <name>InAttackRange</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Is target within attack range of this unit? </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true, if target is in attack range of the unit and there is no obstacles between them (when inside caves) <xrefsect id="todo_1_todo000101"><xreftitle>Todo</xreftitle><xrefdescription><para>: Do we have to check range from unit.Container pos if unit is bunkered or in transport?</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit to check for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>Checked target.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if in attack range, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2652" column="6" bodyfile="src/unit/unit.cpp" bodystart="2652" bodyend="2662"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1afb9b6b0530d534cac0a1663808e42f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool InAttackRange</definition>
        <argsstring>(const CUnit &amp;unit, const Vec2i &amp;tilePos)</argsstring>
        <name>InAttackRange</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>tilePos</declname>
        </param>
        <briefdescription>
<para>Is tile within attack range of this unit? </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true, if tile is in attack range of the unit and there is no obstacles between them (when inside caves) <xrefsect id="todo_1_todo000102"><xreftitle>Todo</xreftitle><xrefdescription><para>: Do we have to check range from unit.Container pos if unit is bunkered or in transport?</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit to check for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Checked position.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if in attack range, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2673" column="6" bodyfile="src/unit/unit.cpp" bodystart="2673" bodyend="2683"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1add7ca59e4d90040290d376a72bc4a905" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref></type>
        <definition>Vec2i GetRndPosInDirection</definition>
        <argsstring>(const Vec2i &amp;srcPos, const CUnit &amp;dirUnit, const bool dirFrom, const int minRange, const int devRadius, const int rangeDev)</argsstring>
        <name>GetRndPosInDirection</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>srcPos</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>dirUnit</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>dirFrom</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>minRange</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>devRadius</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>rangeDev</declname>
        </param>
        <briefdescription>
<para>Return randomly selected position in direction (to/from) dirUnit from srcPos. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns end position of randomly generated vector form srcPos in direction to/from dirUnit</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>srcPos</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector origin </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dirUnit</parametername>
</parameternamelist>
<parameterdescription>
<para>Position to determine vector direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dirFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction of src-dir. True if &quot;from&quot; dirPos, false if &quot;to&quot; dirPos </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minRange</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimal range to new position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devRadius</parametername>
</parameternamelist>
<parameterdescription>
<para>Diviation radius </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rangeDev</parametername>
</parameternamelist>
<parameterdescription>
<para>Range deviation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Position </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2698" column="7" bodyfile="src/unit/unit.cpp" bodystart="2698" bodyend="2703"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1ab907f55027767f55a52ad5d2df91d438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref></type>
        <definition>Vec2i GetRndPosInDirection</definition>
        <argsstring>(const Vec2i &amp;srcPos, const Vec2i &amp;dirPos, const bool dirFrom, const int minRange, const int devRadius, const int rangeDev)</argsstring>
        <name>GetRndPosInDirection</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>srcPos</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>dirPos</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>dirFrom</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>minRange</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>devRadius</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>rangeDev</declname>
        </param>
        <briefdescription>
<para>Return randomly selected position in direction (to/from) dirPos from srcPos. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns end position of randomly generated vector form srcPos in direction to/from dirPos</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>srcPos</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector origin </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dirPos</parametername>
</parameternamelist>
<parameterdescription>
<para>Position to determine vector direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dirFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction of src-dir. True if &quot;from&quot; dirPos, false if &quot;to&quot; dirPos </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minRange</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimal range to new position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devRadius</parametername>
</parameternamelist>
<parameterdescription>
<para>Diviation radius </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rangeDev</parametername>
</parameternamelist>
<parameterdescription>
<para>Range deviation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Position </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2717" column="7" bodyfile="src/unit/unit.cpp" bodystart="2717" bodyend="2730"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a937c2df269967e0bceb29be1720aab2c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void HitUnit_LastAttack</definition>
        <argsstring>(const CUnit *attacker, CUnit &amp;target)</argsstring>
        <name>HitUnit_LastAttack</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
          <declname>attacker</declname>
        </param>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2732" column="13" bodyfile="src/unit/unit.cpp" bodystart="2732" bodyend="2769"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1aa300ad2c0085be39788304ebfa639a6f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool HitUnit_IsUnitWillDie</definition>
        <argsstring>(const CUnit *attacker, const CUnit &amp;target, int damage)</argsstring>
        <name>HitUnit_IsUnitWillDie</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
          <declname>attacker</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int</type>
          <declname>damage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2771" column="13" bodyfile="src/unit/unit.cpp" bodystart="2771" bodyend="2779"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a057abb87ff27e4b876c4dff202d54216" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void HitUnit_IncreaseScoreForKill</definition>
        <argsstring>(CUnit &amp;attacker, CUnit &amp;target)</argsstring>
        <name>HitUnit_IncreaseScoreForKill</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>attacker</declname>
        </param>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2781" column="13" bodyfile="src/unit/unit.cpp" bodystart="2781" bodyend="2798"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1ab126d165b91a70ee7f0e91fbb0dc2a26" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void HitUnit_ApplyDamage</definition>
        <argsstring>(CUnit *attacker, CUnit &amp;target, int damage)</argsstring>
        <name>HitUnit_ApplyDamage</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
          <declname>attacker</declname>
        </param>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int</type>
          <declname>damage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2800" column="13" bodyfile="src/unit/unit.cpp" bodystart="2800" bodyend="2818"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a268e5d9d8ea5ad9d51ad9cf723471b63" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void HitUnit_BuildingCapture</definition>
        <argsstring>(CUnit *attacker, CUnit &amp;target, int damage)</argsstring>
        <name>HitUnit_BuildingCapture</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
          <declname>attacker</declname>
        </param>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int</type>
          <declname>damage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2820" column="13" bodyfile="src/unit/unit.cpp" bodystart="2820" bodyend="2833"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a38f699ad686ccf8b9eba570d70e86c68" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void HitUnit_ShowDamageMissile</definition>
        <argsstring>(const CUnit &amp;target, int damage)</argsstring>
        <name>HitUnit_ShowDamageMissile</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int</type>
          <declname>damage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2835" column="13" bodyfile="src/unit/unit.cpp" bodystart="2835" bodyend="2845"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a20766778b429343c1b54e4f8020a645f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void HitUnit_ShowImpactMissile</definition>
        <argsstring>(const CUnit &amp;target)</argsstring>
        <name>HitUnit_ShowImpactMissile</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2847" column="13" bodyfile="src/unit/unit.cpp" bodystart="2847" bodyend="2860"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a1b6d4032c651e8fa613abce1893da6e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void HitUnit_ChangeVariable</definition>
        <argsstring>(CUnit &amp;target, const Missile &amp;missile)</argsstring>
        <name>HitUnit_ChangeVariable</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="classMissile" kindref="compound">Missile</ref> &amp;</type>
          <declname>missile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2862" column="13" bodyfile="src/unit/unit.cpp" bodystart="2862" bodyend="2875"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a95c857e7a0fbf7d242b51e42258dfa96" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void HitUnit_Burning</definition>
        <argsstring>(CUnit &amp;target)</argsstring>
        <name>HitUnit_Burning</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2878" column="13" bodyfile="src/unit/unit.cpp" bodystart="2878" bodyend="2891"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1aad0b04456382b88c096b33d6904b0e38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void HitUnit_RunAway</definition>
        <argsstring>(CUnit &amp;target, const CUnit &amp;attacker)</argsstring>
        <name>HitUnit_RunAway</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>attacker</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Attack-move to pos</para>
<para>Run away to pos</para>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2893" column="13" bodyfile="src/unit/unit.cpp" bodystart="2893" bodyend="2902"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1ae71f1b41cd088fe089fa0aba9f2d510f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>static void HitUnit_AttackBack</definition>
        <argsstring>(CUnit &amp;attacker, CUnit &amp;target)</argsstring>
        <name>HitUnit_AttackBack</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>attacker</declname>
        </param>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>allow target to ignore non aggressive targets while searching attacker</para>
<para>Wait for timer expires for preventing frequent switching of attack-move positions</para>
<para>allow target to ignore non aggressive targets while searching attacker</para>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2904" column="13" bodyfile="src/unit/unit.cpp" bodystart="2904" bodyend="2968"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a4755f6e62094cf1884f56df241099195" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void HitUnit</definition>
        <argsstring>(CUnit *attacker, CUnit &amp;target, int damage, const Missile *missile)</argsstring>
        <name>HitUnit</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
          <declname>attacker</declname>
        </param>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int</type>
          <declname>damage</declname>
        </param>
        <param>
          <type>const <ref refid="classMissile" kindref="compound">Missile</ref> *</type>
          <declname>missile</declname>
        </param>
        <briefdescription>
<para>Hit unit with damage, if destroyed give attacker the points. </para>
        </briefdescription>
        <detaileddescription>
<para>Unit is hit by missile or other damage.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attacker</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit that attacks. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit that is hit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>damage</parametername>
</parameternamelist>
<parameterdescription>
<para>How many damage to take. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>missile</parametername>
</parameternamelist>
<parameterdescription>
<para>Which missile took the damage. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="2978" column="6" bodyfile="src/unit/unit.cpp" bodystart="2978" bodyend="3108"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1aea72012804732fbf87824be8f1b89cb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MapDistanceBetweenTypes</definition>
        <argsstring>(const CUnitType &amp;src, const Vec2i &amp;pos1, const CUnitType &amp;dst, const Vec2i &amp;pos2)</argsstring>
        <name>MapDistanceBetweenTypes</name>
        <param>
          <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos1</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos2</declname>
        </param>
        <briefdescription>
<para>Returns the map distance between to unittype as locations. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the map distance between two points with unit type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>src unittype </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos1</parametername>
</parameternamelist>
<parameterdescription>
<para>map tile position of src (upperleft). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit type to take into account. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos2</parametername>
</parameternamelist>
<parameterdescription>
<para>map tile position of dst.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The distance between the types. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="3149" column="5" bodyfile="src/unit/unit.cpp" bodystart="3149" bodyend="3165"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1ade6304ca2edeaea1290bdd322356ee68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ViewPointDistance</definition>
        <argsstring>(const Vec2i &amp;pos)</argsstring>
        <name>ViewPointDistance</name>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Calculate the distance from current view point to coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para>Compute the distance from the view point to a given point.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>map tile position.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000103"><xreftitle>Todo</xreftitle><xrefdescription><para>FIXME: is it the correct place to put this function in? </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="3174" column="5" bodyfile="src/unit/unit.cpp" bodystart="3174" bodyend="3181"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a497a5b36257c7b0b53a8fffdbb44326e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ViewPointDistanceToUnit</definition>
        <argsstring>(const CUnit &amp;dest)</argsstring>
        <name>ViewPointDistanceToUnit</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Calculate the distance from current view point to unit. </para>
        </briefdescription>
        <detaileddescription>
<para>Compute the distance from the view point to a given unit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>Distance to this unit.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000104"><xreftitle>Todo</xreftitle><xrefdescription><para>FIXME: is it the correct place to put this function in? </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="3190" column="5" bodyfile="src/unit/unit.cpp" bodystart="3190" bodyend="3197"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1aa1282711a355ffc01a07456c1f15f87f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CanTarget</definition>
        <argsstring>(const CUnitType &amp;source, const CUnitType &amp;dest)</argsstring>
        <name>CanTarget</name>
        <param>
          <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Can this unit-type attack the other (destination) </para>
        </briefdescription>
        <detaileddescription>
<para>Can the source unit attack the destination unit?</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit type pointer of the attacker. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit type pointer of the target.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if attacker can&apos;t target the unit, else a positive number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="3207" column="5" bodyfile="src/unit/unit.cpp" bodystart="3207" bodyend="3230"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1a11153051946b822646b78d047d2d640f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CanTransport</definition>
        <argsstring>(const CUnit &amp;transporter, const CUnit &amp;unit)</argsstring>
        <name>CanTransport</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>transporter</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Can transporter transport the other unit. </para>
        </briefdescription>
        <detaileddescription>
<para>Can the transporter transport the other unit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transporter</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit which is the transporter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit which wants to go in the transporter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if transporter can transport unit, 0 else. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="3240" column="5" bodyfile="src/unit/unit.cpp" bodystart="3240" bodyend="3272"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1ab0616f5213816dc8835d713097398b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InitUnits</definition>
        <argsstring>()</argsstring>
        <name>InitUnits</name>
        <briefdescription>
<para>Initialize unit module. </para>
        </briefdescription>
        <detaileddescription>
<para>Initialize unit module. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="3422" column="6" bodyfile="src/unit/unit.cpp" bodystart="3422" bodyend="3427"/>
      </memberdef>
      <memberdef kind="function" id="unit_8cpp_1aba064081dd49cbd8a610d39f7958d0d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CleanUnits</definition>
        <argsstring>()</argsstring>
        <name>CleanUnits</name>
        <briefdescription>
<para>Clean unit module. </para>
        </briefdescription>
        <detaileddescription>
<para>Clean up unit module. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/unit/unit.cpp" line="3432" column="6" bodyfile="src/unit/unit.cpp" bodystart="3432" bodyend="3456"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/unit/unit.cpp"/>
  </compounddef>
</doxygen>
