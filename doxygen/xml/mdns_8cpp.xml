<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="mdns_8cpp" kind="file" language="C++">
    <compoundname>mdns.cpp</compoundname>
    <includes local="yes">mdns.h</includes>
    <includes refid="game_8h" local="yes">game.h</includes>
    <includes refid="net__lowlevel_8h" local="yes">net_lowlevel.h</includes>
    <includes refid="network_8h" local="yes">network.h</includes>
    <incdepgraph>
      <node id="2">
        <label>mdns.h</label>
      </node>
      <node id="3">
        <label>game.h</label>
        <link refid="game_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>network/netsockets.h</label>
        <link refid="netsockets_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="7">
        <label>winsock2.h</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
      <node id="8">
        <label>network.h</label>
        <link refid="network_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/network/mdns.cpp</label>
        <link refid="mdns_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>net_lowlevel.h</label>
        <link refid="net__lowlevel_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <header>mdns.cpp - LAN server discovery.</header>
      <memberdef kind="function" id="mdns_8cpp_1aa93b6c4831e631cc316ac18c47136fa6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int service_callback</definition>
        <argsstring>(int sock, const struct sockaddr *from, size_t addrlen, mdns_entry_type_t entry, uint16_t query_id, uint16_t rtype, uint16_t rclass, uint32_t ttl, const void *data, size_t size, size_t name_offset, size_t name_length, size_t record_offset, size_t record_length, void *user_data)</argsstring>
        <name>service_callback</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>const struct sockaddr *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>addrlen</declname>
        </param>
        <param>
          <type><ref refid="network_2mdns_8h_1a980c1fc84cc6714d5ca0e0de1aa8247a" kindref="member">mdns_entry_type_t</ref></type>
          <declname>entry</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>query_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>rtype</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>rclass</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ttl</declname>
        </param>
        <param>
          <type>const <ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>name_offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>name_length</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>record_offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>record_length</declname>
        </param>
        <param>
          <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref> *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/mdns.cpp" line="36" column="12" bodyfile="src/network/mdns.cpp" bodystart="36" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="mdns_8cpp_1a05f8a398b69b5a5d261193ccfd46b0e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int query_callback</definition>
        <argsstring>(int sock, const struct sockaddr *from, size_t addrlen, mdns_entry_type_t entry, uint16_t query_id, uint16_t rtype, uint16_t rclass, uint32_t ttl, const void *data, size_t size, size_t name_offset, size_t name_length, size_t record_offset, size_t record_length, void *user_data)</argsstring>
        <name>query_callback</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>const struct sockaddr *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>addrlen</declname>
        </param>
        <param>
          <type><ref refid="network_2mdns_8h_1a980c1fc84cc6714d5ca0e0de1aa8247a" kindref="member">mdns_entry_type_t</ref></type>
          <declname>entry</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>query_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>rtype</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>rclass</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ttl</declname>
        </param>
        <param>
          <type>const <ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>name_offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>name_length</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>record_offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>record_length</declname>
        </param>
        <param>
          <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref> *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network/mdns.cpp" line="87" column="12" bodyfile="src/network/mdns.cpp" bodystart="87" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/network/mdns.cpp"/>
  </compounddef>
</doxygen>
