<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classHasSameTypeAs" kind="class" language="C++" prot="public">
    <compoundname>HasSameTypeAs</compoundname>
    <basecompoundref refid="classCUnitFilter" prot="public" virt="non-virtual">CUnitFilter</basecompoundref>
    <includes refid="unit__find_8h" local="no">unit_find.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHasSameTypeAs_1a217c176dc3d9950860fc2e2bf431f53f" prot="private" static="no" mutable="no">
        <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> *</type>
        <definition>const CUnitType* HasSameTypeAs::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/unit_find.h" line="67" column="17" bodyfile="src/include/unit_find.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHasSameTypeAs_1a54b4f2d130b0289eb369864e003c278d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HasSameTypeAs::HasSameTypeAs</definition>
        <argsstring>(const CUnitType &amp;_type)</argsstring>
        <name>HasSameTypeAs</name>
        <param>
          <type>const <ref refid="classCUnitType" kindref="compound">CUnitType</ref> &amp;</type>
          <declname>_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/unit_find.h" line="64" column="10" bodyfile="src/include/unit_find.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classHasSameTypeAs_1a519c4c2905c6f5c906491d558e0e1f1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HasSameTypeAs::operator()</definition>
        <argsstring>(const CUnit *unit) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/unit_find.h" line="65" column="6" bodyfile="src/include/unit_find.h" bodystart="65" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>HasSameTypeAs</label>
        <link refid="classHasSameTypeAs"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>CUnitFilter</label>
        <link refid="classCUnitFilter"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>HasSameTypeAs</label>
        <link refid="classHasSameTypeAs"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>CUnitFilter</label>
        <link refid="classCUnitFilter"/>
      </node>
    </collaborationgraph>
    <location file="src/include/unit_find.h" line="62" column="1" bodyfile="src/include/unit_find.h" bodystart="61" bodyend="68"/>
    <listofallmembers>
      <member refid="classHasSameTypeAs_1a54b4f2d130b0289eb369864e003c278d" prot="public" virt="non-virtual"><scope>HasSameTypeAs</scope><name>HasSameTypeAs</name></member>
      <member refid="classHasSameTypeAs_1a519c4c2905c6f5c906491d558e0e1f1c" prot="public" virt="non-virtual"><scope>HasSameTypeAs</scope><name>operator()</name></member>
      <member refid="classHasSameTypeAs_1a217c176dc3d9950860fc2e2bf431f53f" prot="private" virt="non-virtual"><scope>HasSameTypeAs</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
