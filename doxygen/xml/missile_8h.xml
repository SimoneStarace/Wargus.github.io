<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="missile_8h" kind="file" language="C++">
    <compoundname>missile.h</compoundname>
    <includes refid="missileconfig_8h" local="yes">missileconfig.h</includes>
    <includes refid="script_8h" local="yes">script.h</includes>
    <includes refid="unitptr_8h" local="yes">unitptr.h</includes>
    <includes refid="unitsound_8h" local="yes">unitsound.h</includes>
    <includes refid="vec2i_8h" local="yes">vec2i.h</includes>
    <includedby refid="action__attack_8cpp" local="yes">src/action/action_attack.cpp</includedby>
    <includedby refid="action__follow_8cpp" local="yes">src/action/action_follow.cpp</includedby>
    <includedby refid="action__spellcast_8cpp" local="yes">src/action/action_spellcast.cpp</includedby>
    <includedby refid="action__still_8cpp" local="yes">src/action/action_still.cpp</includedby>
    <includedby refid="actions_8cpp" local="yes">src/action/actions.cpp</includedby>
    <includedby refid="ai__plan_8cpp" local="yes">src/ai/ai_plan.cpp</includedby>
    <includedby refid="animation__spawnmissile_8cpp" local="yes">src/animation/animation_spawnmissile.cpp</includedby>
    <includedby refid="game_8cpp" local="yes">src/game/game.cpp</includedby>
    <includedby refid="loadgame_8cpp" local="yes">src/game/loadgame.cpp</includedby>
    <includedby refid="savegame_8cpp" local="yes">src/game/savegame.cpp</includedby>
    <includedby refid="map__draw_8cpp" local="yes">src/map/map_draw.cpp</includedby>
    <includedby refid="missile_8cpp" local="yes">src/missile/missile.cpp</includedby>
    <includedby refid="missile__cliptotarget_8cpp" local="yes">src/missile/missile_cliptotarget.cpp</includedby>
    <includedby refid="missile__continuous_8cpp" local="yes">src/missile/missile_continuous.cpp</includedby>
    <includedby refid="missile__cycleonce_8cpp" local="yes">src/missile/missile_cycleonce.cpp</includedby>
    <includedby refid="missile__deathcoil_8cpp" local="yes">src/missile/missile_deathcoil.cpp</includedby>
    <includedby refid="missile__fire_8cpp" local="yes">src/missile/missile_fire.cpp</includedby>
    <includedby refid="missile__flameshield_8cpp" local="yes">src/missile/missile_flameshield.cpp</includedby>
    <includedby refid="missile__hit_8cpp" local="yes">src/missile/missile_hit.cpp</includedby>
    <includedby refid="missile__landmine_8cpp" local="yes">src/missile/missile_landmine.cpp</includedby>
    <includedby refid="missile__none_8cpp" local="yes">src/missile/missile_none.cpp</includedby>
    <includedby refid="missile__parabolic_8cpp" local="yes">src/missile/missile_parabolic.cpp</includedby>
    <includedby refid="missile__pointotpointwithhit_8cpp" local="yes">src/missile/missile_pointotpointwithhit.cpp</includedby>
    <includedby refid="missile__pointtopoint_8cpp" local="yes">src/missile/missile_pointtopoint.cpp</includedby>
    <includedby refid="missile__pointtopointbounce_8cpp" local="yes">src/missile/missile_pointtopointbounce.cpp</includedby>
    <includedby refid="missile__pointtopointcycleonce_8cpp" local="yes">src/missile/missile_pointtopointcycleonce.cpp</includedby>
    <includedby refid="missile__stay_8cpp" local="yes">src/missile/missile_stay.cpp</includedby>
    <includedby refid="missile__straightfly_8cpp" local="yes">src/missile/missile_straightfly.cpp</includedby>
    <includedby refid="missile__tracer_8cpp" local="yes">src/missile/missile_tracer.cpp</includedby>
    <includedby refid="missile__whirlwind_8cpp" local="yes">src/missile/missile_whirlwind.cpp</includedby>
    <includedby refid="missileconfig_8cpp" local="yes">src/missile/missileconfig.cpp</includedby>
    <includedby refid="script__missile_8cpp" local="yes">src/missile/script_missile.cpp</includedby>
    <includedby refid="sound_8cpp" local="yes">src/sound/sound.cpp</includedby>
    <includedby refid="spell__areabombardment_8cpp" local="yes">src/spell/spell_areabombardment.cpp</includedby>
    <includedby refid="spell__spawnmissile_8cpp" local="yes">src/spell/spell_spawnmissile.cpp</includedby>
    <includedby refid="mainloop_8cpp" local="yes">src/stratagus/mainloop.cpp</includedby>
    <includedby refid="stratagus_8cpp" local="yes">src/stratagus/stratagus.cpp</includedby>
    <includedby refid="mouse_8cpp" local="yes">src/ui/mouse.cpp</includedby>
    <includedby refid="unit_8cpp" local="yes">src/unit/unit.cpp</includedby>
    <includedby refid="unit__find_8cpp" local="yes">src/unit/unit_find.cpp</includedby>
    <includedby refid="unittype_8cpp" local="yes">src/unit/unittype.cpp</includedby>
    <incdepgraph>
      <node id="10">
        <label>upgrade_structs.h</label>
        <link refid="upgrade__structs_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>script.h</label>
        <link refid="script_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>lua.h</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="8">
        <label>unitptr.h</label>
        <link refid="unitptr_8h"/>
      </node>
      <node id="6">
        <label>lauxlib.h</label>
      </node>
      <node id="2">
        <label>missileconfig.h</label>
        <link refid="missileconfig_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
      <node id="9">
        <label>unitsound.h</label>
        <link refid="unitsound_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/include/missile.h</label>
        <link refid="missile_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>vec2i.h</label>
        <link refid="vec2i_8h"/>
      </node>
      <node id="7">
        <label>lualib.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="39">
        <label>src/ui/mouse.cpp</label>
        <link refid="mouse_8cpp"/>
      </node>
      <node id="33">
        <label>src/missile/script_missile.cpp</label>
        <link refid="script__missile_8cpp"/>
      </node>
      <node id="5">
        <label>src/action/action_still.cpp</label>
        <link refid="action__still_8cpp"/>
      </node>
      <node id="23">
        <label>src/missile/missile_parabolic.cpp</label>
        <link refid="missile__parabolic_8cpp"/>
      </node>
      <node id="13">
        <label>src/missile/missile.cpp</label>
        <link refid="missile_8cpp"/>
      </node>
      <node id="18">
        <label>src/missile/missile_fire.cpp</label>
        <link refid="missile__fire_8cpp"/>
      </node>
      <node id="4">
        <label>src/action/action_spellcast.cpp</label>
        <link refid="action__spellcast_8cpp"/>
      </node>
      <node id="9">
        <label>src/game/game.cpp</label>
        <link refid="game_8cpp"/>
      </node>
      <node id="15">
        <label>src/missile/missile_continuous.cpp</label>
        <link refid="missile__continuous_8cpp"/>
      </node>
      <node id="37">
        <label>src/stratagus/mainloop.cpp</label>
        <link refid="mainloop_8cpp"/>
      </node>
      <node id="28">
        <label>src/missile/missile_stay.cpp</label>
        <link refid="missile__stay_8cpp"/>
      </node>
      <node id="34">
        <label>src/sound/sound.cpp</label>
        <link refid="sound_8cpp"/>
      </node>
      <node id="32">
        <label>src/missile/missileconfig.cpp</label>
        <link refid="missileconfig_8cpp"/>
      </node>
      <node id="40">
        <label>src/unit/unit.cpp</label>
        <link refid="unit_8cpp"/>
      </node>
      <node id="14">
        <label>src/missile/missile_cliptotarget.cpp</label>
        <link refid="missile__cliptotarget_8cpp"/>
      </node>
      <node id="8">
        <label>src/animation/animation_spawnmissile.cpp</label>
        <link refid="animation__spawnmissile_8cpp"/>
      </node>
      <node id="10">
        <label>src/game/loadgame.cpp</label>
        <link refid="loadgame_8cpp"/>
      </node>
      <node id="21">
        <label>src/missile/missile_landmine.cpp</label>
        <link refid="missile__landmine_8cpp"/>
      </node>
      <node id="35">
        <label>src/spell/spell_areabombardment.cpp</label>
        <link refid="spell__areabombardment_8cpp"/>
      </node>
      <node id="25">
        <label>src/missile/missile_pointtopoint.cpp</label>
        <link refid="missile__pointtopoint_8cpp"/>
      </node>
      <node id="12">
        <label>src/map/map_draw.cpp</label>
        <link refid="map__draw_8cpp"/>
      </node>
      <node id="16">
        <label>src/missile/missile_cycleonce.cpp</label>
        <link refid="missile__cycleonce_8cpp"/>
      </node>
      <node id="7">
        <label>src/ai/ai_plan.cpp</label>
        <link refid="ai__plan_8cpp"/>
      </node>
      <node id="31">
        <label>src/missile/missile_whirlwind.cpp</label>
        <link refid="missile__whirlwind_8cpp"/>
      </node>
      <node id="6">
        <label>src/action/actions.cpp</label>
        <link refid="actions_8cpp"/>
      </node>
      <node id="3">
        <label>src/action/action_follow.cpp</label>
        <link refid="action__follow_8cpp"/>
      </node>
      <node id="38">
        <label>src/stratagus/stratagus.cpp</label>
        <link refid="stratagus_8cpp"/>
      </node>
      <node id="1">
        <label>src/include/missile.h</label>
        <link refid="missile_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>src/missile/missile_pointtopointcycleonce.cpp</label>
        <link refid="missile__pointtopointcycleonce_8cpp"/>
      </node>
      <node id="29">
        <label>src/missile/missile_straightfly.cpp</label>
        <link refid="missile__straightfly_8cpp"/>
      </node>
      <node id="20">
        <label>src/missile/missile_hit.cpp</label>
        <link refid="missile__hit_8cpp"/>
      </node>
      <node id="17">
        <label>src/missile/missile_deathcoil.cpp</label>
        <link refid="missile__deathcoil_8cpp"/>
      </node>
      <node id="19">
        <label>src/missile/missile_flameshield.cpp</label>
        <link refid="missile__flameshield_8cpp"/>
      </node>
      <node id="26">
        <label>src/missile/missile_pointtopointbounce.cpp</label>
        <link refid="missile__pointtopointbounce_8cpp"/>
      </node>
      <node id="41">
        <label>src/unit/unit_find.cpp</label>
        <link refid="unit__find_8cpp"/>
      </node>
      <node id="24">
        <label>src/missile/missile_pointotpointwithhit.cpp</label>
        <link refid="missile__pointotpointwithhit_8cpp"/>
      </node>
      <node id="2">
        <label>src/action/action_attack.cpp</label>
        <link refid="action__attack_8cpp"/>
      </node>
      <node id="42">
        <label>src/unit/unittype.cpp</label>
        <link refid="unittype_8cpp"/>
      </node>
      <node id="30">
        <label>src/missile/missile_tracer.cpp</label>
        <link refid="missile__tracer_8cpp"/>
      </node>
      <node id="36">
        <label>src/spell/spell_spawnmissile.cpp</label>
        <link refid="spell__spawnmissile_8cpp"/>
      </node>
      <node id="11">
        <label>src/game/savegame.cpp</label>
        <link refid="savegame_8cpp"/>
      </node>
      <node id="22">
        <label>src/missile/missile_none.cpp</label>
        <link refid="missile__none_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classMissileType" prot="public">MissileType</innerclass>
    <innerclass refid="classMissile" prot="public">Missile</innerclass>
    <innerclass refid="classMissileNone" prot="public">MissileNone</innerclass>
    <innerclass refid="classMissilePointToPoint" prot="public">MissilePointToPoint</innerclass>
    <innerclass refid="classMissilePointToPointWithHit" prot="public">MissilePointToPointWithHit</innerclass>
    <innerclass refid="classMissilePointToPointCycleOnce" prot="public">MissilePointToPointCycleOnce</innerclass>
    <innerclass refid="classMissilePointToPointBounce" prot="public">MissilePointToPointBounce</innerclass>
    <innerclass refid="classMissileStay" prot="public">MissileStay</innerclass>
    <innerclass refid="classMissileCycleOnce" prot="public">MissileCycleOnce</innerclass>
    <innerclass refid="classMissileFire" prot="public">MissileFire</innerclass>
    <innerclass refid="classMissileHit" prot="public">MissileHit</innerclass>
    <innerclass refid="classMissileParabolic" prot="public">MissileParabolic</innerclass>
    <innerclass refid="classMissileLandMine" prot="public">MissileLandMine</innerclass>
    <innerclass refid="classMissileWhirlwind" prot="public">MissileWhirlwind</innerclass>
    <innerclass refid="classMissileFlameShield" prot="public">MissileFlameShield</innerclass>
    <innerclass refid="classMissileDeathCoil" prot="public">MissileDeathCoil</innerclass>
    <innerclass refid="classMissileTracer" prot="public">MissileTracer</innerclass>
    <innerclass refid="classMissileClipToTarget" prot="public">MissileClipToTarget</innerclass>
    <innerclass refid="classMissileContinious" prot="public">MissileContinious</innerclass>
    <innerclass refid="classMissileStraightFly" prot="public">MissileStraightFly</innerclass>
    <innerclass refid="classBurningBuildingFrame" prot="public">BurningBuildingFrame</innerclass>
      <sectiondef kind="user-defined">
      <header>missile.h - The missile headerfile.</header>
      <memberdef kind="enum" id="missile_8h_1aaf105ae5beaca1dee30ae54530691fce" prot="public" static="no" strong="no">
        <type></type>
        <name>@16</name>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fceac689eef0d7d1f86c7afbfad40e748e3f" prot="public">
          <name>MissileClassNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fcea8f16357257437e3b045ed7732c73ac5a" prot="public">
          <name>MissileClassPointToPoint</name>
          <briefdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> does nothing. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fcea1d2d791f0ef024ef6532791447884e4c" prot="public">
          <name>MissileClassPointToPointWithHit</name>
          <briefdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> flies from x,y to x1,y1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fcea9558d60667a293f9e32a45d6d0d7fd3b" prot="public">
          <name>MissileClassPointToPointCycleOnce</name>
          <briefdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> flies from x,y to x1,y1 than shows hit animation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fceacb861af272f4565013d00acf04d638de" prot="public">
          <name>MissileClassPointToPointBounce</name>
          <briefdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> flies from x,y to x1,y1 and animates ONCE from start to finish and back. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fcea0ae00a1c572b3f75329df198cf11eba9" prot="public">
          <name>MissileClassStay</name>
          <briefdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> flies from x,y to x1,y1 than bounces three times. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fcea0f0585864ae09f544184a1b84138e39d" prot="public">
          <name>MissileClassCycleOnce</name>
          <briefdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> appears at x,y, does it&apos;s anim and vanishes. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fceafa85f0a2a79404f2a6899d9d87fe997e" prot="public">
          <name>MissileClassFire</name>
          <briefdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> appears at x,y, then cycle through the frames once. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fcea1232f10b8ae7f704291db7cd60005e4c" prot="public">
          <name>MissileClassHit</name>
          <briefdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> doesn&apos;t move, than checks the source unit for HP. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fcea1d8529ed5e3b5f0f4946db1ab9748958" prot="public">
          <name>MissileClassParabolic</name>
          <briefdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> shows the hit points. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fcea3e02ee26beb7792c90c6669b71eea0e6" prot="public">
          <name>MissileClassLandMine</name>
          <briefdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> flies from x,y to x1,y1 using a parabolic path. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fceaaac641a27b6a643def4025e428160b0d" prot="public">
          <name>MissileClassWhirlwind</name>
          <briefdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> wait on x,y until a non-air unit comes by, the explodes. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fceaf049a1b444953c751cd28736a690af13" prot="public">
          <name>MissileClassFlameShield</name>
          <briefdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> appears at x,y, is whirlwind. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fcea441f0bd55b3d08ec05e9b4cbfb275f80" prot="public">
          <name>MissileClassDeathCoil</name>
          <briefdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> surround x,y. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fceaefb3ed9d74c95385417f503f532cc7b6" prot="public">
          <name>MissileClassTracer</name>
          <briefdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> is death coil. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fceabe8f8f62fefb5196f9f6f4f554c62136" prot="public">
          <name>MissileClassClipToTarget</name>
          <briefdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> seeks towards to target unit. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fceada70ba4c73a440ada692336bf9e55d90" prot="public">
          <name>MissileClassContinious</name>
          <briefdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> remains clipped to target&apos;s current goal and plays his animation once. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="missile_8h_1aaf105ae5beaca1dee30ae54530691fcea375af0d062475fbc47d8225a8f5c7b06" prot="public">
          <name>MissileClassStraightFly</name>
          <briefdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> stays and plays it&apos;s animation several times. </para>
          </briefdescription>
          <detaileddescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> flies from x,y to x1,y1 then continues to fly, until incompatible terrain is detected </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Missile-class this defines how a missile-type reacts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="321" column="6" bodyfile="src/include/missile.h" bodystart="321" bodyend="340"/>
      </memberdef>
      <memberdef kind="variable" id="missile_8h_1a49a0241ff6b003a0d3b73b426498676d" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classBurningBuildingFrame" kindref="compound">BurningBuildingFrame</ref> * &gt;</type>
        <definition>std::vector&lt;BurningBuildingFrame *&gt; BurningBuildingFrames</definition>
        <argsstring></argsstring>
        <name>BurningBuildingFrames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="579" column="20" bodyfile="src/missile/missile.cpp" bodystart="73" bodyend="-1" declfile="src/include/missile.h" declline="579" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1a52c79077f4a6152172bfdac3fb3624e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MissileInitMove</definition>
        <argsstring>(Missile &amp;missile, bool pointToPoint=false)</argsstring>
        <name>MissileInitMove</name>
        <param>
          <type><ref refid="classMissile" kindref="compound">Missile</ref> &amp;</type>
          <declname>missile</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pointToPoint</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init the move.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>missile</parametername>
</parameternamelist>
<parameterdescription>
<para>missile to initialise for movement.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if goal is reached, false else. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="465" column="13" bodyfile="src/missile/missile.cpp" bodystart="641" bodyend="665" declfile="src/include/missile.h" declline="465" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1ad8fb45382ab718d325c6643895f5df0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PointToPointMissile</definition>
        <argsstring>(Missile &amp;missile)</argsstring>
        <name>PointToPointMissile</name>
        <param>
          <type><ref refid="classMissile" kindref="compound">Missile</ref> &amp;</type>
          <declname>missile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle point to point missile.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>missile</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if goal is reached, false else. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="466" column="13" bodyfile="src/missile/missile.cpp" bodystart="748" bodyend="822" declfile="src/include/missile.h" declline="466" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1acc5cd915c99dbdf66d2dfce228f17f20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void MissileHandlePierce</definition>
        <argsstring>(Missile &amp;missile, const Vec2i &amp;pos)</argsstring>
        <name>MissileHandlePierce</name>
        <param>
          <type><ref refid="classMissile" kindref="compound">Missile</ref> &amp;</type>
          <declname>missile</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="467" column="13" bodyfile="src/missile/missile.cpp" bodystart="667" bodyend="682" declfile="src/include/missile.h" declline="467" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1a5d6b40174691b62c01ad25148fa9523f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MissileHandleBlocking</definition>
        <argsstring>(Missile &amp;missile, const PixelPos &amp;position)</argsstring>
        <name>MissileHandleBlocking</name>
        <param>
          <type><ref refid="classMissile" kindref="compound">Missile</ref> &amp;</type>
          <declname>missile</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a20cc8627b3e52515a26778e489bda2ae" kindref="member">PixelPos</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="468" column="13" bodyfile="src/missile/missile.cpp" bodystart="684" bodyend="739" declfile="src/include/missile.h" declline="468" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1a859bc3eb1247a8c59cbaff22fddccf1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void MissileCclRegister</definition>
        <argsstring>()</argsstring>
        <name>MissileCclRegister</name>
        <briefdescription>
<para>Burning building frames. </para>
        </briefdescription>
        <detaileddescription>
<para>register ccl features</para>
<para>Register CCL features for missile-type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="588" column="13" bodyfile="src/missile/script_missile.cpp" bodystart="423" bodyend="429" declfile="src/include/missile.h" declline="588" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1a71219392e4b2a9b16eabc1c049fa64e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void LoadMissileSprites</definition>
        <argsstring>()</argsstring>
        <name>LoadMissileSprites</name>
        <briefdescription>
<para>load all missile sprites </para>
        </briefdescription>
        <detaileddescription>
<para>Load the graphics for all missiles types </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="593" column="13" bodyfile="src/missile/missile.cpp" bodystart="103" bodyend="110" declfile="src/include/missile.h" declline="593" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1af52a4aa3e35c9f13d2dcc34c8cc36401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMissileType" kindref="compound">MissileType</ref> *</type>
        <definition>MissileType* NewMissileTypeSlot</definition>
        <argsstring>(const std::string &amp;ident)</argsstring>
        <name>NewMissileTypeSlot</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ident</declname>
        </param>
        <briefdescription>
<para>allocate an empty missile-type slot </para>
        </briefdescription>
        <detaileddescription>
<para>Allocate an empty missile-type slot.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ident</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier to identify the slot.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New allocated (zeroed) missile-type pointer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="595" column="20" bodyfile="src/missile/missile.cpp" bodystart="137" bodyend="143" declfile="src/include/missile.h" declline="595" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1a8cacc0d3a5718b588f0b238674acc2b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMissileType" kindref="compound">MissileType</ref> *</type>
        <definition>MissileType* MissileTypeByIdent</definition>
        <argsstring>(const std::string &amp;ident)</argsstring>
        <name>MissileTypeByIdent</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ident</declname>
        </param>
        <briefdescription>
<para>Get missile-type by ident. </para>
        </briefdescription>
        <detaileddescription>
<para>Get <ref refid="classMissile" kindref="compound">Missile</ref> type by identifier.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ident</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classMissile" kindref="compound">Missile</ref> type pointer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="597" column="20" bodyfile="src/missile/missile.cpp" bodystart="118" bodyend="128" declfile="src/include/missile.h" declline="597" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1aef87c8f5233760b863dba69d859f725b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMissile" kindref="compound">Missile</ref> *</type>
        <definition>Missile* MakeMissile</definition>
        <argsstring>(const MissileType &amp;mtype, const PixelPos &amp;startPos, const PixelPos &amp;destPos)</argsstring>
        <name>MakeMissile</name>
        <param>
          <type>const <ref refid="classMissileType" kindref="compound">MissileType</ref> &amp;</type>
          <declname>mtype</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a20cc8627b3e52515a26778e489bda2ae" kindref="member">PixelPos</ref> &amp;</type>
          <declname>startPos</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a20cc8627b3e52515a26778e489bda2ae" kindref="member">PixelPos</ref> &amp;</type>
          <declname>destPos</declname>
        </param>
        <briefdescription>
<para>create a missile </para>
        </briefdescription>
        <detaileddescription>
<para>Create a new global missile at (x,y).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mtype</parametername>
</parameternamelist>
<parameterdescription>
<para>Type pointer of missile. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startPos</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> start point in pixel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destPos</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> destination point in pixel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>created missile. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="599" column="16" bodyfile="src/missile/missile.cpp" bodystart="257" bodyend="263" declfile="src/include/missile.h" declline="599" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1a77e92e1f203dcb78c7dd60f3b6bd826e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMissile" kindref="compound">Missile</ref> *</type>
        <definition>Missile* MakeLocalMissile</definition>
        <argsstring>(const MissileType &amp;mtype, const PixelPos &amp;startPos, const PixelPos &amp;destPos)</argsstring>
        <name>MakeLocalMissile</name>
        <param>
          <type>const <ref refid="classMissileType" kindref="compound">MissileType</ref> &amp;</type>
          <declname>mtype</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a20cc8627b3e52515a26778e489bda2ae" kindref="member">PixelPos</ref> &amp;</type>
          <declname>startPos</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a20cc8627b3e52515a26778e489bda2ae" kindref="member">PixelPos</ref> &amp;</type>
          <declname>destPos</declname>
        </param>
        <briefdescription>
<para>create a local missile </para>
        </briefdescription>
        <detaileddescription>
<para>Create a new local missile at (x,y).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mtype</parametername>
</parameternamelist>
<parameterdescription>
<para>Type pointer of missile. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startPos</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> start point in pixel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destPos</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> destination point in pixel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>created missile. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="601" column="16" bodyfile="src/missile/missile.cpp" bodystart="274" bodyend="281" declfile="src/include/missile.h" declline="601" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1a6ccd0309de113328c4793e5740464e60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CalculateDamage</definition>
        <argsstring>(const CUnit &amp;attacker, const CUnit &amp;goal, const NumberDesc *formula)</argsstring>
        <name>CalculateDamage</name>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>attacker</declname>
        </param>
        <param>
          <type>const <ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>goal</declname>
        </param>
        <param>
          <type>const <ref refid="structNumberDesc" kindref="compound">NumberDesc</ref> *</type>
          <declname>formula</declname>
        </param>
        <briefdescription>
<para>Calculates damage done to goal by attacker using formula. </para>
        </briefdescription>
        <detaileddescription>
<para>Calculate damage.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attacker</parametername>
</parameternamelist>
<parameterdescription>
<para>Attacker. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>goal</parametername>
</parameternamelist>
<parameterdescription>
<para>Goal unit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>formula</parametername>
</parameternamelist>
<parameterdescription>
<para>Formula used to calculate damage.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>damage produces on goal. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="604" column="12" bodyfile="src/missile/missile.cpp" bodystart="325" bodyend="341" declfile="src/include/missile.h" declline="604" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1a5c6d1961c7b8d169c293c7d4fa75a46e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void FireMissile</definition>
        <argsstring>(CUnit &amp;unit, CUnit *goal, const Vec2i &amp;goalPos)</argsstring>
        <name>FireMissile</name>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <param>
          <type><ref refid="classCUnit" kindref="compound">CUnit</ref> *</type>
          <declname>goal</declname>
        </param>
        <param>
          <type>const <ref refid="vec2i_8h_1a5824c689f07870d960ebe92af31f90a8" kindref="member">Vec2i</ref> &amp;</type>
          <declname>goalPos</declname>
        </param>
        <briefdescription>
<para>fire a missile </para>
        </briefdescription>
        <detaileddescription>
<para>Fire missile.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>Unit that fires the missile. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="606" column="13" bodyfile="src/missile/missile.cpp" bodystart="348" bodyend="440" declfile="src/include/missile.h" declline="606" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1a3628143647814f805150d65858f9dec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void FindAndSortMissiles</definition>
        <argsstring>(const CViewport &amp;vp, std::vector&lt; Missile * &gt; &amp;table)</argsstring>
        <name>FindAndSortMissiles</name>
        <param>
          <type>const <ref refid="classCViewport" kindref="compound">CViewport</ref> &amp;</type>
          <declname>vp</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classMissile" kindref="compound">Missile</ref> * &gt; &amp;</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sort visible missiles on map for display.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vp</parametername>
</parameternamelist>
<parameterdescription>
<para>Viewport pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>OUT : array of missile to display sorted by DrawLevel. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="608" column="13" bodyfile="src/missile/missile.cpp" bodystart="577" bodyend="602" declfile="src/include/missile.h" declline="608" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1a1791fab3e543e0c47b2f1985c24fedc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void MissileActions</definition>
        <argsstring>()</argsstring>
        <name>MissileActions</name>
        <briefdescription>
<para>handle all missiles </para>
        </briefdescription>
        <detaileddescription>
<para>Handle all missile actions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="611" column="13" bodyfile="src/missile/missile.cpp" bodystart="1202" bodyend="1206" declfile="src/include/missile.h" declline="611" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1a3aa1b33917594a43b13dd6b8953b41cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ViewPointDistanceToMissile</definition>
        <argsstring>(const Missile &amp;missile)</argsstring>
        <name>ViewPointDistanceToMissile</name>
        <param>
          <type>const <ref refid="classMissile" kindref="compound">Missile</ref> &amp;</type>
          <declname>missile</declname>
        </param>
        <briefdescription>
<para>distance from view point to missile </para>
        </briefdescription>
        <detaileddescription>
<para>Calculate distance from view-point to missile.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>missile</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classMissile" kindref="compound">Missile</ref> pointer for distance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the computed value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="613" column="12" bodyfile="src/missile/missile.cpp" bodystart="1215" bodyend="1221" declfile="src/include/missile.h" declline="613" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1aaf46e35f3e279ecce3b7b171f7b6159c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMissileType" kindref="compound">MissileType</ref> *</type>
        <definition>MissileType* MissileBurningBuilding</definition>
        <argsstring>(int percent)</argsstring>
        <name>MissileBurningBuilding</name>
        <param>
          <type>int</type>
          <declname>percent</declname>
        </param>
        <briefdescription>
<para>Get the burning building missile based on hp percent. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the burning building missile based on hp percent.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>percent</parametername>
</parameternamelist>
<parameterdescription>
<para>HP percent</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the missile used for burning. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="616" column="20" bodyfile="src/missile/missile.cpp" bodystart="1230" bodyend="1239" declfile="src/include/missile.h" declline="616" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1ac2e59a201adb76fced78383cd2d6c87e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void SaveMissiles</definition>
        <argsstring>(CFile &amp;file)</argsstring>
        <name>SaveMissiles</name>
        <param>
          <type><ref refid="classCFile" kindref="compound">CFile</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Save missiles. </para>
        </briefdescription>
        <detaileddescription>
<para>Save the state missiles to file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>Output file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="619" column="13" bodyfile="src/missile/missile.cpp" bodystart="1289" bodyend="1302" declfile="src/include/missile.h" declline="619" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1a8c5a9c873aae5337f76e343d02829bfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InitMissileTypes</definition>
        <argsstring>()</argsstring>
        <name>InitMissileTypes</name>
        <briefdescription>
<para>Initialize missile-types. </para>
        </briefdescription>
        <detaileddescription>
<para>Initialize missile-types. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="622" column="13" bodyfile="src/missile/missile.cpp" bodystart="1323" bodyend="1328" declfile="src/include/missile.h" declline="622" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1abae33f614d10f2c87f2385122a7e5d6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CleanMissileTypes</definition>
        <argsstring>()</argsstring>
        <name>CleanMissileTypes</name>
        <briefdescription>
<para>Clean missile-types. </para>
        </briefdescription>
        <detaileddescription>
<para>Clean up missile-types. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="624" column="13" bodyfile="src/missile/missile.cpp" bodystart="1364" bodyend="1370" declfile="src/include/missile.h" declline="624" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1abc7c9b66e53b7d998f2a4d7b99149293" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void InitMissiles</definition>
        <argsstring>()</argsstring>
        <name>InitMissiles</name>
        <briefdescription>
<para>Initialize missiles. </para>
        </briefdescription>
        <detaileddescription>
<para>Initialize missiles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="626" column="13" bodyfile="src/missile/missile.cpp" bodystart="1375" bodyend="1377" declfile="src/include/missile.h" declline="626" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1a03d67e651d2ab20b1f327f825715154a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void CleanMissiles</definition>
        <argsstring>()</argsstring>
        <name>CleanMissiles</name>
        <briefdescription>
<para>Clean missiles. </para>
        </briefdescription>
        <detaileddescription>
<para>Clean up missiles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="628" column="13" bodyfile="src/missile/missile.cpp" bodystart="1390" bodyend="1402" declfile="src/include/missile.h" declline="628" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="missile_8h_1af9e49ee1a2505883ad32ea140cd8c103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shaders_8cpp_1a7206f6ae7a09ba9ca63f80e09015869c" kindref="member">void</ref></type>
        <definition>void FreeBurningBuildingFrames</definition>
        <argsstring>()</argsstring>
        <name>FreeBurningBuildingFrames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/missile.h" line="630" column="13" bodyfile="src/missile/missile.cpp" bodystart="1404" bodyend="1411" declfile="src/include/missile.h" declline="630" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/include/missile.h"/>
  </compounddef>
</doxygen>
